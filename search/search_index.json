{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"SpikeGLX Download Page Synchronized acquisition from imec neural probes and NI-DAQ devices. Get compiled apps, support and help stuff on this page. See what's new on the site here . The source code repo is here . This site supports prototype and currently shipping commercial products. The latest commercial PXI-based components are: Hardware: Neuropixels 1.0, 2.0, NHP, UHD, Quad-base . Software: SpikeGLX API4 . What Is SpikeGLX? SpikeGLX is a recording system for extracellular neural probes. The emphasis is on concurrent synchronous recording from high channel count probes together with numerous auxiliary analog and digital channels: Concurrent, synchronized acquisition from imec probes, OneBoxes and NI-DAQ devices. Supports all Neuropixels probe generations and types. Supports HHMI/Whisper system. Integration with live anatomical tracking: Pinpoint ; Trajectory Explorer . Flexible visualization, filtering and sorting tools. Programmable triggering. Remote control and extensibility via MATLAB, C++, C, C#, Python. Powerful offline viewing and editing. In addition to the SpikeGLX acquisition application, we provide a large complement of post-processing tools that are also found on this page. Our tool set is maintained and updated in lock step with SpikeGLX to make sure the tools work together correctly and have full awareness of all the flexibility that SpikeGLX provides in selecting parameters and making custom output files. Note: If you want to craft your own post-processing tools, we strongly advise that you incorporate or at least consult the metadata parsing methods we have provided for both Python and MATLAB: SpikeGLX_Datafile_Tools . System Requirements (What to Buy) Requirements differ according to platform: For PXI or OneBox setups . For earlier (Xilinx) setups . OneBox Notes: Imec began selling OneBoxes October 5, 2024. Get data sheets and submit purchase requests at the Neuropixels site . OneBox does not depend upon any PXI hardware, hence, it does not require enclustra drivers. Important!: The enclustra drivers required for PXI do not work with AMD-based computers. The PXI-based imec hardware can only run on computers using Intel CPUs and chipsets. Important!: Older imec modules (shipped before Q2 2023) are programmed to work only in X4 and higher chassis slots. Learn more about this issue on the site's Firmware tab . Latest Application Downloads SpikeGLX API4 (PXI, OneBox, all probe types later than 3A) : Latest release highlights: Replaces all previous releases. Supports OneBox. Supports all probes including Quadbase. Does whole probe activity surveys. Has newer graphical site selection tools. Supports the (now separate) {MATLAB, C++, C, C#, Python} remote SDKs. Has many GUI enhancements and better help. Important: Please read the README file in your download. Release 20250915-api4 ... Readme : Quadbase, API4, Qt6, api v4.1.3 Release downloads come with two executables : SpikeGLX.exe : Runs {imec probes, OneBox, NI, FileViewer}, but you need to install NI drivers to run it . SpikeGLX_NISIM.exe : Runs {imec probes, OneBox, FileViewer} but not NI hardware. Does not need NI drivers . Use this on your laptop to review data and plan new runs. Suggested organization: Create folder 'SpikeGLX' on your desktop or C:\\ then download/unzip associated stuff into it. It's fine to have several versions there as long as you run one at a time: SpikeGLX\\ Release_v20250915-api4.zip Release_v20250325-phase30.zip Release_v20250915-api4\\ Release_v20250325-phase30\\ Drivers\\ Enclustra_Windows_10&11\\ Tools\\ Etc.\\ PXI Enclustra Drivers These required driver files are not included in your SpikeGLX release. Click the link below for your Windows OS version. Unzip the folder into your local folder of SpikeGLX-related stuff. Follow the installation ReadMe in the download. Terminology: 'Enclustra' is a company that markets other vendor's FPGAs along with development and support tools. There are several FPGAs used in the Neuropixels hardware, including a Xilinx Zynq model, often referred to as 'the enclustra'. Windows 7 & 8 Windows 10 & 11 Important!: The enclustra drivers required for PXI do not work with AMD-based computers. The PXI-based imec hardware can only run on computers using Intel CPUs and chipsets. Remote Control/Scripting SDK Note: SDK = Software Development Kit API = Application Programming Interface SpikeGLX can be driven in real time by your own remote Windows or Linux application. The API uses the TCP/IP protocol. Your custom application can run on a separate computer (on the same network as SpikeGLX) or on the same computer. The API allows you to: Set/get parameters. Start/stop runs. Fetch data with low latency (<4 ms on same computer). Do many things you can do from the SpikeGLX GUI. There are two SDKs: SpikeGLX-MATLAB-SDK : For MATLAB programs. SpikeGLX-CPP-SDK : For C++, C, C#, Python. Get these at the source code repo here . HelloSGLX (Windows) The above SDKs are full featured and support developers writing in MATLAB, C++, C, C# and Python. If you are writing in anything else, you can use HelloSGLX instead. This is a command-line application that stands in between your script and SpikeGLX. For each command or query, your script uses its shell commands to launch HelloSGLX as a separate process. This is too slow for real-time data interaction, but still supports easy integration of SpikeGLX into an automated workflow. You can get/set run parameters and start/stop runs and file writing. Get it here . Note that all of these SDKs require SpikeGLX 20220101 or later. Command-line Tool Installation CatGT TPrime NIScaler C_Waves OverStrike These come as zip files. To install one: Extract the contained folder to any destination you like. Keep the folder contents together, as you do with the SpikeGLX folder. Read the contained ReadMe.txt for instructions. Look at the runit.bat example batch script. CatGT CatGT is a command-line tool that does the following offline operations on SpikeGLX output files (all probe types): Optionally join trials with given run_name and index ranges [ga,gb] [ta,tb]... ...Or run on any individual file. Optionally apply demultiplexing corrections. Optionally apply band-pass and CAR filters. Optionally edit out saturation artifacts. By default extract tables of sync waveform edge times to drive TPrime. Optionally extract tables of other nonneural event times to be aligned with spikes. Optionally join the above outputs across different runs (supercat feature). CatGT: Tshift, CAR, Gfix CatGT 4.9 (Windows) CatGT 4.9 (Linux) CatGT ReadMe TPrime TPrime is a command-line tool that maps event times (all probe types): Map time from one SpikeGLX data stream to any other. Translate all events to a single common timeline. Uses sync edges to achieve 1 to 2 sample accuracy. Maps TTL events extracted using CatGT. Maps spike times from any sorter. Sync: Aligning with Edges. TPrime 1.8 (Windows) TPrime 1.8 (Linux) Post-processing Tools NIScaler command-line tool to calibrate/rescale NI analog voltages acquired with SpikeGLX versions earlier than 20220101. SpikeGLX versions 20220101 and later automatically acquire scaled data. Note: Only the Windows NIScaler tool can scan NI hardware and create calibration files. Both tools can apply calibration files to existing runs. Measured correction size: {6133=0%, 6363=5%, 6341=7%}. NIScaler 1.1 (Windows) NIScaler 1.1 (Linux) MATLAB and Python tools for parsing SpikeGLX meta and binary datafiles (supports all probes except quad-base). SpikeGLX_Datafile_Tools MATLAB and Python tools that augment SpikeGLX metadata: Generates channel map files needed by Kilosort and JRClust (all SpikeGLX versions). Makes SpikeGLX data compatible with SpikeInterface (needed for versions prior to 20230326). Works for all probe types. SGLXMetaToCoords Average cluster waveforms and statistics command-line tool. This can be run separately like CatGT or used with ecephys_spike_sorting . C_Waves 2.9 (Windows) C_Waves 2.9 (Linux) Jennifer Colonell's version of the Allen Institute ecephys_spike_sorting pipeline. This Python script-driven pipeline chains together: CatGT, KS2, Noise Cluster Tagging, C_Waves, QC metrics, TPrime. ecephys_spike_sorting Overwrite nasty parts of your binary data with zeros or lines using OverStrike. This helps remove artifacts that are too tricky for CatGT. OverStrike 1.1 (Windows) OverStrike 1.1 (Linux) Interesting Map Files Tetrodes Bank Selection 3B (tetrodes covering banks zero and one) Long Column Bank Selection 3B (one column through banks zero and one) Related help: IMRO Table Anatomy Metadata Guides Descriptions of metafile items for each phase: Metadata_Help (latest) Metadata_20 Metadata_3B2 (NP 1.0) Metadata_3B1 Metadata_3A Questions or Problems? 1) For general How-To questions please consult the help documents and videos on this site, or pose your question to the Neuropixels slack channel so everyone can learn together. If there is any problem with the slack channel invitation, email the administrator . 2) If the community can't help, try emailing me directly. I'm also happy to hear about new feature requests, and very eager to hear about suspected bugs. This is the best way to let me know there's a possible issue without causing alarm in the whole community. You can get my email from the About Box in the SpikeGLX application. 3) As a last resort you can register your observations of serious bugs/mistakes/errors using the SpikeGLX issue list on GitHub. Help Neuropixels Slack Channel Neuropixels Support Page Noise: Learn How To Solder Sharpening Apparatus (MS.Word.docx) PXIe Quickstart OneBox Quickstart Quadbase Quickstart SpikeGLX UserManual SpikeGLX Dirs and Files SpikeGLX QuickRef (MS.PowerPoint) SpikeGLX UCL Course 2024 (MS.PowerPoint) SpikeGLX FAQ Metadata Help CatGT ReadMe CatGT: Tshift, CAR, Gfix Sync: Aligning with Edges IMRO Table Anatomy How-to Videos Handle & Solder Sharpen Probe Install Software First Run Sync Graphical Probe IMRO Editor Whole-Probe Activity Survey Licensing Use is subject to Janelia Research Campus Software Copyright terms: http://license.janelia.org/license . QLed components are subject to GNU Library GPL v2.0 terms, which are described here: https://github.com/billkarsh/SpikeGLX/blob/master/QLed-LGPLv2-LICENSE.txt . fin","title":"Home"},{"location":"#spikeglx-download-page","text":"Synchronized acquisition from imec neural probes and NI-DAQ devices. Get compiled apps, support and help stuff on this page. See what's new on the site here . The source code repo is here . This site supports prototype and currently shipping commercial products. The latest commercial PXI-based components are: Hardware: Neuropixels 1.0, 2.0, NHP, UHD, Quad-base . Software: SpikeGLX API4 .","title":"SpikeGLX Download Page"},{"location":"#what-is-spikeglx","text":"SpikeGLX is a recording system for extracellular neural probes. The emphasis is on concurrent synchronous recording from high channel count probes together with numerous auxiliary analog and digital channels: Concurrent, synchronized acquisition from imec probes, OneBoxes and NI-DAQ devices. Supports all Neuropixels probe generations and types. Supports HHMI/Whisper system. Integration with live anatomical tracking: Pinpoint ; Trajectory Explorer . Flexible visualization, filtering and sorting tools. Programmable triggering. Remote control and extensibility via MATLAB, C++, C, C#, Python. Powerful offline viewing and editing. In addition to the SpikeGLX acquisition application, we provide a large complement of post-processing tools that are also found on this page. Our tool set is maintained and updated in lock step with SpikeGLX to make sure the tools work together correctly and have full awareness of all the flexibility that SpikeGLX provides in selecting parameters and making custom output files. Note: If you want to craft your own post-processing tools, we strongly advise that you incorporate or at least consult the metadata parsing methods we have provided for both Python and MATLAB: SpikeGLX_Datafile_Tools .","title":"What Is SpikeGLX?"},{"location":"#system-requirements","text":"(What to Buy) Requirements differ according to platform: For PXI or OneBox setups . For earlier (Xilinx) setups . OneBox Notes: Imec began selling OneBoxes October 5, 2024. Get data sheets and submit purchase requests at the Neuropixels site . OneBox does not depend upon any PXI hardware, hence, it does not require enclustra drivers. Important!: The enclustra drivers required for PXI do not work with AMD-based computers. The PXI-based imec hardware can only run on computers using Intel CPUs and chipsets. Important!: Older imec modules (shipped before Q2 2023) are programmed to work only in X4 and higher chassis slots. Learn more about this issue on the site's Firmware tab .","title":"System Requirements"},{"location":"#latest-application-downloads","text":"SpikeGLX API4 (PXI, OneBox, all probe types later than 3A) : Latest release highlights: Replaces all previous releases. Supports OneBox. Supports all probes including Quadbase. Does whole probe activity surveys. Has newer graphical site selection tools. Supports the (now separate) {MATLAB, C++, C, C#, Python} remote SDKs. Has many GUI enhancements and better help. Important: Please read the README file in your download. Release 20250915-api4 ... Readme : Quadbase, API4, Qt6, api v4.1.3 Release downloads come with two executables : SpikeGLX.exe : Runs {imec probes, OneBox, NI, FileViewer}, but you need to install NI drivers to run it . SpikeGLX_NISIM.exe : Runs {imec probes, OneBox, FileViewer} but not NI hardware. Does not need NI drivers . Use this on your laptop to review data and plan new runs. Suggested organization: Create folder 'SpikeGLX' on your desktop or C:\\ then download/unzip associated stuff into it. It's fine to have several versions there as long as you run one at a time: SpikeGLX\\ Release_v20250915-api4.zip Release_v20250325-phase30.zip Release_v20250915-api4\\ Release_v20250325-phase30\\ Drivers\\ Enclustra_Windows_10&11\\ Tools\\ Etc.\\","title":"Latest Application Downloads"},{"location":"#pxi-enclustra-drivers","text":"These required driver files are not included in your SpikeGLX release. Click the link below for your Windows OS version. Unzip the folder into your local folder of SpikeGLX-related stuff. Follow the installation ReadMe in the download. Terminology: 'Enclustra' is a company that markets other vendor's FPGAs along with development and support tools. There are several FPGAs used in the Neuropixels hardware, including a Xilinx Zynq model, often referred to as 'the enclustra'. Windows 7 & 8 Windows 10 & 11 Important!: The enclustra drivers required for PXI do not work with AMD-based computers. The PXI-based imec hardware can only run on computers using Intel CPUs and chipsets.","title":"PXI Enclustra Drivers"},{"location":"#remote-controlscripting-sdk","text":"Note: SDK = Software Development Kit API = Application Programming Interface SpikeGLX can be driven in real time by your own remote Windows or Linux application. The API uses the TCP/IP protocol. Your custom application can run on a separate computer (on the same network as SpikeGLX) or on the same computer. The API allows you to: Set/get parameters. Start/stop runs. Fetch data with low latency (<4 ms on same computer). Do many things you can do from the SpikeGLX GUI. There are two SDKs: SpikeGLX-MATLAB-SDK : For MATLAB programs. SpikeGLX-CPP-SDK : For C++, C, C#, Python. Get these at the source code repo here .","title":"Remote Control/Scripting SDK"},{"location":"#hellosglx-windows","text":"The above SDKs are full featured and support developers writing in MATLAB, C++, C, C# and Python. If you are writing in anything else, you can use HelloSGLX instead. This is a command-line application that stands in between your script and SpikeGLX. For each command or query, your script uses its shell commands to launch HelloSGLX as a separate process. This is too slow for real-time data interaction, but still supports easy integration of SpikeGLX into an automated workflow. You can get/set run parameters and start/stop runs and file writing. Get it here . Note that all of these SDKs require SpikeGLX 20220101 or later.","title":"HelloSGLX (Windows)"},{"location":"#command-line-tool-installation","text":"CatGT TPrime NIScaler C_Waves OverStrike These come as zip files. To install one: Extract the contained folder to any destination you like. Keep the folder contents together, as you do with the SpikeGLX folder. Read the contained ReadMe.txt for instructions. Look at the runit.bat example batch script.","title":"Command-line Tool Installation"},{"location":"#catgt","text":"CatGT is a command-line tool that does the following offline operations on SpikeGLX output files (all probe types): Optionally join trials with given run_name and index ranges [ga,gb] [ta,tb]... ...Or run on any individual file. Optionally apply demultiplexing corrections. Optionally apply band-pass and CAR filters. Optionally edit out saturation artifacts. By default extract tables of sync waveform edge times to drive TPrime. Optionally extract tables of other nonneural event times to be aligned with spikes. Optionally join the above outputs across different runs (supercat feature). CatGT: Tshift, CAR, Gfix CatGT 4.9 (Windows) CatGT 4.9 (Linux) CatGT ReadMe","title":"CatGT"},{"location":"#tprime","text":"TPrime is a command-line tool that maps event times (all probe types): Map time from one SpikeGLX data stream to any other. Translate all events to a single common timeline. Uses sync edges to achieve 1 to 2 sample accuracy. Maps TTL events extracted using CatGT. Maps spike times from any sorter. Sync: Aligning with Edges. TPrime 1.8 (Windows) TPrime 1.8 (Linux)","title":"TPrime"},{"location":"#post-processing-tools","text":"NIScaler command-line tool to calibrate/rescale NI analog voltages acquired with SpikeGLX versions earlier than 20220101. SpikeGLX versions 20220101 and later automatically acquire scaled data. Note: Only the Windows NIScaler tool can scan NI hardware and create calibration files. Both tools can apply calibration files to existing runs. Measured correction size: {6133=0%, 6363=5%, 6341=7%}. NIScaler 1.1 (Windows) NIScaler 1.1 (Linux) MATLAB and Python tools for parsing SpikeGLX meta and binary datafiles (supports all probes except quad-base). SpikeGLX_Datafile_Tools MATLAB and Python tools that augment SpikeGLX metadata: Generates channel map files needed by Kilosort and JRClust (all SpikeGLX versions). Makes SpikeGLX data compatible with SpikeInterface (needed for versions prior to 20230326). Works for all probe types. SGLXMetaToCoords Average cluster waveforms and statistics command-line tool. This can be run separately like CatGT or used with ecephys_spike_sorting . C_Waves 2.9 (Windows) C_Waves 2.9 (Linux) Jennifer Colonell's version of the Allen Institute ecephys_spike_sorting pipeline. This Python script-driven pipeline chains together: CatGT, KS2, Noise Cluster Tagging, C_Waves, QC metrics, TPrime. ecephys_spike_sorting Overwrite nasty parts of your binary data with zeros or lines using OverStrike. This helps remove artifacts that are too tricky for CatGT. OverStrike 1.1 (Windows) OverStrike 1.1 (Linux)","title":"Post-processing Tools"},{"location":"#interesting-map-files","text":"Tetrodes Bank Selection 3B (tetrodes covering banks zero and one) Long Column Bank Selection 3B (one column through banks zero and one) Related help: IMRO Table Anatomy","title":"Interesting Map Files"},{"location":"#metadata-guides","text":"Descriptions of metafile items for each phase: Metadata_Help (latest) Metadata_20 Metadata_3B2 (NP 1.0) Metadata_3B1 Metadata_3A","title":"Metadata Guides"},{"location":"#questions-or-problems","text":"1) For general How-To questions please consult the help documents and videos on this site, or pose your question to the Neuropixels slack channel so everyone can learn together. If there is any problem with the slack channel invitation, email the administrator . 2) If the community can't help, try emailing me directly. I'm also happy to hear about new feature requests, and very eager to hear about suspected bugs. This is the best way to let me know there's a possible issue without causing alarm in the whole community. You can get my email from the About Box in the SpikeGLX application. 3) As a last resort you can register your observations of serious bugs/mistakes/errors using the SpikeGLX issue list on GitHub.","title":"Questions or Problems?"},{"location":"#help","text":"Neuropixels Slack Channel Neuropixels Support Page Noise: Learn How To Solder Sharpening Apparatus (MS.Word.docx) PXIe Quickstart OneBox Quickstart Quadbase Quickstart SpikeGLX UserManual SpikeGLX Dirs and Files SpikeGLX QuickRef (MS.PowerPoint) SpikeGLX UCL Course 2024 (MS.PowerPoint) SpikeGLX FAQ Metadata Help CatGT ReadMe CatGT: Tshift, CAR, Gfix Sync: Aligning with Edges IMRO Table Anatomy","title":"Help"},{"location":"#how-to-videos","text":"Handle & Solder Sharpen Probe Install Software First Run Sync Graphical Probe IMRO Editor Whole-Probe Activity Survey","title":"How-to Videos"},{"location":"#licensing","text":"Use is subject to Janelia Research Campus Software Copyright terms: http://license.janelia.org/license . QLed components are subject to GNU Library GPL v2.0 terms, which are described here: https://github.com/billkarsh/SpikeGLX/blob/master/QLed-LGPLv2-LICENSE.txt . fin","title":"Licensing"},{"location":"firmware/","text":"Firmware FIX: Imec Module Doesn't Work In My Chassis You've powered everything off as instructed, installed your imec basestation module into a chassis slot and powered everything on again. You get a red module status light; the module isn't recognized at all... It could be a 1-lane ( X1 ) slot. In February 2022 we've encountered the fact that not all PXIe chassis slots are the same with respect to bandwidth. They come in X1, X2, X4, X8, X16, X32. X1 is sufficient for up to 250 MB/s, which is completely adequate for an imec module. However, imec originally designed the module firmware for X4 and higher slots. Modules have two copies of the firmware. The normal/working copy is loaded, unless you power-up with the ISP button depressed, in which case the golden image is loaded. Note the golden image is a backup copy in case the working copy is corrupted. In roughly Q2 2022, imec began shipping modules with an X1-compatible working image, but not an X1-compatible golden image. By Q2 2023, both images were X1-compatible. What if you have an older module and a newer NI chassis, for example, a 1083 with five (X1) slots, a 1088 with five (X1) and three (X4) slots, or a Keysight M9005A that has only X1 slots? There's a firmware solution to fix the issue, but note the following: You have to upgrade to an api4 release; get the latest. To update the module firmware for X1 compatibility, you first have to install it into an X4 or higher slot so you can talk to it... Check if your chassis design includes at least some X4+ slots. It can be truly difficult to find that out. NI doesn't mention anything about that in most chassis 'Datasheets' or 'Specifications.' Rather, it's in the 'User Guide' for some models. If you don't have any X4+ slots, maybe a neighbor lab can let you reprogram a module in their chassis. The NI 1088 is a popular NI choice; the X1 slots are {2,3,5,7,9}, the X4 slots are {4,6,8}. SpikeGLX Downloads Include Matched Firmware Each download of SpikeGLX comes with matching firmware. You can revert to earlier SpikeGLX versions if desired, and of course you update to newer SpikeGLX versions... In all cases, when you change SpikeGLX, you should be using the firmware that was included with that SpikeGLX download. Note that more recent SpikeGLX versions will tell you if your firmware is currently correct or not. fin","title":"Firmware"},{"location":"firmware/#firmware","text":"","title":"Firmware"},{"location":"firmware/#fix-imec-module-doesnt-work-in-my-chassis","text":"You've powered everything off as instructed, installed your imec basestation module into a chassis slot and powered everything on again. You get a red module status light; the module isn't recognized at all... It could be a 1-lane ( X1 ) slot. In February 2022 we've encountered the fact that not all PXIe chassis slots are the same with respect to bandwidth. They come in X1, X2, X4, X8, X16, X32. X1 is sufficient for up to 250 MB/s, which is completely adequate for an imec module. However, imec originally designed the module firmware for X4 and higher slots. Modules have two copies of the firmware. The normal/working copy is loaded, unless you power-up with the ISP button depressed, in which case the golden image is loaded. Note the golden image is a backup copy in case the working copy is corrupted. In roughly Q2 2022, imec began shipping modules with an X1-compatible working image, but not an X1-compatible golden image. By Q2 2023, both images were X1-compatible. What if you have an older module and a newer NI chassis, for example, a 1083 with five (X1) slots, a 1088 with five (X1) and three (X4) slots, or a Keysight M9005A that has only X1 slots? There's a firmware solution to fix the issue, but note the following: You have to upgrade to an api4 release; get the latest. To update the module firmware for X1 compatibility, you first have to install it into an X4 or higher slot so you can talk to it... Check if your chassis design includes at least some X4+ slots. It can be truly difficult to find that out. NI doesn't mention anything about that in most chassis 'Datasheets' or 'Specifications.' Rather, it's in the 'User Guide' for some models. If you don't have any X4+ slots, maybe a neighbor lab can let you reprogram a module in their chassis. The NI 1088 is a popular NI choice; the X1 slots are {2,3,5,7,9}, the X4 slots are {4,6,8}.","title":"FIX: Imec Module Doesn't Work In My Chassis"},{"location":"firmware/#spikeglx-downloads-include-matched-firmware","text":"Each download of SpikeGLX comes with matching firmware. You can revert to earlier SpikeGLX versions if desired, and of course you update to newer SpikeGLX versions... In all cases, when you change SpikeGLX, you should be using the firmware that was included with that SpikeGLX download. Note that more recent SpikeGLX versions will tell you if your firmware is currently correct or not. fin","title":"SpikeGLX Downloads Include Matched Firmware"},{"location":"legacy/","text":"History / Older versions Imec Project Phases This site supports prototype and currently shipping commercial products. There are several branches in this repo tracking major Imec Neuropixels project development phases. The various phases have involved both software and hardware evolution and redesign, so obtain the appropriate materials for your needs. Release software packages are labeled as phase3A, phase3B1, phase3B2, phase20, phase30 or phase40. All early releases having no phase label are actually phase3A. All releases support NI-DAQ based acquisition. Summaries of development phases (newest to oldest): API4 : (Main branch) In 2025 Imec introduced API 4.0, which extends support to three technologies (tech): {STD=NP1+NP2, OPTO, NXT=NP3}. There are three corresponding PXI basestation-module techs which will each need specific firmware. The SpikeGLX 'Upload Firmware' dialog will help manage this. OneBox is considered a STD-tech module. Existing modules and OneBox remain compatible with API4. There are rules about which probe-tech runs in which module-tech. SpikeGLX API4 supports all tech and will guide you accordingly. SpikeGLX now builds with Qt 6.9 rather than Qt 5.12, which slightly alters its appearance. Phase30 : This is unified software to support Neuropixels 1.0, 2.0 and all probe hardware produced through 8/1/2025. Again, the same base station modules can be used after updating their firmware, which can be done via SpikeGLX. This version also supports OneBox. Phase20 : A.k.a. Neuropixels 2.0, introduces specific probes and HS with a more compact design. The HS each support two probes. The same PXIe modules can be used with a firmware update. SpikeGLX for this phase is specific to 2.0 hardware. Phase3B2 : A.k.a. Neuropixels 1.0. This phase replaces the Xilinx board with PXIe based modules, each of which connects up to 4 probes. Several modules can be operated together from one PXI chassis and one application. The probes are the same as phase3B1, but all other hardware parts are specific to the PXIe implementation. Phase3B1 : At this phase, option 3 probes from phase3A were selected for further development and commercial production. The same Xilinx board is retained for one at a time probe operation over Ethernet (but reprogrammed for 3B1). The cables, HS and BSC parts are all specific to 3B1. The 3B probes can be run with either 3B1 or 3B2 setups. Phase3A : Initially, 4 flavors of prototype probe (option 1, 2, 3, 4) were created enabling founding consortium members to choose the most useful architecture and feature set. Phase3A probes are connected one at a time to a Xilinx Kintex 7 FPGA board, and accessed via Ethernet. The probes, cables, HS and BSC parts are specific to phase3A. Older Versions 30 : Release 20250325-phase30 ... Readme : Missing samples, better survey, imec v3.70.3 Release 20250201-phase30 ... Readme : Replace 20241215, Waveplayer, imec v3.70.3 Release 20241001-phase30 ... Readme : Click and play, new probes, imec v3.70.3 Release 20240620-phase30 ... Readme : OneBox, Quad-probes, imec v3.70.2 Release 20240129-phase30 ... Readme : New IMRO editor, imec v3.62.1 Release 20231207-phase30 ... Readme : NP1016, imec v3.62.1 Release 20230905-phase30 ... Readme : Spike Viewer, bug fixes, imec v3.62 Release 20230815-phase30 ... Readme : NP2014, low latency mode, imec v3.62 Release 20230425-phase30 ... Readme : Anatomy data, better SNR, imec v3.60 Release 20230411-phase30 ... Readme : 2.0 probes, Fix PH2B headstage, imec v3.60 Release 20230323-phase30 ... Readme : Realistic geometry, ~snsGeomMap, Imec v3.57 Release 20230120-phase30 ... Readme : Fix TTL trigger, add UHD3 probes, Imec v3.57 Release 20221212-phase30 ... Readme : Fix sync SMA input, Imec v3.52 Release 20221012-phase30 ... Readme : Fix HS detection issue in 20220101, Imec v3.52 Release 20201103-phase30 ... Readme : Fix firmware update dialog, Imec v3.31 20 : Release 20200309-phase20 ... Readme : Multidrive output, Imec v2.11 3B2 (NP 1.0) : Release 20200520-phase3B2 ... Readme : Supports UHD-1, NHP, Imec v1.20 Release 20200309-phase3B2 ... Readme : Multidrive output, Imec v1.20 Release 20190724-phase3B2 ... Readme : Minor bug fixes, Imec v1.20 Release 20190413-phase3B2 ... Readme : Flexible bank selection, Imec v1.20 Release 20190327-phase3B2 ... Readme : Fix names with dots, Imec v1.15 3B1 : Release 20190724-phase3B1 ... Readme : Minor bug fixes, imec v5.1 Release 20190413-phase3B1 ... Readme : Flexible bank selection, Imec v5.1 Release 20190327-phase3B1 ... Readme : Fix names with dots, Imec v5.1 Release 20190305-phase3B1 ... Readme : 32 NI channels, Imec v5.1 Release 20190214-phase3B1 ... Readme : Run folders, Imec v5.1 Release 20180829-phase3B1 ... Readme : Fix TTL trigger, Imec v5.1 Release 20180515-phase3B1 ... Readme : Fix FileViewer, Imec v5.1 Release 20180325-phase3B1 ... Readme : Fixed-up 3B1, Imec v5.1 3A : Release 20190724-phase3A ... Readme : Minor bug fixes, imec v4.3 Release 20190413-phase3A ... Readme : Flexible bank selection, Imec v4.3 Release 20190327-phase3A ... Readme : Fix names with dots, Imec v4.3 Release 20190305-phase3A ... Readme : 32 NI channels, Imec v4.3 Release 20190214-phase3A ... Readme : Run folders, Imec v4.3 Release 20180829-phase3A ... Readme : Fix TTL trigger, Imec v4.3 Release 20180525-phase3A ... Readme : Add MATLAB features, minor fixes, Imec v4.3 Release 20180515-phase3A ... Readme : Handle broken EEPROMs, fix FileViewer, Imec v4.3 fin","title":"Legacy"},{"location":"legacy/#history-older-versions","text":"","title":"History / Older versions"},{"location":"legacy/#imec-project-phases","text":"This site supports prototype and currently shipping commercial products. There are several branches in this repo tracking major Imec Neuropixels project development phases. The various phases have involved both software and hardware evolution and redesign, so obtain the appropriate materials for your needs. Release software packages are labeled as phase3A, phase3B1, phase3B2, phase20, phase30 or phase40. All early releases having no phase label are actually phase3A. All releases support NI-DAQ based acquisition. Summaries of development phases (newest to oldest): API4 : (Main branch) In 2025 Imec introduced API 4.0, which extends support to three technologies (tech): {STD=NP1+NP2, OPTO, NXT=NP3}. There are three corresponding PXI basestation-module techs which will each need specific firmware. The SpikeGLX 'Upload Firmware' dialog will help manage this. OneBox is considered a STD-tech module. Existing modules and OneBox remain compatible with API4. There are rules about which probe-tech runs in which module-tech. SpikeGLX API4 supports all tech and will guide you accordingly. SpikeGLX now builds with Qt 6.9 rather than Qt 5.12, which slightly alters its appearance. Phase30 : This is unified software to support Neuropixels 1.0, 2.0 and all probe hardware produced through 8/1/2025. Again, the same base station modules can be used after updating their firmware, which can be done via SpikeGLX. This version also supports OneBox. Phase20 : A.k.a. Neuropixels 2.0, introduces specific probes and HS with a more compact design. The HS each support two probes. The same PXIe modules can be used with a firmware update. SpikeGLX for this phase is specific to 2.0 hardware. Phase3B2 : A.k.a. Neuropixels 1.0. This phase replaces the Xilinx board with PXIe based modules, each of which connects up to 4 probes. Several modules can be operated together from one PXI chassis and one application. The probes are the same as phase3B1, but all other hardware parts are specific to the PXIe implementation. Phase3B1 : At this phase, option 3 probes from phase3A were selected for further development and commercial production. The same Xilinx board is retained for one at a time probe operation over Ethernet (but reprogrammed for 3B1). The cables, HS and BSC parts are all specific to 3B1. The 3B probes can be run with either 3B1 or 3B2 setups. Phase3A : Initially, 4 flavors of prototype probe (option 1, 2, 3, 4) were created enabling founding consortium members to choose the most useful architecture and feature set. Phase3A probes are connected one at a time to a Xilinx Kintex 7 FPGA board, and accessed via Ethernet. The probes, cables, HS and BSC parts are specific to phase3A.","title":"Imec Project Phases"},{"location":"legacy/#older-versions","text":"30 : Release 20250325-phase30 ... Readme : Missing samples, better survey, imec v3.70.3 Release 20250201-phase30 ... Readme : Replace 20241215, Waveplayer, imec v3.70.3 Release 20241001-phase30 ... Readme : Click and play, new probes, imec v3.70.3 Release 20240620-phase30 ... Readme : OneBox, Quad-probes, imec v3.70.2 Release 20240129-phase30 ... Readme : New IMRO editor, imec v3.62.1 Release 20231207-phase30 ... Readme : NP1016, imec v3.62.1 Release 20230905-phase30 ... Readme : Spike Viewer, bug fixes, imec v3.62 Release 20230815-phase30 ... Readme : NP2014, low latency mode, imec v3.62 Release 20230425-phase30 ... Readme : Anatomy data, better SNR, imec v3.60 Release 20230411-phase30 ... Readme : 2.0 probes, Fix PH2B headstage, imec v3.60 Release 20230323-phase30 ... Readme : Realistic geometry, ~snsGeomMap, Imec v3.57 Release 20230120-phase30 ... Readme : Fix TTL trigger, add UHD3 probes, Imec v3.57 Release 20221212-phase30 ... Readme : Fix sync SMA input, Imec v3.52 Release 20221012-phase30 ... Readme : Fix HS detection issue in 20220101, Imec v3.52 Release 20201103-phase30 ... Readme : Fix firmware update dialog, Imec v3.31 20 : Release 20200309-phase20 ... Readme : Multidrive output, Imec v2.11 3B2 (NP 1.0) : Release 20200520-phase3B2 ... Readme : Supports UHD-1, NHP, Imec v1.20 Release 20200309-phase3B2 ... Readme : Multidrive output, Imec v1.20 Release 20190724-phase3B2 ... Readme : Minor bug fixes, Imec v1.20 Release 20190413-phase3B2 ... Readme : Flexible bank selection, Imec v1.20 Release 20190327-phase3B2 ... Readme : Fix names with dots, Imec v1.15 3B1 : Release 20190724-phase3B1 ... Readme : Minor bug fixes, imec v5.1 Release 20190413-phase3B1 ... Readme : Flexible bank selection, Imec v5.1 Release 20190327-phase3B1 ... Readme : Fix names with dots, Imec v5.1 Release 20190305-phase3B1 ... Readme : 32 NI channels, Imec v5.1 Release 20190214-phase3B1 ... Readme : Run folders, Imec v5.1 Release 20180829-phase3B1 ... Readme : Fix TTL trigger, Imec v5.1 Release 20180515-phase3B1 ... Readme : Fix FileViewer, Imec v5.1 Release 20180325-phase3B1 ... Readme : Fixed-up 3B1, Imec v5.1 3A : Release 20190724-phase3A ... Readme : Minor bug fixes, imec v4.3 Release 20190413-phase3A ... Readme : Flexible bank selection, Imec v4.3 Release 20190327-phase3A ... Readme : Fix names with dots, Imec v4.3 Release 20190305-phase3A ... Readme : 32 NI channels, Imec v4.3 Release 20190214-phase3A ... Readme : Run folders, Imec v4.3 Release 20180829-phase3A ... Readme : Fix TTL trigger, Imec v4.3 Release 20180525-phase3A ... Readme : Add MATLAB features, minor fixes, Imec v4.3 Release 20180515-phase3A ... Readme : Handle broken EEPROMs, fix FileViewer, Imec v4.3 fin","title":"Older Versions"},{"location":"new/","text":"What's New On The Site? October 4, 2025 CatGT 4.9 (Better multishank support, AP2LF down-sample parameter). September 15, 2025 SpikeGLX 20250915-api4 (Quadbase, API4, Qt6, api v4.1.3). (Patch that replaces 20250525). Add CatGT ReadMe to help. September 11, 2025 SpikeGLX 20250525-api4 (Quadbase, API4, Qt6, api v4.1.3). August 8, 2025 CatGT 4.8 (Supercat support for -save and -sepShanks). May 27, 2025 SpikeGLX 20250325-phase30 (Missing samples, better survey, imec v3.70.3). February 26, 2025 SpikeGLX 20250201-phase30 (Replace 20241215, Waveplayer, imec v3.70.3). SpikeGLX 20241215-phase30 removed. February 1, 2025 SpikeGLX 20241215-phase30 (Waveplayer, imec v3.70.3). January 7, 2025 CatGT 4.7 (Option -save writes correctly when no -dest folder). December 20, 2024 CatGT 4.6 (For AP->LF: -ap flag not needed). December 2, 2024 SpikeGLX 20241001-phase30 (Click and play, new probes, imec v3.70.3). December 1, 2024 CatGT 4.5 (Support probe NP1014, NP1033, NP2005, NP2006, NP2021). C_Waves 2.9 (Support probe NP1014, NP1033, NP2005, NP2006). November 14, 2024 C_Waves 2.8 (start/end secs, NP2021 probe). October 14, 2024 Add UCL course slides to help. October 1, 2024 SpikeGLX 20240620-phase30 (OneBox, Quad-probes, imec v3.70.2). September 20, 2024 OverStrike 1.1 (Support NP2020 quad-probe, add -linefill option). September 19, 2024 C_Waves 2.7 (Median waveforms). September 18, 2024 CatGT 4.4 (Split shanks, better, smoother zero/line filling). June 11, 2024 SpikeGLX 20240129-phase30 (New IMRO editor, imec v3.62.1). June 5, 2024 SpikeGLX-CPP-SDK supports Linux. April 24, 2024 C_Waves 2.6 (Handle int64 or uint64 spike times). January 29, 2024 SpikeGLX 20231207-phase30 (NP1016, imec 3.62.1). December 18, 2023 CatGT 4.3 (Supercat can join runs with varied sample rates). December 6, 2023 SpikeGLX 20230905-phase30 (Spike Viewer, bug fixes). September 5, 2023 SpikeGLX 20230815-phase30 (NP2014, low latency mode). August 19, 2023 SpikeGLX 20230425-phase30 (Anatomy, better SNR). Improved C++ API. Added API for C, C#, Python. Updated HelloSGLX. July 11, 2023 CatGT 4.2 (Add -no_catgt_fld option). July 03, 2023 CatGT 4.1 (Add -maxZ option). June 20, 2023 HelloSGLX (new). OverStrike (new). May 22, 2023 C_Waves 2.5 (Handle phy output). May 19, 2023 CatGT 4.0 (Update probe support). C_Waves 2.4 (Update probe support). April 25, 2023 SpikeGLX 20230411-phase30 (Fix PH2B headstage). April 11, 2023 SpikeGLX 20230326-phase30 (Support New NP 2.0, Uses GeomMaps). CatGT 3.9 (Fix supercat of LF files). Update SGLXMetaToCoords. April 6, 2023 CatGT 3.8 (Support 2.0 probes). C_Waves 2.3 (Support 2.0 probes). March 26, 2023 SpikeGLX 20230323-phase30 (Fix shank editor:{box-size,LFP crash}, Uses GeomMaps). March 25, 2023 Python SGLXMetaToCoords added. March 23, 2023 SpikeGLX 20230320-phase30 (Fix shank editor bug, Uses GeomMaps). Update SGLXMetaToCoords. Update SpikeGLX_Datafile_Tools. March 20, 2023 SpikeGLX 20230202-phase30 (Uses GeomMaps). CatGT 3.7 (Uses GeomMaps). C_Waves 2.2 (Uses GeomMaps). February 17, 2023 CatGT 3.6 (Selective channel saving, median CAR, better g-series). February 9, 2023 Update PXI requirements. Update SpikeGLX_Datafile_Tools (fix how Python gets 2.0 probe gains). February 5, 2023 TPrime 1.8 (Add -offsets option). February 2, 2023 SpikeGLX 20230120-phase30 (Single-threaded probe programming). January 20, 2023 Updated SpikeGLX 20230101-phase30 with correct DLLs. January 19, 2023 SpikeGLX 20230101-phase30 (Fix TTL trigger, add UHD3 probes). Last minute API update to support probe NP1015. January 18, 2023 SpikeGLX 20221220-phase30 (Fix TTL trigger, add UHD3 probes). CatGT 3.5 (Support latest probes). C_Waves 2.1 (Support latest probes). December 22, 2022 Add survey mode video. December 15, 2022 SpikeGLX 20221212-phase30 (Fix passive UHD probe editing). Add IMRO editor video. December 12, 2022 SpikeGLX 20221031-phase30 (Fix imec sync SMA input). October 12, 2022 SpikeGLX 20221012-phase30 (Fix HS detection issue in 20220101). CatGT 3.4 (Fix -gfix on save channel subsets, add -startsecs). Update SpikeGLX help. September 13, 2022 SpikeGLX 20220101-phase30 (All new for 22!). July 14, 2022 CatGT 3.3 (Fix -maxsecs option). July 1, 2022 CatGT 3.2 (AP -> LF for 1.0 data). June 27, 2022 NIScaler 1.1 (Fix rollover of saturation voltage). June 20, 2022 CatGT 3.1 (Fix loccar channel exclusion). C_Waves 2.0 (Fix SNR channel exclusion). June 4, 2022 Add NIScaler to postprocessing tools. May 18, 2022 Update UserManual. Add description of remote control SDKs. May 2, 2022 Update help discussions of CatGT and Sync. Post SpikeGLX_QuickRef under Help menus. April 21, 2022 CatGT 3.0 (Onebox, new extractors, auto sync, fyi). March 18, 2022 New SGLXMetaToCoods.zip (Support more probes, fix ref channel ID). March 3, 2022 C_Waves 1.9 (Support UHD2 and current probes). February 23, 2022 CatGT 2.5 (Add concatenation offsets files). February 17, 2022 Post firmware making basestations compatible with X1 chassis slots. February 2, 2022 Publish {CatGT, TPrime, C_Waves} source code on github. November 24, 2021 CatGT 2.4 (Add option -gtlist). October 12, 2021 C_Waves 1.8 (Code same, update: ReadMe, runit script). October 1, 2021 CatGT 2.3 (pass1_force_ni_bin, fix supercat param dependency). September 15, 2021 CatGT 2.2 (Acausal Butterworth filter). Updated site help on CatGT. July 29, 2021 CatGT 2.1 (BF gets inarow parameter). July 20, 2021 CatGT 2.0 (XA seeks threshold-2 even if millisecs=0). June 28, 2021 TPrime 1.7 (Fix end-of-file parsing). June 13, 2021 SpikeGLX_Datafile_Tools updated for 2.0 probes. CatGT 1.9: Fix link to fftw3 library. Remove glitch at tshift block boundaries. Option -gfix now exploits -tshift. Option -chnexcl now specified per probe. Option -chnexcl now modifies shankMap in output metadata. Stream option -lf creates .lf. from .ap. for 2.0 probes. Fix supercat premature completion bug. Supercat observes -exported option. Pass1 always writes new meta files for later supercat. Add option -supercat_trim_edges. Add option -supercat_skip_ni_bin. Add option -maxsecs. Add option -BF (bit-field decoder). April 26, 2021 CatGT 1.8 (Olivier Winter subsample time shifting). March 18, 2021 CatGT 1.7 (Suppress linux brace expansion). March 15, 2021 TPrime 1.6 (Fix potential crash). February 12, 2021 CatGT 1.6 (Fix g-series concatenation). February 10, 2021 CatGT 1.5 (supercat feature, better scripts). TPrime 1.5 (Better scripts). C_Waves 1.8 (Better scripts). January 26, 2021 CatGT 1.4.2 (Fix zerofillmax, add option -inarow to extractors). January 22, 2021 SpikeGLX 20201103-phase30 (Fix firmware update dialog). January 16, 2021 {CatGT, TPrime, C_Waves}: Linux package reposted with corrected runit.sh. January 15, 2021 {CatGT, TPrime, C_Waves}: Windows package reposted with corrected runit.bat. January 14, 2021 CatGT 1.4.1 (Linux, g-range, inverted extractors, flexible working dir). TPrime 1.4 (Linux, x64 headers, handle Fortran order, flexible working dir). C_Waves 1.7 (Linux, better SNR, flexible working dir). January 11, 2021 CatGT 1.4.0 (Linux, g-range, inverted extractors). TPrime 1.3 (Linux, x64 headers, handle Fortran order). C_Waves 1.6 (Linux, better SNR). Warn imec system not compatible with AMD computers. November 05, 2020: C_Waves 1.5 (Smoother mean waveforms). Link to Metadata_30.md. November 03, 2020: SpikeGLX 20201024-phase30 (Fix firmware updating). October 24, 2020: SpikeGLX 20201012-phase30 (Support NP1010 and NP1100 probes). CatGT 1.3.0 (Support NP1010 probe). C_Waves 1.4 (Support NP1010 probe). September 25, 2020: Release SpikeGLX 3.0. Retire SpikeGLX 1.0 and 2.0. C_Waves 1.3 (Supports FORTRAN order npy). August 20, 2020: New document: help/\"IMRO Table Anatomy.\" August 13, 2020: Disable 2.0 download temporarily. August 4, 2020: Fix links. July 16, 2020: SpikeGLX 20200520-phase3B2 (Supports UHD-1, NHP, Imec v1.20). SpikeGLX 20200520-phase20 (New 2.0 probe names, Imec v2.14). CatGT 1.2.9 (Supports UHD-1, NHP). C_Waves 1.2 (Supports UHD-1, NHP). Rename module firmware files. June 1, 2020: Add module firmware to Beta page. May 12, 2020: SpikeGLX 20200309 (PXI versions get multidrive run splitting). CatGT 1.2.8 (Option -prb_miss_ok addded for multidrive output). New document: help/\"Parsing Data Files.\" April 3, 2020: CatGT 1.2.7 (Extractors get optional pulse duration tolerance). New document: help/\"Noise: Learn How To Solder.\" March 26, 2020: C_Waves 1.1 (Removes 4GB binary file size limit). March 10, 2020: New SpikeGLX version (all phases). C_Waves 1.0 post-processing pipeline component added. March 06, 2020: CatGT 1.2.6. TPrime 1.2. New versions: Post-processing Tools. Add site menu: \"Help.\" Add site menu: \"New.\" New document: help/\"Sync: Aligning with Edges.\" fin","title":"New"},{"location":"new/#whats-new-on-the-site","text":"October 4, 2025 CatGT 4.9 (Better multishank support, AP2LF down-sample parameter). September 15, 2025 SpikeGLX 20250915-api4 (Quadbase, API4, Qt6, api v4.1.3). (Patch that replaces 20250525). Add CatGT ReadMe to help. September 11, 2025 SpikeGLX 20250525-api4 (Quadbase, API4, Qt6, api v4.1.3). August 8, 2025 CatGT 4.8 (Supercat support for -save and -sepShanks). May 27, 2025 SpikeGLX 20250325-phase30 (Missing samples, better survey, imec v3.70.3). February 26, 2025 SpikeGLX 20250201-phase30 (Replace 20241215, Waveplayer, imec v3.70.3). SpikeGLX 20241215-phase30 removed. February 1, 2025 SpikeGLX 20241215-phase30 (Waveplayer, imec v3.70.3). January 7, 2025 CatGT 4.7 (Option -save writes correctly when no -dest folder). December 20, 2024 CatGT 4.6 (For AP->LF: -ap flag not needed). December 2, 2024 SpikeGLX 20241001-phase30 (Click and play, new probes, imec v3.70.3). December 1, 2024 CatGT 4.5 (Support probe NP1014, NP1033, NP2005, NP2006, NP2021). C_Waves 2.9 (Support probe NP1014, NP1033, NP2005, NP2006). November 14, 2024 C_Waves 2.8 (start/end secs, NP2021 probe). October 14, 2024 Add UCL course slides to help. October 1, 2024 SpikeGLX 20240620-phase30 (OneBox, Quad-probes, imec v3.70.2). September 20, 2024 OverStrike 1.1 (Support NP2020 quad-probe, add -linefill option). September 19, 2024 C_Waves 2.7 (Median waveforms). September 18, 2024 CatGT 4.4 (Split shanks, better, smoother zero/line filling). June 11, 2024 SpikeGLX 20240129-phase30 (New IMRO editor, imec v3.62.1). June 5, 2024 SpikeGLX-CPP-SDK supports Linux. April 24, 2024 C_Waves 2.6 (Handle int64 or uint64 spike times). January 29, 2024 SpikeGLX 20231207-phase30 (NP1016, imec 3.62.1). December 18, 2023 CatGT 4.3 (Supercat can join runs with varied sample rates). December 6, 2023 SpikeGLX 20230905-phase30 (Spike Viewer, bug fixes). September 5, 2023 SpikeGLX 20230815-phase30 (NP2014, low latency mode). August 19, 2023 SpikeGLX 20230425-phase30 (Anatomy, better SNR). Improved C++ API. Added API for C, C#, Python. Updated HelloSGLX. July 11, 2023 CatGT 4.2 (Add -no_catgt_fld option). July 03, 2023 CatGT 4.1 (Add -maxZ option). June 20, 2023 HelloSGLX (new). OverStrike (new). May 22, 2023 C_Waves 2.5 (Handle phy output). May 19, 2023 CatGT 4.0 (Update probe support). C_Waves 2.4 (Update probe support). April 25, 2023 SpikeGLX 20230411-phase30 (Fix PH2B headstage). April 11, 2023 SpikeGLX 20230326-phase30 (Support New NP 2.0, Uses GeomMaps). CatGT 3.9 (Fix supercat of LF files). Update SGLXMetaToCoords. April 6, 2023 CatGT 3.8 (Support 2.0 probes). C_Waves 2.3 (Support 2.0 probes). March 26, 2023 SpikeGLX 20230323-phase30 (Fix shank editor:{box-size,LFP crash}, Uses GeomMaps). March 25, 2023 Python SGLXMetaToCoords added. March 23, 2023 SpikeGLX 20230320-phase30 (Fix shank editor bug, Uses GeomMaps). Update SGLXMetaToCoords. Update SpikeGLX_Datafile_Tools. March 20, 2023 SpikeGLX 20230202-phase30 (Uses GeomMaps). CatGT 3.7 (Uses GeomMaps). C_Waves 2.2 (Uses GeomMaps). February 17, 2023 CatGT 3.6 (Selective channel saving, median CAR, better g-series). February 9, 2023 Update PXI requirements. Update SpikeGLX_Datafile_Tools (fix how Python gets 2.0 probe gains). February 5, 2023 TPrime 1.8 (Add -offsets option). February 2, 2023 SpikeGLX 20230120-phase30 (Single-threaded probe programming). January 20, 2023 Updated SpikeGLX 20230101-phase30 with correct DLLs. January 19, 2023 SpikeGLX 20230101-phase30 (Fix TTL trigger, add UHD3 probes). Last minute API update to support probe NP1015. January 18, 2023 SpikeGLX 20221220-phase30 (Fix TTL trigger, add UHD3 probes). CatGT 3.5 (Support latest probes). C_Waves 2.1 (Support latest probes). December 22, 2022 Add survey mode video. December 15, 2022 SpikeGLX 20221212-phase30 (Fix passive UHD probe editing). Add IMRO editor video. December 12, 2022 SpikeGLX 20221031-phase30 (Fix imec sync SMA input). October 12, 2022 SpikeGLX 20221012-phase30 (Fix HS detection issue in 20220101). CatGT 3.4 (Fix -gfix on save channel subsets, add -startsecs). Update SpikeGLX help. September 13, 2022 SpikeGLX 20220101-phase30 (All new for 22!). July 14, 2022 CatGT 3.3 (Fix -maxsecs option). July 1, 2022 CatGT 3.2 (AP -> LF for 1.0 data). June 27, 2022 NIScaler 1.1 (Fix rollover of saturation voltage). June 20, 2022 CatGT 3.1 (Fix loccar channel exclusion). C_Waves 2.0 (Fix SNR channel exclusion). June 4, 2022 Add NIScaler to postprocessing tools. May 18, 2022 Update UserManual. Add description of remote control SDKs. May 2, 2022 Update help discussions of CatGT and Sync. Post SpikeGLX_QuickRef under Help menus. April 21, 2022 CatGT 3.0 (Onebox, new extractors, auto sync, fyi). March 18, 2022 New SGLXMetaToCoods.zip (Support more probes, fix ref channel ID). March 3, 2022 C_Waves 1.9 (Support UHD2 and current probes). February 23, 2022 CatGT 2.5 (Add concatenation offsets files). February 17, 2022 Post firmware making basestations compatible with X1 chassis slots. February 2, 2022 Publish {CatGT, TPrime, C_Waves} source code on github. November 24, 2021 CatGT 2.4 (Add option -gtlist). October 12, 2021 C_Waves 1.8 (Code same, update: ReadMe, runit script). October 1, 2021 CatGT 2.3 (pass1_force_ni_bin, fix supercat param dependency). September 15, 2021 CatGT 2.2 (Acausal Butterworth filter). Updated site help on CatGT. July 29, 2021 CatGT 2.1 (BF gets inarow parameter). July 20, 2021 CatGT 2.0 (XA seeks threshold-2 even if millisecs=0). June 28, 2021 TPrime 1.7 (Fix end-of-file parsing). June 13, 2021 SpikeGLX_Datafile_Tools updated for 2.0 probes. CatGT 1.9: Fix link to fftw3 library. Remove glitch at tshift block boundaries. Option -gfix now exploits -tshift. Option -chnexcl now specified per probe. Option -chnexcl now modifies shankMap in output metadata. Stream option -lf creates .lf. from .ap. for 2.0 probes. Fix supercat premature completion bug. Supercat observes -exported option. Pass1 always writes new meta files for later supercat. Add option -supercat_trim_edges. Add option -supercat_skip_ni_bin. Add option -maxsecs. Add option -BF (bit-field decoder). April 26, 2021 CatGT 1.8 (Olivier Winter subsample time shifting). March 18, 2021 CatGT 1.7 (Suppress linux brace expansion). March 15, 2021 TPrime 1.6 (Fix potential crash). February 12, 2021 CatGT 1.6 (Fix g-series concatenation). February 10, 2021 CatGT 1.5 (supercat feature, better scripts). TPrime 1.5 (Better scripts). C_Waves 1.8 (Better scripts). January 26, 2021 CatGT 1.4.2 (Fix zerofillmax, add option -inarow to extractors). January 22, 2021 SpikeGLX 20201103-phase30 (Fix firmware update dialog). January 16, 2021 {CatGT, TPrime, C_Waves}: Linux package reposted with corrected runit.sh. January 15, 2021 {CatGT, TPrime, C_Waves}: Windows package reposted with corrected runit.bat. January 14, 2021 CatGT 1.4.1 (Linux, g-range, inverted extractors, flexible working dir). TPrime 1.4 (Linux, x64 headers, handle Fortran order, flexible working dir). C_Waves 1.7 (Linux, better SNR, flexible working dir). January 11, 2021 CatGT 1.4.0 (Linux, g-range, inverted extractors). TPrime 1.3 (Linux, x64 headers, handle Fortran order). C_Waves 1.6 (Linux, better SNR). Warn imec system not compatible with AMD computers. November 05, 2020: C_Waves 1.5 (Smoother mean waveforms). Link to Metadata_30.md. November 03, 2020: SpikeGLX 20201024-phase30 (Fix firmware updating). October 24, 2020: SpikeGLX 20201012-phase30 (Support NP1010 and NP1100 probes). CatGT 1.3.0 (Support NP1010 probe). C_Waves 1.4 (Support NP1010 probe). September 25, 2020: Release SpikeGLX 3.0. Retire SpikeGLX 1.0 and 2.0. C_Waves 1.3 (Supports FORTRAN order npy). August 20, 2020: New document: help/\"IMRO Table Anatomy.\" August 13, 2020: Disable 2.0 download temporarily. August 4, 2020: Fix links. July 16, 2020: SpikeGLX 20200520-phase3B2 (Supports UHD-1, NHP, Imec v1.20). SpikeGLX 20200520-phase20 (New 2.0 probe names, Imec v2.14). CatGT 1.2.9 (Supports UHD-1, NHP). C_Waves 1.2 (Supports UHD-1, NHP). Rename module firmware files. June 1, 2020: Add module firmware to Beta page. May 12, 2020: SpikeGLX 20200309 (PXI versions get multidrive run splitting). CatGT 1.2.8 (Option -prb_miss_ok addded for multidrive output). New document: help/\"Parsing Data Files.\" April 3, 2020: CatGT 1.2.7 (Extractors get optional pulse duration tolerance). New document: help/\"Noise: Learn How To Solder.\" March 26, 2020: C_Waves 1.1 (Removes 4GB binary file size limit). March 10, 2020: New SpikeGLX version (all phases). C_Waves 1.0 post-processing pipeline component added. March 06, 2020: CatGT 1.2.6. TPrime 1.2. New versions: Post-processing Tools. Add site menu: \"Help.\" Add site menu: \"New.\" New document: help/\"Sync: Aligning with Edges.\" fin","title":"What's New On The Site?"},{"location":"Help/SpikeGLX_dirs_files/","text":"SpikeGLX Output Directories and Files Filenames Filenames are decorated with several indices. Gate and trigger indices All files are created under the control of SpikeGLX gate and trigger modes, which determine when to start writing files. When file writing starts, all files for all streams will get tagged by the current g- and t-indices so you know they go together as a set. They will also be grouped together inside a folder that is named with the run name and the current g-index. An important characteristic of all of the files in the same Run_g* folder is that they start writing at the same time. Said another way, they are time-aligned at their starts if you had sync enabled. All of the files from the same run have a special relationship to each other. During a run the settings are held constant and the data continue to stream. The files that are written are just snapshots from the continuous stream. The files contain a metadata item firstSample that identifies where in that continuum this file was snapped. This allow the files saved from the same run to be concatenated in a way that reconstructs the true timeline. The CatGT tool can perform time-preserving join operations. Probe index 3A probe filename has no index number after .imec. , e.g. myrun_g0_t0.imec.ap.meta . All later phases have a probe index, e.g. myrun_g0_t0.imec0.ap.meta . CatGT Tip : Use option -prb_3A for 3A data, and DON'T use -prb=list ! Directories Data directory At the highest level is the data directory which you set in SpikeGLX using menu item Options::Choose Data Directory . All output data will be stored into this directory. Note: You can split data into several top-level directories using the Multidrive Feature . Run folder Version 20190214 and later first create a Run Folder within the data directory. The run folder holds all output from that run, and is named with a g-index, e.g. myrun_g0 . Prior to SpikeGLX version 20190214 there were no run folders. Rather, all datafiles output from a run were placed directly into the current Data Directory . CatGT Tip : Use option -no_run_fld for runs before version 20190214. Probe folders Xilinx-based 3A, 3B1 These phases are single-probe. No option for probe folders is provided. Everything else (3B2, 1.0, 2.0, ...) Version 20190214 and later provide a Folder per probe option on the Save tab: If not selected, no probe folders are created. Rather, all output files for a run are saved into the Run Folder . If selected (checked): All nidq and obx datafiles are saved directly into the Run Folder . A separate Probe Folder for each imec probe is first created in the run folder. The probe folder holds all output from that probe, and is named with both g- and probe-indices, e.g. myrun_g0_imec6 . CatGT Tip : Use option -prb_fld if option selected. Multidrive output Before the multidrive option was introduced SpikeGLX let you specify at most one data directory to hold all your run output folders and files. As of version 20200309 , there is still a main data directory, but now you can check a box to enable the splitting of runs across additional drives/directories to access greater storage capacity when doing very long runs or when using many probes. Modulo rule The rule for distributing run output into several data directories is this: As always, the (N) probes have logical indices [0..N-1] . The main data directory is dir-0 . The set of all (M) directories, including the main one are enumerated [dir-0..dir-M-1] . NI and obx output is always sent to dir-0. Probe-j output is sent to dir-(j modulo M) . Within each dir-k SpikeGLX will create a run folder and applicable probe folders according to the same rules that apply for a single main data directory. A Modulo B means \"take the remainder of dividing integers A/B \". Modulo is often written mod and is written % in C/C++ and Python code. For example, suppose these parameters: dir-0 = D:\\Data dir-1 = E:\\DataB dir-2 = G:\\DataC runname = myRun folder per run is enabled Example output would go here: NI: D:\\Data\\myrun\\myrun_g0_t0.ni.bin(.meta) obx0: D:\\Data\\myrun\\myrun_g0_t0.obx0.obx.bin(.meta) obx1: D:\\Data\\myrun\\myrun_g0_t0.obx1.obx.bin(.meta) Imec0: D:\\Data\\myrun\\myrun_g0_imec0\\myrun_g0_t0.imec0.ap.bin(.meta) Imec3: D:\\Data\\myrun\\myrun_g0_imec3\\myrun_g0_t0.imec3.ap.bin(.meta) Imec4: E:\\DataB\\myrun\\myrun_g0_imec4\\myrun_g0_t0.imec4.ap.bin(.meta) Imec8: G:\\DataC\\myrun\\myrun_g0_imec8\\myrun_g0_t0.imec8.ap.bin(.meta) Note: You can run several OneBox ADC streams, which would be named 'obx0,' 'obx1,' etc. All obx* data are tiny so we put all obx files in the main dir-0 directory. New offline behaviors When multidrive output is enabled, a run's files are distributed over several directories. The SpikeGLX features and tools that work on sets of run files are affected as follows: FileViewer/Link : To link files in the same run, that is, to show them and scroll them together, you first open any binary file from a run, then choose File/Link in the Viewer window. In the Link dialog you list which other streams in this run to open and link together. This feature only knows how to search for and link other streams that reside in the same parent data-dir/run-folder as the open file. If the multidrive option had split the run, you will only be able to link the streams that live together in one of the split run folders. You'll have to separately view and link data that live in separate data directories. Tools/Sample Rates From Run : This dialog still looks the same. You select any binary file from a run and you have an option to calibrate just that data stream, or all of the streams it can find in the same run folder. If the multidrive option had split the run, this tool will only be able to locate and calibrate probes it can find in the same split run folder as the selected binary. That is, you'll have to repeat this process once for each separate data directory. CatGT : Tell CatGT which probes to process by pointing to a data directory -dir=myDir and listing the probes you want to process, say -prb=0:3 . In CatGT version 1.2.7 and earlier, if any probe is missing from that directory, the run stops and logs a missing file error. As of CatGT version 1.2.8 you can add option -prb_miss_ok telling CatGT to skip missing probes and continue with the next one it finds in that directory. Note that you will have to make a separate command line for each data directory, but each command line can conveniently list all of the probes in the run. You don't have to figure out the modulo rule for each directory. TPrime : Unaffected. All of the input and outfile files {tostream, fromstream, events} already have independently specified paths. Parsing data by probe The safest and most reliable way to process your data is to use our tools: CatGT Other post-processing tools If you are determined to roll your own parsing code, you will need to identify the type of probe used. Once identified, you can look up probe characteristics and parameters in the published probe table . The metadata key that identifies a probe is its part number imDatPrb_pn . Virtually all meta files later than phase 3A will contain this value. fin","title":"SpikeGLX Output Directories and Files"},{"location":"Help/SpikeGLX_dirs_files/#spikeglx-output-directories-and-files","text":"","title":"SpikeGLX Output Directories and Files"},{"location":"Help/SpikeGLX_dirs_files/#filenames","text":"Filenames are decorated with several indices.","title":"Filenames"},{"location":"Help/SpikeGLX_dirs_files/#gate-and-trigger-indices","text":"All files are created under the control of SpikeGLX gate and trigger modes, which determine when to start writing files. When file writing starts, all files for all streams will get tagged by the current g- and t-indices so you know they go together as a set. They will also be grouped together inside a folder that is named with the run name and the current g-index. An important characteristic of all of the files in the same Run_g* folder is that they start writing at the same time. Said another way, they are time-aligned at their starts if you had sync enabled. All of the files from the same run have a special relationship to each other. During a run the settings are held constant and the data continue to stream. The files that are written are just snapshots from the continuous stream. The files contain a metadata item firstSample that identifies where in that continuum this file was snapped. This allow the files saved from the same run to be concatenated in a way that reconstructs the true timeline. The CatGT tool can perform time-preserving join operations.","title":"Gate and trigger indices"},{"location":"Help/SpikeGLX_dirs_files/#probe-index","text":"3A probe filename has no index number after .imec. , e.g. myrun_g0_t0.imec.ap.meta . All later phases have a probe index, e.g. myrun_g0_t0.imec0.ap.meta . CatGT Tip : Use option -prb_3A for 3A data, and DON'T use -prb=list !","title":"Probe index"},{"location":"Help/SpikeGLX_dirs_files/#directories","text":"","title":"Directories"},{"location":"Help/SpikeGLX_dirs_files/#data-directory","text":"At the highest level is the data directory which you set in SpikeGLX using menu item Options::Choose Data Directory . All output data will be stored into this directory. Note: You can split data into several top-level directories using the Multidrive Feature .","title":"Data directory"},{"location":"Help/SpikeGLX_dirs_files/#run-folder","text":"Version 20190214 and later first create a Run Folder within the data directory. The run folder holds all output from that run, and is named with a g-index, e.g. myrun_g0 . Prior to SpikeGLX version 20190214 there were no run folders. Rather, all datafiles output from a run were placed directly into the current Data Directory . CatGT Tip : Use option -no_run_fld for runs before version 20190214.","title":"Run folder"},{"location":"Help/SpikeGLX_dirs_files/#probe-folders","text":"Xilinx-based 3A, 3B1 These phases are single-probe. No option for probe folders is provided. Everything else (3B2, 1.0, 2.0, ...) Version 20190214 and later provide a Folder per probe option on the Save tab: If not selected, no probe folders are created. Rather, all output files for a run are saved into the Run Folder . If selected (checked): All nidq and obx datafiles are saved directly into the Run Folder . A separate Probe Folder for each imec probe is first created in the run folder. The probe folder holds all output from that probe, and is named with both g- and probe-indices, e.g. myrun_g0_imec6 . CatGT Tip : Use option -prb_fld if option selected.","title":"Probe folders"},{"location":"Help/SpikeGLX_dirs_files/#multidrive-output","text":"Before the multidrive option was introduced SpikeGLX let you specify at most one data directory to hold all your run output folders and files. As of version 20200309 , there is still a main data directory, but now you can check a box to enable the splitting of runs across additional drives/directories to access greater storage capacity when doing very long runs or when using many probes. Modulo rule The rule for distributing run output into several data directories is this: As always, the (N) probes have logical indices [0..N-1] . The main data directory is dir-0 . The set of all (M) directories, including the main one are enumerated [dir-0..dir-M-1] . NI and obx output is always sent to dir-0. Probe-j output is sent to dir-(j modulo M) . Within each dir-k SpikeGLX will create a run folder and applicable probe folders according to the same rules that apply for a single main data directory. A Modulo B means \"take the remainder of dividing integers A/B \". Modulo is often written mod and is written % in C/C++ and Python code. For example, suppose these parameters: dir-0 = D:\\Data dir-1 = E:\\DataB dir-2 = G:\\DataC runname = myRun folder per run is enabled Example output would go here: NI: D:\\Data\\myrun\\myrun_g0_t0.ni.bin(.meta) obx0: D:\\Data\\myrun\\myrun_g0_t0.obx0.obx.bin(.meta) obx1: D:\\Data\\myrun\\myrun_g0_t0.obx1.obx.bin(.meta) Imec0: D:\\Data\\myrun\\myrun_g0_imec0\\myrun_g0_t0.imec0.ap.bin(.meta) Imec3: D:\\Data\\myrun\\myrun_g0_imec3\\myrun_g0_t0.imec3.ap.bin(.meta) Imec4: E:\\DataB\\myrun\\myrun_g0_imec4\\myrun_g0_t0.imec4.ap.bin(.meta) Imec8: G:\\DataC\\myrun\\myrun_g0_imec8\\myrun_g0_t0.imec8.ap.bin(.meta) Note: You can run several OneBox ADC streams, which would be named 'obx0,' 'obx1,' etc. All obx* data are tiny so we put all obx files in the main dir-0 directory.","title":"Multidrive output"},{"location":"Help/SpikeGLX_dirs_files/#new-offline-behaviors","text":"When multidrive output is enabled, a run's files are distributed over several directories. The SpikeGLX features and tools that work on sets of run files are affected as follows: FileViewer/Link : To link files in the same run, that is, to show them and scroll them together, you first open any binary file from a run, then choose File/Link in the Viewer window. In the Link dialog you list which other streams in this run to open and link together. This feature only knows how to search for and link other streams that reside in the same parent data-dir/run-folder as the open file. If the multidrive option had split the run, you will only be able to link the streams that live together in one of the split run folders. You'll have to separately view and link data that live in separate data directories. Tools/Sample Rates From Run : This dialog still looks the same. You select any binary file from a run and you have an option to calibrate just that data stream, or all of the streams it can find in the same run folder. If the multidrive option had split the run, this tool will only be able to locate and calibrate probes it can find in the same split run folder as the selected binary. That is, you'll have to repeat this process once for each separate data directory. CatGT : Tell CatGT which probes to process by pointing to a data directory -dir=myDir and listing the probes you want to process, say -prb=0:3 . In CatGT version 1.2.7 and earlier, if any probe is missing from that directory, the run stops and logs a missing file error. As of CatGT version 1.2.8 you can add option -prb_miss_ok telling CatGT to skip missing probes and continue with the next one it finds in that directory. Note that you will have to make a separate command line for each data directory, but each command line can conveniently list all of the probes in the run. You don't have to figure out the modulo rule for each directory. TPrime : Unaffected. All of the input and outfile files {tostream, fromstream, events} already have independently specified paths.","title":"New offline behaviors"},{"location":"Help/SpikeGLX_dirs_files/#parsing-data-by-probe","text":"The safest and most reliable way to process your data is to use our tools: CatGT Other post-processing tools If you are determined to roll your own parsing code, you will need to identify the type of probe used. Once identified, you can look up probe characteristics and parameters in the published probe table . The metadata key that identifies a probe is its part number imDatPrb_pn . Virtually all meta files later than phase 3A will contain this value. fin","title":"Parsing data by probe"},{"location":"Help/imroTables/","text":"IMRO Table Anatomy IM ec R ead O ut tables are simple text files that describe how to configure each readout channel on an imec probe. Each type of probe may have its own set of parameters to access that type's special features. SpikeGLX has GUI editing tools for each probe type, but sometimes you may want to do something custom. This document shows how to write your own (*.imro) files, at least for NP 1.0 probes, which have straightforward internal site selection rules (each channel can connect to just one bank). You can load your own files using the Load button in the SpikeGLX table editor. Note: When you load your own imro table file, you probably want to select default as your shank map. The default will automatically populate the shank(s) according to your imro table. You'll probably also want to select default for your channel map. The default channel map will order your graphs from the tip of the probe to the top (base) according to your imro table. Text Examples Type 0: (0,384)(0 0 0 500 250 1)(1 0 0 500 250 1)(2 0 0 500 250 1)(3 0 0 500 250 1)(4 0 0 500 250 1)(5 0 0 500 250 1)(6 0 0 500 250 1)(7 0 0 500 250 1)(8 0 0 500 250 1)(9 0 0 500 250 1)(10 0 0 500 250 1)(11 0 0 500 250 1)(12 0 0 500 250 1)(13 0 0 500 250 1)(14 0 0 500 250 1)(15 0 0 500 250 1)(16 0 0 500 250 1)(17 0 0 500 250 1)(18 0 0 500 250 1)(19 0 0 500 250 1)(20 0 0 500 250 1)(21 0 0 500 250 1)(22 0 0 500 250 1)(23 0 0 500 250 1)(24 0 0 500 250 1)(25 0 0 500 250 1)(26 0 0 500 250 1)(27 0 0 500 250 1)(28 0 0 500 250 1)(29 0 0 500 250 1)(30 0 0 500 250 1)(31 0 0 500 250 1)(32 0 0 500 250 1)(33 0 0 500 250 1)(34 0 0 500 250 1)(35 0 0 500 250 1)(36 0 0 500 250 1)(37 0 0 500 250 1)(38 0 0 500 250 1)(39 0 0 500 250 1)(40 0 0 500 250 1)(41 0 0 500 250 1)(42 0 0 500 250 1)(43 0 0 500 250 1)(44 0 0 500 250 1)(45 0 0 500 250 1)(46 0 0 500 250 1)(47 0 0 500 250 1)(48 0 0 500 250 1)(49 0 0 500 250 1)(50 0 0 500 250 1)(51 0 0 500 250 1)(52 0 0 500 250 1)(53 0 0 500 250 1)(54 0 0 500 250 1)(55 0 0 500 250 1)(56 0 0 500 250 1)(57 0 0 500 250 1)(58 0 0 500 250 1)(59 0 0 500 250 1)(60 0 0 500 250 1)(61 0 0 500 250 1)(62 0 0 500 250 1)(63 0 0 500 250 1)(64 0 0 500 250 1)(65 0 0 500 250 1)(66 0 0 500 250 1)(67 0 0 500 250 1)(68 0 0 500 250 1)(69 0 0 500 250 1)(70 0 0 500 250 1)(71 0 0 500 250 1)(72 0 0 500 250 1)(73 0 0 500 250 1)(74 0 0 500 250 1)(75 0 0 500 250 1)(76 0 0 500 250 1)(77 0 0 500 250 1)(78 0 0 500 250 1)(79 0 0 500 250 1)(80 0 0 500 250 1)(81 0 0 500 250 1)(82 0 0 500 250 1)(83 0 0 500 250 1)(84 0 0 500 250 1)(85 0 0 500 250 1)(86 0 0 500 250 1)(87 0 0 500 250 1)(88 0 0 500 250 1)(89 0 0 500 250 1)(90 0 0 500 250 1)(91 0 0 500 250 1)(92 0 0 500 250 1)(93 0 0 500 250 1)(94 0 0 500 250 1)(95 0 0 500 250 1)(96 0 0 500 250 1)(97 0 0 500 250 1)(98 0 0 500 250 1)(99 0 0 500 250 1)(100 0 0 500 250 1)(101 0 0 500 250 1)(102 0 0 500 250 1)(103 0 0 500 250 1)(104 0 0 500 250 1)(105 0 0 500 250 1)(106 0 0 500 250 1)(107 0 0 500 250 1)(108 0 0 500 250 1)(109 0 0 500 250 1)(110 0 0 500 250 1)(111 0 0 500 250 1)(112 0 0 500 250 1)(113 0 0 500 250 1)(114 0 0 500 250 1)(115 0 0 500 250 1)(116 0 0 500 250 1)(117 0 0 500 250 1)(118 0 0 500 250 1)(119 0 0 500 250 1)(120 0 0 500 250 1)(121 0 0 500 250 1)(122 0 0 500 250 1)(123 0 0 500 250 1)(124 0 0 500 250 1)(125 0 0 500 250 1)(126 0 0 500 250 1)(127 0 0 500 250 1)(128 0 0 500 250 1)(129 0 0 500 250 1)(130 0 0 500 250 1)(131 0 0 500 250 1)(132 0 0 500 250 1)(133 0 0 500 250 1)(134 0 0 500 250 1)(135 0 0 500 250 1)(136 0 0 500 250 1)(137 0 0 500 250 1)(138 0 0 500 250 1)(139 0 0 500 250 1)(140 0 0 500 250 1)(141 0 0 500 250 1)(142 0 0 500 250 1)(143 0 0 500 250 1)(144 0 0 500 250 1)(145 0 0 500 250 1)(146 0 0 500 250 1)(147 0 0 500 250 1)(148 0 0 500 250 1)(149 0 0 500 250 1)(150 0 0 500 250 1)(151 0 0 500 250 1)(152 0 0 500 250 1)(153 0 0 500 250 1)(154 0 0 500 250 1)(155 0 0 500 250 1)(156 0 0 500 250 1)(157 0 0 500 250 1)(158 0 0 500 250 1)(159 0 0 500 250 1)(160 0 0 500 250 1)(161 0 0 500 250 1)(162 0 0 500 250 1)(163 0 0 500 250 1)(164 0 0 500 250 1)(165 0 0 500 250 1)(166 0 0 500 250 1)(167 0 0 500 250 1)(168 0 0 500 250 1)(169 0 0 500 250 1)(170 0 0 500 250 1)(171 0 0 500 250 1)(172 0 0 500 250 1)(173 0 0 500 250 1)(174 0 0 500 250 1)(175 0 0 500 250 1)(176 0 0 500 250 1)(177 0 0 500 250 1)(178 0 0 500 250 1)(179 0 0 500 250 1)(180 0 0 500 250 1)(181 0 0 500 250 1)(182 0 0 500 250 1)(183 0 0 500 250 1)(184 0 0 500 250 1)(185 0 0 500 250 1)(186 0 0 500 250 1)(187 0 0 500 250 1)(188 0 0 500 250 1)(189 0 0 500 250 1)(190 0 0 500 250 1)(191 0 0 500 250 1)(192 0 0 500 250 1)(193 0 0 500 250 1)(194 0 0 500 250 1)(195 0 0 500 250 1)(196 0 0 500 250 1)(197 0 0 500 250 1)(198 0 0 500 250 1)(199 0 0 500 250 1)(200 0 0 500 250 1)(201 0 0 500 250 1)(202 0 0 500 250 1)(203 0 0 500 250 1)(204 0 0 500 250 1)(205 0 0 500 250 1)(206 0 0 500 250 1)(207 0 0 500 250 1)(208 0 0 500 250 1)(209 0 0 500 250 1)(210 0 0 500 250 1)(211 0 0 500 250 1)(212 0 0 500 250 1)(213 0 0 500 250 1)(214 0 0 500 250 1)(215 0 0 500 250 1)(216 0 0 500 250 1)(217 0 0 500 250 1)(218 0 0 500 250 1)(219 0 0 500 250 1)(220 0 0 500 250 1)(221 0 0 500 250 1)(222 0 0 500 250 1)(223 0 0 500 250 1)(224 0 0 500 250 1)(225 0 0 500 250 1)(226 0 0 500 250 1)(227 0 0 500 250 1)(228 0 0 500 250 1)(229 0 0 500 250 1)(230 0 0 500 250 1)(231 0 0 500 250 1)(232 0 0 500 250 1)(233 0 0 500 250 1)(234 0 0 500 250 1)(235 0 0 500 250 1)(236 0 0 500 250 1)(237 0 0 500 250 1)(238 0 0 500 250 1)(239 0 0 500 250 1)(240 0 0 500 250 1)(241 0 0 500 250 1)(242 0 0 500 250 1)(243 0 0 500 250 1)(244 0 0 500 250 1)(245 0 0 500 250 1)(246 0 0 500 250 1)(247 0 0 500 250 1)(248 0 0 500 250 1)(249 0 0 500 250 1)(250 0 0 500 250 1)(251 0 0 500 250 1)(252 0 0 500 250 1)(253 0 0 500 250 1)(254 0 0 500 250 1)(255 0 0 500 250 1)(256 0 0 500 250 1)(257 0 0 500 250 1)(258 0 0 500 250 1)(259 0 0 500 250 1)(260 0 0 500 250 1)(261 0 0 500 250 1)(262 0 0 500 250 1)(263 0 0 500 250 1)(264 0 0 500 250 1)(265 0 0 500 250 1)(266 0 0 500 250 1)(267 0 0 500 250 1)(268 0 0 500 250 1)(269 0 0 500 250 1)(270 0 0 500 250 1)(271 0 0 500 250 1)(272 0 0 500 250 1)(273 0 0 500 250 1)(274 0 0 500 250 1)(275 0 0 500 250 1)(276 0 0 500 250 1)(277 0 0 500 250 1)(278 0 0 500 250 1)(279 0 0 500 250 1)(280 0 0 500 250 1)(281 0 0 500 250 1)(282 0 0 500 250 1)(283 0 0 500 250 1)(284 0 0 500 250 1)(285 0 0 500 250 1)(286 0 0 500 250 1)(287 0 0 500 250 1)(288 0 0 500 250 1)(289 0 0 500 250 1)(290 0 0 500 250 1)(291 0 0 500 250 1)(292 0 0 500 250 1)(293 0 0 500 250 1)(294 0 0 500 250 1)(295 0 0 500 250 1)(296 0 0 500 250 1)(297 0 0 500 250 1)(298 0 0 500 250 1)(299 0 0 500 250 1)(300 0 0 500 250 1)(301 0 0 500 250 1)(302 0 0 500 250 1)(303 0 0 500 250 1)(304 0 0 500 250 1)(305 0 0 500 250 1)(306 0 0 500 250 1)(307 0 0 500 250 1)(308 0 0 500 250 1)(309 0 0 500 250 1)(310 0 0 500 250 1)(311 0 0 500 250 1)(312 0 0 500 250 1)(313 0 0 500 250 1)(314 0 0 500 250 1)(315 0 0 500 250 1)(316 0 0 500 250 1)(317 0 0 500 250 1)(318 0 0 500 250 1)(319 0 0 500 250 1)(320 0 0 500 250 1)(321 0 0 500 250 1)(322 0 0 500 250 1)(323 0 0 500 250 1)(324 0 0 500 250 1)(325 0 0 500 250 1)(326 0 0 500 250 1)(327 0 0 500 250 1)(328 0 0 500 250 1)(329 0 0 500 250 1)(330 0 0 500 250 1)(331 0 0 500 250 1)(332 0 0 500 250 1)(333 0 0 500 250 1)(334 0 0 500 250 1)(335 0 0 500 250 1)(336 0 0 500 250 1)(337 0 0 500 250 1)(338 0 0 500 250 1)(339 0 0 500 250 1)(340 0 0 500 250 1)(341 0 0 500 250 1)(342 0 0 500 250 1)(343 0 0 500 250 1)(344 0 0 500 250 1)(345 0 0 500 250 1)(346 0 0 500 250 1)(347 0 0 500 250 1)(348 0 0 500 250 1)(349 0 0 500 250 1)(350 0 0 500 250 1)(351 0 0 500 250 1)(352 0 0 500 250 1)(353 0 0 500 250 1)(354 0 0 500 250 1)(355 0 0 500 250 1)(356 0 0 500 250 1)(357 0 0 500 250 1)(358 0 0 500 250 1)(359 0 0 500 250 1)(360 0 0 500 250 1)(361 0 0 500 250 1)(362 0 0 500 250 1)(363 0 0 500 250 1)(364 0 0 500 250 1)(365 0 0 500 250 1)(366 0 0 500 250 1)(367 0 0 500 250 1)(368 0 0 500 250 1)(369 0 0 500 250 1)(370 0 0 500 250 1)(371 0 0 500 250 1)(372 0 0 500 250 1)(373 0 0 500 250 1)(374 0 0 500 250 1)(375 0 0 500 250 1)(376 0 0 500 250 1)(377 0 0 500 250 1)(378 0 0 500 250 1)(379 0 0 500 250 1)(380 0 0 500 250 1)(381 0 0 500 250 1)(382 0 0 500 250 1)(383 0 0 500 250 1) Type 21: (21,384)(0 1 0 0)(1 1 0 1)(2 1 0 2)(3 1 0 3)(4 1 0 4)(5 1 0 5)(6 1 0 6)(7 1 0 7)(8 1 0 8)(9 1 0 9)(10 1 0 10)(11 1 0 11)(12 1 0 12)(13 1 0 13)(14 1 0 14)(15 1 0 15)(16 1 0 16)(17 1 0 17)(18 1 0 18)(19 1 0 19)(20 1 0 20)(21 1 0 21)(22 1 0 22)(23 1 0 23)(24 1 0 24)(25 1 0 25)(26 1 0 26)(27 1 0 27)(28 1 0 28)(29 1 0 29)(30 1 0 30)(31 1 0 31)(32 1 0 32)(33 1 0 33)(34 1 0 34)(35 1 0 35)(36 1 0 36)(37 1 0 37)(38 1 0 38)(39 1 0 39)(40 1 0 40)(41 1 0 41)(42 1 0 42)(43 1 0 43)(44 1 0 44)(45 1 0 45)(46 1 0 46)(47 1 0 47)(48 1 0 48)(49 1 0 49)(50 1 0 50)(51 1 0 51)(52 1 0 52)(53 1 0 53)(54 1 0 54)(55 1 0 55)(56 1 0 56)(57 1 0 57)(58 1 0 58)(59 1 0 59)(60 1 0 60)(61 1 0 61)(62 1 0 62)(63 1 0 63)(64 1 0 64)(65 1 0 65)(66 1 0 66)(67 1 0 67)(68 1 0 68)(69 1 0 69)(70 1 0 70)(71 1 0 71)(72 1 0 72)(73 1 0 73)(74 1 0 74)(75 1 0 75)(76 1 0 76)(77 1 0 77)(78 1 0 78)(79 1 0 79)(80 1 0 80)(81 1 0 81)(82 1 0 82)(83 1 0 83)(84 1 0 84)(85 1 0 85)(86 1 0 86)(87 1 0 87)(88 1 0 88)(89 1 0 89)(90 1 0 90)(91 1 0 91)(92 1 0 92)(93 1 0 93)(94 1 0 94)(95 1 0 95)(96 1 0 96)(97 1 0 97)(98 1 0 98)(99 1 0 99)(100 1 0 100)(101 1 0 101)(102 1 0 102)(103 1 0 103)(104 1 0 104)(105 1 0 105)(106 1 0 106)(107 1 0 107)(108 1 0 108)(109 1 0 109)(110 1 0 110)(111 1 0 111)(112 1 0 112)(113 1 0 113)(114 1 0 114)(115 1 0 115)(116 1 0 116)(117 1 0 117)(118 1 0 118)(119 1 0 119)(120 1 0 120)(121 1 0 121)(122 1 0 122)(123 1 0 123)(124 1 0 124)(125 1 0 125)(126 1 0 126)(127 1 0 127)(128 1 0 128)(129 1 0 129)(130 1 0 130)(131 1 0 131)(132 1 0 132)(133 1 0 133)(134 1 0 134)(135 1 0 135)(136 1 0 136)(137 1 0 137)(138 1 0 138)(139 1 0 139)(140 1 0 140)(141 1 0 141)(142 1 0 142)(143 1 0 143)(144 1 0 144)(145 1 0 145)(146 1 0 146)(147 1 0 147)(148 1 0 148)(149 1 0 149)(150 1 0 150)(151 1 0 151)(152 1 0 152)(153 1 0 153)(154 1 0 154)(155 1 0 155)(156 1 0 156)(157 1 0 157)(158 1 0 158)(159 1 0 159)(160 1 0 160)(161 1 0 161)(162 1 0 162)(163 1 0 163)(164 1 0 164)(165 1 0 165)(166 1 0 166)(167 1 0 167)(168 1 0 168)(169 1 0 169)(170 1 0 170)(171 1 0 171)(172 1 0 172)(173 1 0 173)(174 1 0 174)(175 1 0 175)(176 1 0 176)(177 1 0 177)(178 1 0 178)(179 1 0 179)(180 1 0 180)(181 1 0 181)(182 1 0 182)(183 1 0 183)(184 1 0 184)(185 1 0 185)(186 1 0 186)(187 1 0 187)(188 1 0 188)(189 1 0 189)(190 1 0 190)(191 1 0 191)(192 1 0 192)(193 1 0 193)(194 1 0 194)(195 1 0 195)(196 1 0 196)(197 1 0 197)(198 1 0 198)(199 1 0 199)(200 1 0 200)(201 1 0 201)(202 1 0 202)(203 1 0 203)(204 1 0 204)(205 1 0 205)(206 1 0 206)(207 1 0 207)(208 1 0 208)(209 1 0 209)(210 1 0 210)(211 1 0 211)(212 1 0 212)(213 1 0 213)(214 1 0 214)(215 1 0 215)(216 1 0 216)(217 1 0 217)(218 1 0 218)(219 1 0 219)(220 1 0 220)(221 1 0 221)(222 1 0 222)(223 1 0 223)(224 1 0 224)(225 1 0 225)(226 1 0 226)(227 1 0 227)(228 1 0 228)(229 1 0 229)(230 1 0 230)(231 1 0 231)(232 1 0 232)(233 1 0 233)(234 1 0 234)(235 1 0 235)(236 1 0 236)(237 1 0 237)(238 1 0 238)(239 1 0 239)(240 1 0 240)(241 1 0 241)(242 1 0 242)(243 1 0 243)(244 1 0 244)(245 1 0 245)(246 1 0 246)(247 1 0 247)(248 1 0 248)(249 1 0 249)(250 1 0 250)(251 1 0 251)(252 1 0 252)(253 1 0 253)(254 1 0 254)(255 1 0 255)(256 1 0 256)(257 1 0 257)(258 1 0 258)(259 1 0 259)(260 1 0 260)(261 1 0 261)(262 1 0 262)(263 1 0 263)(264 1 0 264)(265 1 0 265)(266 1 0 266)(267 1 0 267)(268 1 0 268)(269 1 0 269)(270 1 0 270)(271 1 0 271)(272 1 0 272)(273 1 0 273)(274 1 0 274)(275 1 0 275)(276 1 0 276)(277 1 0 277)(278 1 0 278)(279 1 0 279)(280 1 0 280)(281 1 0 281)(282 1 0 282)(283 1 0 283)(284 1 0 284)(285 1 0 285)(286 1 0 286)(287 1 0 287)(288 1 0 288)(289 1 0 289)(290 1 0 290)(291 1 0 291)(292 1 0 292)(293 1 0 293)(294 1 0 294)(295 1 0 295)(296 1 0 296)(297 1 0 297)(298 1 0 298)(299 1 0 299)(300 1 0 300)(301 1 0 301)(302 1 0 302)(303 1 0 303)(304 1 0 304)(305 1 0 305)(306 1 0 306)(307 1 0 307)(308 1 0 308)(309 1 0 309)(310 1 0 310)(311 1 0 311)(312 1 0 312)(313 1 0 313)(314 1 0 314)(315 1 0 315)(316 1 0 316)(317 1 0 317)(318 1 0 318)(319 1 0 319)(320 1 0 320)(321 1 0 321)(322 1 0 322)(323 1 0 323)(324 1 0 324)(325 1 0 325)(326 1 0 326)(327 1 0 327)(328 1 0 328)(329 1 0 329)(330 1 0 330)(331 1 0 331)(332 1 0 332)(333 1 0 333)(334 1 0 334)(335 1 0 335)(336 1 0 336)(337 1 0 337)(338 1 0 338)(339 1 0 339)(340 1 0 340)(341 1 0 341)(342 1 0 342)(343 1 0 343)(344 1 0 344)(345 1 0 345)(346 1 0 346)(347 1 0 347)(348 1 0 348)(349 1 0 349)(350 1 0 350)(351 1 0 351)(352 1 0 352)(353 1 0 353)(354 1 0 354)(355 1 0 355)(356 1 0 356)(357 1 0 357)(358 1 0 358)(359 1 0 359)(360 1 0 360)(361 1 0 361)(362 1 0 362)(363 1 0 363)(364 1 0 364)(365 1 0 365)(366 1 0 366)(367 1 0 367)(368 1 0 368)(369 1 0 369)(370 1 0 370)(371 1 0 371)(372 1 0 372)(373 1 0 373)(374 1 0 374)(375 1 0 375)(376 1 0 376)(377 1 0 377)(378 1 0 378)(379 1 0 379)(380 1 0 380)(381 1 0 381)(382 1 0 382)(383 1 0 383) Type 24: (24,384)(0 0 0 1 0)(1 0 0 1 1)(2 0 0 1 2)(3 0 0 1 3)(4 0 0 1 4)(5 0 0 1 5)(6 0 0 1 6)(7 0 0 1 7)(8 0 0 1 8)(9 0 0 1 9)(10 0 0 1 10)(11 0 0 1 11)(12 0 0 1 12)(13 0 0 1 13)(14 0 0 1 14)(15 0 0 1 15)(16 0 0 1 16)(17 0 0 1 17)(18 0 0 1 18)(19 0 0 1 19)(20 0 0 1 20)(21 0 0 1 21)(22 0 0 1 22)(23 0 0 1 23)(24 0 0 1 24)(25 0 0 1 25)(26 0 0 1 26)(27 0 0 1 27)(28 0 0 1 28)(29 0 0 1 29)(30 0 0 1 30)(31 0 0 1 31)(32 0 0 1 32)(33 0 0 1 33)(34 0 0 1 34)(35 0 0 1 35)(36 0 0 1 36)(37 0 0 1 37)(38 0 0 1 38)(39 0 0 1 39)(40 0 0 1 40)(41 0 0 1 41)(42 0 0 1 42)(43 0 0 1 43)(44 0 0 1 44)(45 0 0 1 45)(46 0 0 1 46)(47 0 0 1 47)(48 0 0 1 288)(49 0 0 1 289)(50 0 0 1 290)(51 0 0 1 291)(52 0 0 1 292)(53 0 0 1 293)(54 0 0 1 294)(55 0 0 1 295)(56 0 0 1 296)(57 0 0 1 297)(58 0 0 1 298)(59 0 0 1 299)(60 0 0 1 300)(61 0 0 1 301)(62 0 0 1 302)(63 0 0 1 303)(64 0 0 1 304)(65 0 0 1 305)(66 0 0 1 306)(67 0 0 1 307)(68 0 0 1 308)(69 0 0 1 309)(70 0 0 1 310)(71 0 0 1 311)(72 0 0 1 312)(73 0 0 1 313)(74 0 0 1 314)(75 0 0 1 315)(76 0 0 1 316)(77 0 0 1 317)(78 0 0 1 318)(79 0 0 1 319)(80 0 0 1 320)(81 0 0 1 321)(82 0 0 1 322)(83 0 0 1 323)(84 0 0 1 324)(85 0 0 1 325)(86 0 0 1 326)(87 0 0 1 327)(88 0 0 1 328)(89 0 0 1 329)(90 0 0 1 330)(91 0 0 1 331)(92 0 0 1 332)(93 0 0 1 333)(94 0 0 1 334)(95 0 0 1 335)(96 0 0 1 48)(97 0 0 1 49)(98 0 0 1 50)(99 0 0 1 51)(100 0 0 1 52)(101 0 0 1 53)(102 0 0 1 54)(103 0 0 1 55)(104 0 0 1 56)(105 0 0 1 57)(106 0 0 1 58)(107 0 0 1 59)(108 0 0 1 60)(109 0 0 1 61)(110 0 0 1 62)(111 0 0 1 63)(112 0 0 1 64)(113 0 0 1 65)(114 0 0 1 66)(115 0 0 1 67)(116 0 0 1 68)(117 0 0 1 69)(118 0 0 1 70)(119 0 0 1 71)(120 0 0 1 72)(121 0 0 1 73)(122 0 0 1 74)(123 0 0 1 75)(124 0 0 1 76)(125 0 0 1 77)(126 0 0 1 78)(127 0 0 1 79)(128 0 0 1 80)(129 0 0 1 81)(130 0 0 1 82)(131 0 0 1 83)(132 0 0 1 84)(133 0 0 1 85)(134 0 0 1 86)(135 0 0 1 87)(136 0 0 1 88)(137 0 0 1 89)(138 0 0 1 90)(139 0 0 1 91)(140 0 0 1 92)(141 0 0 1 93)(142 0 0 1 94)(143 0 0 1 95)(144 0 0 1 336)(145 0 0 1 337)(146 0 0 1 338)(147 0 0 1 339)(148 0 0 1 340)(149 0 0 1 341)(150 0 0 1 342)(151 0 0 1 343)(152 0 0 1 344)(153 0 0 1 345)(154 0 0 1 346)(155 0 0 1 347)(156 0 0 1 348)(157 0 0 1 349)(158 0 0 1 350)(159 0 0 1 351)(160 0 0 1 352)(161 0 0 1 353)(162 0 0 1 354)(163 0 0 1 355)(164 0 0 1 356)(165 0 0 1 357)(166 0 0 1 358)(167 0 0 1 359)(168 0 0 1 360)(169 0 0 1 361)(170 0 0 1 362)(171 0 0 1 363)(172 0 0 1 364)(173 0 0 1 365)(174 0 0 1 366)(175 0 0 1 367)(176 0 0 1 368)(177 0 0 1 369)(178 0 0 1 370)(179 0 0 1 371)(180 0 0 1 372)(181 0 0 1 373)(182 0 0 1 374)(183 0 0 1 375)(184 0 0 1 376)(185 0 0 1 377)(186 0 0 1 378)(187 0 0 1 379)(188 0 0 1 380)(189 0 0 1 381)(190 0 0 1 382)(191 0 0 1 383)(192 0 0 1 96)(193 0 0 1 97)(194 0 0 1 98)(195 0 0 1 99)(196 0 0 1 100)(197 0 0 1 101)(198 0 0 1 102)(199 0 0 1 103)(200 0 0 1 104)(201 0 0 1 105)(202 0 0 1 106)(203 0 0 1 107)(204 0 0 1 108)(205 0 0 1 109)(206 0 0 1 110)(207 0 0 1 111)(208 0 0 1 112)(209 0 0 1 113)(210 0 0 1 114)(211 0 0 1 115)(212 0 0 1 116)(213 0 0 1 117)(214 0 0 1 118)(215 0 0 1 119)(216 0 0 1 120)(217 0 0 1 121)(218 0 0 1 122)(219 0 0 1 123)(220 0 0 1 124)(221 0 0 1 125)(222 0 0 1 126)(223 0 0 1 127)(224 0 0 1 128)(225 0 0 1 129)(226 0 0 1 130)(227 0 0 1 131)(228 0 0 1 132)(229 0 0 1 133)(230 0 0 1 134)(231 0 0 1 135)(232 0 0 1 136)(233 0 0 1 137)(234 0 0 1 138)(235 0 0 1 139)(236 0 0 1 140)(237 0 0 1 141)(238 0 0 1 142)(239 0 0 1 143)(240 0 0 1 192)(241 0 0 1 193)(242 0 0 1 194)(243 0 0 1 195)(244 0 0 1 196)(245 0 0 1 197)(246 0 0 1 198)(247 0 0 1 199)(248 0 0 1 200)(249 0 0 1 201)(250 0 0 1 202)(251 0 0 1 203)(252 0 0 1 204)(253 0 0 1 205)(254 0 0 1 206)(255 0 0 1 207)(256 0 0 1 208)(257 0 0 1 209)(258 0 0 1 210)(259 0 0 1 211)(260 0 0 1 212)(261 0 0 1 213)(262 0 0 1 214)(263 0 0 1 215)(264 0 0 1 216)(265 0 0 1 217)(266 0 0 1 218)(267 0 0 1 219)(268 0 0 1 220)(269 0 0 1 221)(270 0 0 1 222)(271 0 0 1 223)(272 0 0 1 224)(273 0 0 1 225)(274 0 0 1 226)(275 0 0 1 227)(276 0 0 1 228)(277 0 0 1 229)(278 0 0 1 230)(279 0 0 1 231)(280 0 0 1 232)(281 0 0 1 233)(282 0 0 1 234)(283 0 0 1 235)(284 0 0 1 236)(285 0 0 1 237)(286 0 0 1 238)(287 0 0 1 239)(288 0 0 1 144)(289 0 0 1 145)(290 0 0 1 146)(291 0 0 1 147)(292 0 0 1 148)(293 0 0 1 149)(294 0 0 1 150)(295 0 0 1 151)(296 0 0 1 152)(297 0 0 1 153)(298 0 0 1 154)(299 0 0 1 155)(300 0 0 1 156)(301 0 0 1 157)(302 0 0 1 158)(303 0 0 1 159)(304 0 0 1 160)(305 0 0 1 161)(306 0 0 1 162)(307 0 0 1 163)(308 0 0 1 164)(309 0 0 1 165)(310 0 0 1 166)(311 0 0 1 167)(312 0 0 1 168)(313 0 0 1 169)(314 0 0 1 170)(315 0 0 1 171)(316 0 0 1 172)(317 0 0 1 173)(318 0 0 1 174)(319 0 0 1 175)(320 0 0 1 176)(321 0 0 1 177)(322 0 0 1 178)(323 0 0 1 179)(324 0 0 1 180)(325 0 0 1 181)(326 0 0 1 182)(327 0 0 1 183)(328 0 0 1 184)(329 0 0 1 185)(330 0 0 1 186)(331 0 0 1 187)(332 0 0 1 188)(333 0 0 1 189)(334 0 0 1 190)(335 0 0 1 191)(336 0 0 1 240)(337 0 0 1 241)(338 0 0 1 242)(339 0 0 1 243)(340 0 0 1 244)(341 0 0 1 245)(342 0 0 1 246)(343 0 0 1 247)(344 0 0 1 248)(345 0 0 1 249)(346 0 0 1 250)(347 0 0 1 251)(348 0 0 1 252)(349 0 0 1 253)(350 0 0 1 254)(351 0 0 1 255)(352 0 0 1 256)(353 0 0 1 257)(354 0 0 1 258)(355 0 0 1 259)(356 0 0 1 260)(357 0 0 1 261)(358 0 0 1 262)(359 0 0 1 263)(360 0 0 1 264)(361 0 0 1 265)(362 0 0 1 266)(363 0 0 1 267)(364 0 0 1 268)(365 0 0 1 269)(366 0 0 1 270)(367 0 0 1 271)(368 0 0 1 272)(369 0 0 1 273)(370 0 0 1 274)(371 0 0 1 275)(372 0 0 1 276)(373 0 0 1 277)(374 0 0 1 278)(375 0 0 1 279)(376 0 0 1 280)(377 0 0 1 281)(378 0 0 1 282)(379 0 0 1 283)(380 0 0 1 284)(381 0 0 1 285)(382 0 0 1 286)(383 0 0 1 287) Type 2020: (2020,1536)(0 0 0 0 0)(1 0 0 0 1)(2 0 0 0 2)(3 0 0 0 3)(4 0 0 0 4)(5 0 0 0 5)(6 0 0 0 6)(7 0 0 0 7)(8 0 0 0 8)(9 0 0 0 9)(10 0 0 0 10)(11 0 0 0 11)(12 0 0 0 12)(13 0 0 0 13)(14 0 0 0 14)(15 0 0 0 15)(16 0 0 0 16)(17 0 0 0 17)(18 0 0 0 18)(19 0 0 0 19)(20 0 0 0 20)(21 0 0 0 21)(22 0 0 0 22)(23 0 0 0 23)(24 0 0 0 24)(25 0 0 0 25)(26 0 0 0 26)(27 0 0 0 27)(28 0 0 0 28)(29 0 0 0 29)(30 0 0 0 30)(31 0 0 0 31)(32 0 0 0 32)(33 0 0 0 33)(34 0 0 0 34)(35 0 0 0 35)(36 0 0 0 36)(37 0 0 0 37)(38 0 0 0 38)(39 0 0 0 39)(40 0 0 0 40)(41 0 0 0 41)(42 0 0 0 42)(43 0 0 0 43)(44 0 0 0 44)(45 0 0 0 45)(46 0 0 0 46)(47 0 0 0 47)(48 0 0 0 48)(49 0 0 0 49)(50 0 0 0 50)(51 0 0 0 51)(52 0 0 0 52)(53 0 0 0 53)(54 0 0 0 54)(55 0 0 0 55)(56 0 0 0 56)(57 0 0 0 57)(58 0 0 0 58)(59 0 0 0 59)(60 0 0 0 60)(61 0 0 0 61)(62 0 0 0 62)(63 0 0 0 63)(64 0 0 0 64)(65 0 0 0 65)(66 0 0 0 66)(67 0 0 0 67)(68 0 0 0 68)(69 0 0 0 69)(70 0 0 0 70)(71 0 0 0 71)(72 0 0 0 72)(73 0 0 0 73)(74 0 0 0 74)(75 0 0 0 75)(76 0 0 0 76)(77 0 0 0 77)(78 0 0 0 78)(79 0 0 0 79)(80 0 0 0 80)(81 0 0 0 81)(82 0 0 0 82)(83 0 0 0 83)(84 0 0 0 84)(85 0 0 0 85)(86 0 0 0 86)(87 0 0 0 87)(88 0 0 0 88)(89 0 0 0 89)(90 0 0 0 90)(91 0 0 0 91)(92 0 0 0 92)(93 0 0 0 93)(94 0 0 0 94)(95 0 0 0 95)(96 0 0 0 96)(97 0 0 0 97)(98 0 0 0 98)(99 0 0 0 99)(100 0 0 0 100)(101 0 0 0 101)(102 0 0 0 102)(103 0 0 0 103)(104 0 0 0 104)(105 0 0 0 105)(106 0 0 0 106)(107 0 0 0 107)(108 0 0 0 108)(109 0 0 0 109)(110 0 0 0 110)(111 0 0 0 111)(112 0 0 0 112)(113 0 0 0 113)(114 0 0 0 114)(115 0 0 0 115)(116 0 0 0 116)(117 0 0 0 117)(118 0 0 0 118)(119 0 0 0 119)(120 0 0 0 120)(121 0 0 0 121)(122 0 0 0 122)(123 0 0 0 123)(124 0 0 0 124)(125 0 0 0 125)(126 0 0 0 126)(127 0 0 0 127)(128 0 0 0 128)(129 0 0 0 129)(130 0 0 0 130)(131 0 0 0 131)(132 0 0 0 132)(133 0 0 0 133)(134 0 0 0 134)(135 0 0 0 135)(136 0 0 0 136)(137 0 0 0 137)(138 0 0 0 138)(139 0 0 0 139)(140 0 0 0 140)(141 0 0 0 141)(142 0 0 0 142)(143 0 0 0 143)(144 0 0 0 144)(145 0 0 0 145)(146 0 0 0 146)(147 0 0 0 147)(148 0 0 0 148)(149 0 0 0 149)(150 0 0 0 150)(151 0 0 0 151)(152 0 0 0 152)(153 0 0 0 153)(154 0 0 0 154)(155 0 0 0 155)(156 0 0 0 156)(157 0 0 0 157)(158 0 0 0 158)(159 0 0 0 159)(160 0 0 0 160)(161 0 0 0 161)(162 0 0 0 162)(163 0 0 0 163)(164 0 0 0 164)(165 0 0 0 165)(166 0 0 0 166)(167 0 0 0 167)(168 0 0 0 168)(169 0 0 0 169)(170 0 0 0 170)(171 0 0 0 171)(172 0 0 0 172)(173 0 0 0 173)(174 0 0 0 174)(175 0 0 0 175)(176 0 0 0 176)(177 0 0 0 177)(178 0 0 0 178)(179 0 0 0 179)(180 0 0 0 180)(181 0 0 0 181)(182 0 0 0 182)(183 0 0 0 183)(184 0 0 0 184)(185 0 0 0 185)(186 0 0 0 186)(187 0 0 0 187)(188 0 0 0 188)(189 0 0 0 189)(190 0 0 0 190)(191 0 0 0 191)(192 0 0 0 192)(193 0 0 0 193)(194 0 0 0 194)(195 0 0 0 195)(196 0 0 0 196)(197 0 0 0 197)(198 0 0 0 198)(199 0 0 0 199)(200 0 0 0 200)(201 0 0 0 201)(202 0 0 0 202)(203 0 0 0 203)(204 0 0 0 204)(205 0 0 0 205)(206 0 0 0 206)(207 0 0 0 207)(208 0 0 0 208)(209 0 0 0 209)(210 0 0 0 210)(211 0 0 0 211)(212 0 0 0 212)(213 0 0 0 213)(214 0 0 0 214)(215 0 0 0 215)(216 0 0 0 216)(217 0 0 0 217)(218 0 0 0 218)(219 0 0 0 219)(220 0 0 0 220)(221 0 0 0 221)(222 0 0 0 222)(223 0 0 0 223)(224 0 0 0 224)(225 0 0 0 225)(226 0 0 0 226)(227 0 0 0 227)(228 0 0 0 228)(229 0 0 0 229)(230 0 0 0 230)(231 0 0 0 231)(232 0 0 0 232)(233 0 0 0 233)(234 0 0 0 234)(235 0 0 0 235)(236 0 0 0 236)(237 0 0 0 237)(238 0 0 0 238)(239 0 0 0 239)(240 0 0 0 240)(241 0 0 0 241)(242 0 0 0 242)(243 0 0 0 243)(244 0 0 0 244)(245 0 0 0 245)(246 0 0 0 246)(247 0 0 0 247)(248 0 0 0 248)(249 0 0 0 249)(250 0 0 0 250)(251 0 0 0 251)(252 0 0 0 252)(253 0 0 0 253)(254 0 0 0 254)(255 0 0 0 255)(256 0 0 0 256)(257 0 0 0 257)(258 0 0 0 258)(259 0 0 0 259)(260 0 0 0 260)(261 0 0 0 261)(262 0 0 0 262)(263 0 0 0 263)(264 0 0 0 264)(265 0 0 0 265)(266 0 0 0 266)(267 0 0 0 267)(268 0 0 0 268)(269 0 0 0 269)(270 0 0 0 270)(271 0 0 0 271)(272 0 0 0 272)(273 0 0 0 273)(274 0 0 0 274)(275 0 0 0 275)(276 0 0 0 276)(277 0 0 0 277)(278 0 0 0 278)(279 0 0 0 279)(280 0 0 0 280)(281 0 0 0 281)(282 0 0 0 282)(283 0 0 0 283)(284 0 0 0 284)(285 0 0 0 285)(286 0 0 0 286)(287 0 0 0 287)(288 0 0 0 288)(289 0 0 0 289)(290 0 0 0 290)(291 0 0 0 291)(292 0 0 0 292)(293 0 0 0 293)(294 0 0 0 294)(295 0 0 0 295)(296 0 0 0 296)(297 0 0 0 297)(298 0 0 0 298)(299 0 0 0 299)(300 0 0 0 300)(301 0 0 0 301)(302 0 0 0 302)(303 0 0 0 303)(304 0 0 0 304)(305 0 0 0 305)(306 0 0 0 306)(307 0 0 0 307)(308 0 0 0 308)(309 0 0 0 309)(310 0 0 0 310)(311 0 0 0 311)(312 0 0 0 312)(313 0 0 0 313)(314 0 0 0 314)(315 0 0 0 315)(316 0 0 0 316)(317 0 0 0 317)(318 0 0 0 318)(319 0 0 0 319)(320 0 0 0 320)(321 0 0 0 321)(322 0 0 0 322)(323 0 0 0 323)(324 0 0 0 324)(325 0 0 0 325)(326 0 0 0 326)(327 0 0 0 327)(328 0 0 0 328)(329 0 0 0 329)(330 0 0 0 330)(331 0 0 0 331)(332 0 0 0 332)(333 0 0 0 333)(334 0 0 0 334)(335 0 0 0 335)(336 0 0 0 336)(337 0 0 0 337)(338 0 0 0 338)(339 0 0 0 339)(340 0 0 0 340)(341 0 0 0 341)(342 0 0 0 342)(343 0 0 0 343)(344 0 0 0 344)(345 0 0 0 345)(346 0 0 0 346)(347 0 0 0 347)(348 0 0 0 348)(349 0 0 0 349)(350 0 0 0 350)(351 0 0 0 351)(352 0 0 0 352)(353 0 0 0 353)(354 0 0 0 354)(355 0 0 0 355)(356 0 0 0 356)(357 0 0 0 357)(358 0 0 0 358)(359 0 0 0 359)(360 0 0 0 360)(361 0 0 0 361)(362 0 0 0 362)(363 0 0 0 363)(364 0 0 0 364)(365 0 0 0 365)(366 0 0 0 366)(367 0 0 0 367)(368 0 0 0 368)(369 0 0 0 369)(370 0 0 0 370)(371 0 0 0 371)(372 0 0 0 372)(373 0 0 0 373)(374 0 0 0 374)(375 0 0 0 375)(376 0 0 0 376)(377 0 0 0 377)(378 0 0 0 378)(379 0 0 0 379)(380 0 0 0 380)(381 0 0 0 381)(382 0 0 0 382)(383 0 0 0 383)(384 1 0 0 0)(385 1 0 0 1)(386 1 0 0 2)(387 1 0 0 3)(388 1 0 0 4)(389 1 0 0 5)(390 1 0 0 6)(391 1 0 0 7)(392 1 0 0 8)(393 1 0 0 9)(394 1 0 0 10)(395 1 0 0 11)(396 1 0 0 12)(397 1 0 0 13)(398 1 0 0 14)(399 1 0 0 15)(400 1 0 0 16)(401 1 0 0 17)(402 1 0 0 18)(403 1 0 0 19)(404 1 0 0 20)(405 1 0 0 21)(406 1 0 0 22)(407 1 0 0 23)(408 1 0 0 24)(409 1 0 0 25)(410 1 0 0 26)(411 1 0 0 27)(412 1 0 0 28)(413 1 0 0 29)(414 1 0 0 30)(415 1 0 0 31)(416 1 0 0 32)(417 1 0 0 33)(418 1 0 0 34)(419 1 0 0 35)(420 1 0 0 36)(421 1 0 0 37)(422 1 0 0 38)(423 1 0 0 39)(424 1 0 0 40)(425 1 0 0 41)(426 1 0 0 42)(427 1 0 0 43)(428 1 0 0 44)(429 1 0 0 45)(430 1 0 0 46)(431 1 0 0 47)(432 1 0 0 48)(433 1 0 0 49)(434 1 0 0 50)(435 1 0 0 51)(436 1 0 0 52)(437 1 0 0 53)(438 1 0 0 54)(439 1 0 0 55)(440 1 0 0 56)(441 1 0 0 57)(442 1 0 0 58)(443 1 0 0 59)(444 1 0 0 60)(445 1 0 0 61)(446 1 0 0 62)(447 1 0 0 63)(448 1 0 0 64)(449 1 0 0 65)(450 1 0 0 66)(451 1 0 0 67)(452 1 0 0 68)(453 1 0 0 69)(454 1 0 0 70)(455 1 0 0 71)(456 1 0 0 72)(457 1 0 0 73)(458 1 0 0 74)(459 1 0 0 75)(460 1 0 0 76)(461 1 0 0 77)(462 1 0 0 78)(463 1 0 0 79)(464 1 0 0 80)(465 1 0 0 81)(466 1 0 0 82)(467 1 0 0 83)(468 1 0 0 84)(469 1 0 0 85)(470 1 0 0 86)(471 1 0 0 87)(472 1 0 0 88)(473 1 0 0 89)(474 1 0 0 90)(475 1 0 0 91)(476 1 0 0 92)(477 1 0 0 93)(478 1 0 0 94)(479 1 0 0 95)(480 1 0 0 96)(481 1 0 0 97)(482 1 0 0 98)(483 1 0 0 99)(484 1 0 0 100)(485 1 0 0 101)(486 1 0 0 102)(487 1 0 0 103)(488 1 0 0 104)(489 1 0 0 105)(490 1 0 0 106)(491 1 0 0 107)(492 1 0 0 108)(493 1 0 0 109)(494 1 0 0 110)(495 1 0 0 111)(496 1 0 0 112)(497 1 0 0 113)(498 1 0 0 114)(499 1 0 0 115)(500 1 0 0 116)(501 1 0 0 117)(502 1 0 0 118)(503 1 0 0 119)(504 1 0 0 120)(505 1 0 0 121)(506 1 0 0 122)(507 1 0 0 123)(508 1 0 0 124)(509 1 0 0 125)(510 1 0 0 126)(511 1 0 0 127)(512 1 0 0 128)(513 1 0 0 129)(514 1 0 0 130)(515 1 0 0 131)(516 1 0 0 132)(517 1 0 0 133)(518 1 0 0 134)(519 1 0 0 135)(520 1 0 0 136)(521 1 0 0 137)(522 1 0 0 138)(523 1 0 0 139)(524 1 0 0 140)(525 1 0 0 141)(526 1 0 0 142)(527 1 0 0 143)(528 1 0 0 144)(529 1 0 0 145)(530 1 0 0 146)(531 1 0 0 147)(532 1 0 0 148)(533 1 0 0 149)(534 1 0 0 150)(535 1 0 0 151)(536 1 0 0 152)(537 1 0 0 153)(538 1 0 0 154)(539 1 0 0 155)(540 1 0 0 156)(541 1 0 0 157)(542 1 0 0 158)(543 1 0 0 159)(544 1 0 0 160)(545 1 0 0 161)(546 1 0 0 162)(547 1 0 0 163)(548 1 0 0 164)(549 1 0 0 165)(550 1 0 0 166)(551 1 0 0 167)(552 1 0 0 168)(553 1 0 0 169)(554 1 0 0 170)(555 1 0 0 171)(556 1 0 0 172)(557 1 0 0 173)(558 1 0 0 174)(559 1 0 0 175)(560 1 0 0 176)(561 1 0 0 177)(562 1 0 0 178)(563 1 0 0 179)(564 1 0 0 180)(565 1 0 0 181)(566 1 0 0 182)(567 1 0 0 183)(568 1 0 0 184)(569 1 0 0 185)(570 1 0 0 186)(571 1 0 0 187)(572 1 0 0 188)(573 1 0 0 189)(574 1 0 0 190)(575 1 0 0 191)(576 1 0 0 192)(577 1 0 0 193)(578 1 0 0 194)(579 1 0 0 195)(580 1 0 0 196)(581 1 0 0 197)(582 1 0 0 198)(583 1 0 0 199)(584 1 0 0 200)(585 1 0 0 201)(586 1 0 0 202)(587 1 0 0 203)(588 1 0 0 204)(589 1 0 0 205)(590 1 0 0 206)(591 1 0 0 207)(592 1 0 0 208)(593 1 0 0 209)(594 1 0 0 210)(595 1 0 0 211)(596 1 0 0 212)(597 1 0 0 213)(598 1 0 0 214)(599 1 0 0 215)(600 1 0 0 216)(601 1 0 0 217)(602 1 0 0 218)(603 1 0 0 219)(604 1 0 0 220)(605 1 0 0 221)(606 1 0 0 222)(607 1 0 0 223)(608 1 0 0 224)(609 1 0 0 225)(610 1 0 0 226)(611 1 0 0 227)(612 1 0 0 228)(613 1 0 0 229)(614 1 0 0 230)(615 1 0 0 231)(616 1 0 0 232)(617 1 0 0 233)(618 1 0 0 234)(619 1 0 0 235)(620 1 0 0 236)(621 1 0 0 237)(622 1 0 0 238)(623 1 0 0 239)(624 1 0 0 240)(625 1 0 0 241)(626 1 0 0 242)(627 1 0 0 243)(628 1 0 0 244)(629 1 0 0 245)(630 1 0 0 246)(631 1 0 0 247)(632 1 0 0 248)(633 1 0 0 249)(634 1 0 0 250)(635 1 0 0 251)(636 1 0 0 252)(637 1 0 0 253)(638 1 0 0 254)(639 1 0 0 255)(640 1 0 0 256)(641 1 0 0 257)(642 1 0 0 258)(643 1 0 0 259)(644 1 0 0 260)(645 1 0 0 261)(646 1 0 0 262)(647 1 0 0 263)(648 1 0 0 264)(649 1 0 0 265)(650 1 0 0 266)(651 1 0 0 267)(652 1 0 0 268)(653 1 0 0 269)(654 1 0 0 270)(655 1 0 0 271)(656 1 0 0 272)(657 1 0 0 273)(658 1 0 0 274)(659 1 0 0 275)(660 1 0 0 276)(661 1 0 0 277)(662 1 0 0 278)(663 1 0 0 279)(664 1 0 0 280)(665 1 0 0 281)(666 1 0 0 282)(667 1 0 0 283)(668 1 0 0 284)(669 1 0 0 285)(670 1 0 0 286)(671 1 0 0 287)(672 1 0 0 288)(673 1 0 0 289)(674 1 0 0 290)(675 1 0 0 291)(676 1 0 0 292)(677 1 0 0 293)(678 1 0 0 294)(679 1 0 0 295)(680 1 0 0 296)(681 1 0 0 297)(682 1 0 0 298)(683 1 0 0 299)(684 1 0 0 300)(685 1 0 0 301)(686 1 0 0 302)(687 1 0 0 303)(688 1 0 0 304)(689 1 0 0 305)(690 1 0 0 306)(691 1 0 0 307)(692 1 0 0 308)(693 1 0 0 309)(694 1 0 0 310)(695 1 0 0 311)(696 1 0 0 312)(697 1 0 0 313)(698 1 0 0 314)(699 1 0 0 315)(700 1 0 0 316)(701 1 0 0 317)(702 1 0 0 318)(703 1 0 0 319)(704 1 0 0 320)(705 1 0 0 321)(706 1 0 0 322)(707 1 0 0 323)(708 1 0 0 324)(709 1 0 0 325)(710 1 0 0 326)(711 1 0 0 327)(712 1 0 0 328)(713 1 0 0 329)(714 1 0 0 330)(715 1 0 0 331)(716 1 0 0 332)(717 1 0 0 333)(718 1 0 0 334)(719 1 0 0 335)(720 1 0 0 336)(721 1 0 0 337)(722 1 0 0 338)(723 1 0 0 339)(724 1 0 0 340)(725 1 0 0 341)(726 1 0 0 342)(727 1 0 0 343)(728 1 0 0 344)(729 1 0 0 345)(730 1 0 0 346)(731 1 0 0 347)(732 1 0 0 348)(733 1 0 0 349)(734 1 0 0 350)(735 1 0 0 351)(736 1 0 0 352)(737 1 0 0 353)(738 1 0 0 354)(739 1 0 0 355)(740 1 0 0 356)(741 1 0 0 357)(742 1 0 0 358)(743 1 0 0 359)(744 1 0 0 360)(745 1 0 0 361)(746 1 0 0 362)(747 1 0 0 363)(748 1 0 0 364)(749 1 0 0 365)(750 1 0 0 366)(751 1 0 0 367)(752 1 0 0 368)(753 1 0 0 369)(754 1 0 0 370)(755 1 0 0 371)(756 1 0 0 372)(757 1 0 0 373)(758 1 0 0 374)(759 1 0 0 375)(760 1 0 0 376)(761 1 0 0 377)(762 1 0 0 378)(763 1 0 0 379)(764 1 0 0 380)(765 1 0 0 381)(766 1 0 0 382)(767 1 0 0 383)(768 2 0 0 0)(769 2 0 0 1)(770 2 0 0 2)(771 2 0 0 3)(772 2 0 0 4)(773 2 0 0 5)(774 2 0 0 6)(775 2 0 0 7)(776 2 0 0 8)(777 2 0 0 9)(778 2 0 0 10)(779 2 0 0 11)(780 2 0 0 12)(781 2 0 0 13)(782 2 0 0 14)(783 2 0 0 15)(784 2 0 0 16)(785 2 0 0 17)(786 2 0 0 18)(787 2 0 0 19)(788 2 0 0 20)(789 2 0 0 21)(790 2 0 0 22)(791 2 0 0 23)(792 2 0 0 24)(793 2 0 0 25)(794 2 0 0 26)(795 2 0 0 27)(796 2 0 0 28)(797 2 0 0 29)(798 2 0 0 30)(799 2 0 0 31)(800 2 0 0 32)(801 2 0 0 33)(802 2 0 0 34)(803 2 0 0 35)(804 2 0 0 36)(805 2 0 0 37)(806 2 0 0 38)(807 2 0 0 39)(808 2 0 0 40)(809 2 0 0 41)(810 2 0 0 42)(811 2 0 0 43)(812 2 0 0 44)(813 2 0 0 45)(814 2 0 0 46)(815 2 0 0 47)(816 2 0 0 48)(817 2 0 0 49)(818 2 0 0 50)(819 2 0 0 51)(820 2 0 0 52)(821 2 0 0 53)(822 2 0 0 54)(823 2 0 0 55)(824 2 0 0 56)(825 2 0 0 57)(826 2 0 0 58)(827 2 0 0 59)(828 2 0 0 60)(829 2 0 0 61)(830 2 0 0 62)(831 2 0 0 63)(832 2 0 0 64)(833 2 0 0 65)(834 2 0 0 66)(835 2 0 0 67)(836 2 0 0 68)(837 2 0 0 69)(838 2 0 0 70)(839 2 0 0 71)(840 2 0 0 72)(841 2 0 0 73)(842 2 0 0 74)(843 2 0 0 75)(844 2 0 0 76)(845 2 0 0 77)(846 2 0 0 78)(847 2 0 0 79)(848 2 0 0 80)(849 2 0 0 81)(850 2 0 0 82)(851 2 0 0 83)(852 2 0 0 84)(853 2 0 0 85)(854 2 0 0 86)(855 2 0 0 87)(856 2 0 0 88)(857 2 0 0 89)(858 2 0 0 90)(859 2 0 0 91)(860 2 0 0 92)(861 2 0 0 93)(862 2 0 0 94)(863 2 0 0 95)(864 2 0 0 96)(865 2 0 0 97)(866 2 0 0 98)(867 2 0 0 99)(868 2 0 0 100)(869 2 0 0 101)(870 2 0 0 102)(871 2 0 0 103)(872 2 0 0 104)(873 2 0 0 105)(874 2 0 0 106)(875 2 0 0 107)(876 2 0 0 108)(877 2 0 0 109)(878 2 0 0 110)(879 2 0 0 111)(880 2 0 0 112)(881 2 0 0 113)(882 2 0 0 114)(883 2 0 0 115)(884 2 0 0 116)(885 2 0 0 117)(886 2 0 0 118)(887 2 0 0 119)(888 2 0 0 120)(889 2 0 0 121)(890 2 0 0 122)(891 2 0 0 123)(892 2 0 0 124)(893 2 0 0 125)(894 2 0 0 126)(895 2 0 0 127)(896 2 0 0 128)(897 2 0 0 129)(898 2 0 0 130)(899 2 0 0 131)(900 2 0 0 132)(901 2 0 0 133)(902 2 0 0 134)(903 2 0 0 135)(904 2 0 0 136)(905 2 0 0 137)(906 2 0 0 138)(907 2 0 0 139)(908 2 0 0 140)(909 2 0 0 141)(910 2 0 0 142)(911 2 0 0 143)(912 2 0 0 144)(913 2 0 0 145)(914 2 0 0 146)(915 2 0 0 147)(916 2 0 0 148)(917 2 0 0 149)(918 2 0 0 150)(919 2 0 0 151)(920 2 0 0 152)(921 2 0 0 153)(922 2 0 0 154)(923 2 0 0 155)(924 2 0 0 156)(925 2 0 0 157)(926 2 0 0 158)(927 2 0 0 159)(928 2 0 0 160)(929 2 0 0 161)(930 2 0 0 162)(931 2 0 0 163)(932 2 0 0 164)(933 2 0 0 165)(934 2 0 0 166)(935 2 0 0 167)(936 2 0 0 168)(937 2 0 0 169)(938 2 0 0 170)(939 2 0 0 171)(940 2 0 0 172)(941 2 0 0 173)(942 2 0 0 174)(943 2 0 0 175)(944 2 0 0 176)(945 2 0 0 177)(946 2 0 0 178)(947 2 0 0 179)(948 2 0 0 180)(949 2 0 0 181)(950 2 0 0 182)(951 2 0 0 183)(952 2 0 0 184)(953 2 0 0 185)(954 2 0 0 186)(955 2 0 0 187)(956 2 0 0 188)(957 2 0 0 189)(958 2 0 0 190)(959 2 0 0 191)(960 2 0 0 192)(961 2 0 0 193)(962 2 0 0 194)(963 2 0 0 195)(964 2 0 0 196)(965 2 0 0 197)(966 2 0 0 198)(967 2 0 0 199)(968 2 0 0 200)(969 2 0 0 201)(970 2 0 0 202)(971 2 0 0 203)(972 2 0 0 204)(973 2 0 0 205)(974 2 0 0 206)(975 2 0 0 207)(976 2 0 0 208)(977 2 0 0 209)(978 2 0 0 210)(979 2 0 0 211)(980 2 0 0 212)(981 2 0 0 213)(982 2 0 0 214)(983 2 0 0 215)(984 2 0 0 216)(985 2 0 0 217)(986 2 0 0 218)(987 2 0 0 219)(988 2 0 0 220)(989 2 0 0 221)(990 2 0 0 222)(991 2 0 0 223)(992 2 0 0 224)(993 2 0 0 225)(994 2 0 0 226)(995 2 0 0 227)(996 2 0 0 228)(997 2 0 0 229)(998 2 0 0 230)(999 2 0 0 231)(1000 2 0 0 232)(1001 2 0 0 233)(1002 2 0 0 234)(1003 2 0 0 235)(1004 2 0 0 236)(1005 2 0 0 237)(1006 2 0 0 238)(1007 2 0 0 239)(1008 2 0 0 240)(1009 2 0 0 241)(1010 2 0 0 242)(1011 2 0 0 243)(1012 2 0 0 244)(1013 2 0 0 245)(1014 2 0 0 246)(1015 2 0 0 247)(1016 2 0 0 248)(1017 2 0 0 249)(1018 2 0 0 250)(1019 2 0 0 251)(1020 2 0 0 252)(1021 2 0 0 253)(1022 2 0 0 254)(1023 2 0 0 255)(1024 2 0 0 256)(1025 2 0 0 257)(1026 2 0 0 258)(1027 2 0 0 259)(1028 2 0 0 260)(1029 2 0 0 261)(1030 2 0 0 262)(1031 2 0 0 263)(1032 2 0 0 264)(1033 2 0 0 265)(1034 2 0 0 266)(1035 2 0 0 267)(1036 2 0 0 268)(1037 2 0 0 269)(1038 2 0 0 270)(1039 2 0 0 271)(1040 2 0 0 272)(1041 2 0 0 273)(1042 2 0 0 274)(1043 2 0 0 275)(1044 2 0 0 276)(1045 2 0 0 277)(1046 2 0 0 278)(1047 2 0 0 279)(1048 2 0 0 280)(1049 2 0 0 281)(1050 2 0 0 282)(1051 2 0 0 283)(1052 2 0 0 284)(1053 2 0 0 285)(1054 2 0 0 286)(1055 2 0 0 287)(1056 2 0 0 288)(1057 2 0 0 289)(1058 2 0 0 290)(1059 2 0 0 291)(1060 2 0 0 292)(1061 2 0 0 293)(1062 2 0 0 294)(1063 2 0 0 295)(1064 2 0 0 296)(1065 2 0 0 297)(1066 2 0 0 298)(1067 2 0 0 299)(1068 2 0 0 300)(1069 2 0 0 301)(1070 2 0 0 302)(1071 2 0 0 303)(1072 2 0 0 304)(1073 2 0 0 305)(1074 2 0 0 306)(1075 2 0 0 307)(1076 2 0 0 308)(1077 2 0 0 309)(1078 2 0 0 310)(1079 2 0 0 311)(1080 2 0 0 312)(1081 2 0 0 313)(1082 2 0 0 314)(1083 2 0 0 315)(1084 2 0 0 316)(1085 2 0 0 317)(1086 2 0 0 318)(1087 2 0 0 319)(1088 2 0 0 320)(1089 2 0 0 321)(1090 2 0 0 322)(1091 2 0 0 323)(1092 2 0 0 324)(1093 2 0 0 325)(1094 2 0 0 326)(1095 2 0 0 327)(1096 2 0 0 328)(1097 2 0 0 329)(1098 2 0 0 330)(1099 2 0 0 331)(1100 2 0 0 332)(1101 2 0 0 333)(1102 2 0 0 334)(1103 2 0 0 335)(1104 2 0 0 336)(1105 2 0 0 337)(1106 2 0 0 338)(1107 2 0 0 339)(1108 2 0 0 340)(1109 2 0 0 341)(1110 2 0 0 342)(1111 2 0 0 343)(1112 2 0 0 344)(1113 2 0 0 345)(1114 2 0 0 346)(1115 2 0 0 347)(1116 2 0 0 348)(1117 2 0 0 349)(1118 2 0 0 350)(1119 2 0 0 351)(1120 2 0 0 352)(1121 2 0 0 353)(1122 2 0 0 354)(1123 2 0 0 355)(1124 2 0 0 356)(1125 2 0 0 357)(1126 2 0 0 358)(1127 2 0 0 359)(1128 2 0 0 360)(1129 2 0 0 361)(1130 2 0 0 362)(1131 2 0 0 363)(1132 2 0 0 364)(1133 2 0 0 365)(1134 2 0 0 366)(1135 2 0 0 367)(1136 2 0 0 368)(1137 2 0 0 369)(1138 2 0 0 370)(1139 2 0 0 371)(1140 2 0 0 372)(1141 2 0 0 373)(1142 2 0 0 374)(1143 2 0 0 375)(1144 2 0 0 376)(1145 2 0 0 377)(1146 2 0 0 378)(1147 2 0 0 379)(1148 2 0 0 380)(1149 2 0 0 381)(1150 2 0 0 382)(1151 2 0 0 383)(1152 3 0 0 0)(1153 3 0 0 1)(1154 3 0 0 2)(1155 3 0 0 3)(1156 3 0 0 4)(1157 3 0 0 5)(1158 3 0 0 6)(1159 3 0 0 7)(1160 3 0 0 8)(1161 3 0 0 9)(1162 3 0 0 10)(1163 3 0 0 11)(1164 3 0 0 12)(1165 3 0 0 13)(1166 3 0 0 14)(1167 3 0 0 15)(1168 3 0 0 16)(1169 3 0 0 17)(1170 3 0 0 18)(1171 3 0 0 19)(1172 3 0 0 20)(1173 3 0 0 21)(1174 3 0 0 22)(1175 3 0 0 23)(1176 3 0 0 24)(1177 3 0 0 25)(1178 3 0 0 26)(1179 3 0 0 27)(1180 3 0 0 28)(1181 3 0 0 29)(1182 3 0 0 30)(1183 3 0 0 31)(1184 3 0 0 32)(1185 3 0 0 33)(1186 3 0 0 34)(1187 3 0 0 35)(1188 3 0 0 36)(1189 3 0 0 37)(1190 3 0 0 38)(1191 3 0 0 39)(1192 3 0 0 40)(1193 3 0 0 41)(1194 3 0 0 42)(1195 3 0 0 43)(1196 3 0 0 44)(1197 3 0 0 45)(1198 3 0 0 46)(1199 3 0 0 47)(1200 3 0 0 48)(1201 3 0 0 49)(1202 3 0 0 50)(1203 3 0 0 51)(1204 3 0 0 52)(1205 3 0 0 53)(1206 3 0 0 54)(1207 3 0 0 55)(1208 3 0 0 56)(1209 3 0 0 57)(1210 3 0 0 58)(1211 3 0 0 59)(1212 3 0 0 60)(1213 3 0 0 61)(1214 3 0 0 62)(1215 3 0 0 63)(1216 3 0 0 64)(1217 3 0 0 65)(1218 3 0 0 66)(1219 3 0 0 67)(1220 3 0 0 68)(1221 3 0 0 69)(1222 3 0 0 70)(1223 3 0 0 71)(1224 3 0 0 72)(1225 3 0 0 73)(1226 3 0 0 74)(1227 3 0 0 75)(1228 3 0 0 76)(1229 3 0 0 77)(1230 3 0 0 78)(1231 3 0 0 79)(1232 3 0 0 80)(1233 3 0 0 81)(1234 3 0 0 82)(1235 3 0 0 83)(1236 3 0 0 84)(1237 3 0 0 85)(1238 3 0 0 86)(1239 3 0 0 87)(1240 3 0 0 88)(1241 3 0 0 89)(1242 3 0 0 90)(1243 3 0 0 91)(1244 3 0 0 92)(1245 3 0 0 93)(1246 3 0 0 94)(1247 3 0 0 95)(1248 3 0 0 96)(1249 3 0 0 97)(1250 3 0 0 98)(1251 3 0 0 99)(1252 3 0 0 100)(1253 3 0 0 101)(1254 3 0 0 102)(1255 3 0 0 103)(1256 3 0 0 104)(1257 3 0 0 105)(1258 3 0 0 106)(1259 3 0 0 107)(1260 3 0 0 108)(1261 3 0 0 109)(1262 3 0 0 110)(1263 3 0 0 111)(1264 3 0 0 112)(1265 3 0 0 113)(1266 3 0 0 114)(1267 3 0 0 115)(1268 3 0 0 116)(1269 3 0 0 117)(1270 3 0 0 118)(1271 3 0 0 119)(1272 3 0 0 120)(1273 3 0 0 121)(1274 3 0 0 122)(1275 3 0 0 123)(1276 3 0 0 124)(1277 3 0 0 125)(1278 3 0 0 126)(1279 3 0 0 127)(1280 3 0 0 128)(1281 3 0 0 129)(1282 3 0 0 130)(1283 3 0 0 131)(1284 3 0 0 132)(1285 3 0 0 133)(1286 3 0 0 134)(1287 3 0 0 135)(1288 3 0 0 136)(1289 3 0 0 137)(1290 3 0 0 138)(1291 3 0 0 139)(1292 3 0 0 140)(1293 3 0 0 141)(1294 3 0 0 142)(1295 3 0 0 143)(1296 3 0 0 144)(1297 3 0 0 145)(1298 3 0 0 146)(1299 3 0 0 147)(1300 3 0 0 148)(1301 3 0 0 149)(1302 3 0 0 150)(1303 3 0 0 151)(1304 3 0 0 152)(1305 3 0 0 153)(1306 3 0 0 154)(1307 3 0 0 155)(1308 3 0 0 156)(1309 3 0 0 157)(1310 3 0 0 158)(1311 3 0 0 159)(1312 3 0 0 160)(1313 3 0 0 161)(1314 3 0 0 162)(1315 3 0 0 163)(1316 3 0 0 164)(1317 3 0 0 165)(1318 3 0 0 166)(1319 3 0 0 167)(1320 3 0 0 168)(1321 3 0 0 169)(1322 3 0 0 170)(1323 3 0 0 171)(1324 3 0 0 172)(1325 3 0 0 173)(1326 3 0 0 174)(1327 3 0 0 175)(1328 3 0 0 176)(1329 3 0 0 177)(1330 3 0 0 178)(1331 3 0 0 179)(1332 3 0 0 180)(1333 3 0 0 181)(1334 3 0 0 182)(1335 3 0 0 183)(1336 3 0 0 184)(1337 3 0 0 185)(1338 3 0 0 186)(1339 3 0 0 187)(1340 3 0 0 188)(1341 3 0 0 189)(1342 3 0 0 190)(1343 3 0 0 191)(1344 3 0 0 192)(1345 3 0 0 193)(1346 3 0 0 194)(1347 3 0 0 195)(1348 3 0 0 196)(1349 3 0 0 197)(1350 3 0 0 198)(1351 3 0 0 199)(1352 3 0 0 200)(1353 3 0 0 201)(1354 3 0 0 202)(1355 3 0 0 203)(1356 3 0 0 204)(1357 3 0 0 205)(1358 3 0 0 206)(1359 3 0 0 207)(1360 3 0 0 208)(1361 3 0 0 209)(1362 3 0 0 210)(1363 3 0 0 211)(1364 3 0 0 212)(1365 3 0 0 213)(1366 3 0 0 214)(1367 3 0 0 215)(1368 3 0 0 216)(1369 3 0 0 217)(1370 3 0 0 218)(1371 3 0 0 219)(1372 3 0 0 220)(1373 3 0 0 221)(1374 3 0 0 222)(1375 3 0 0 223)(1376 3 0 0 224)(1377 3 0 0 225)(1378 3 0 0 226)(1379 3 0 0 227)(1380 3 0 0 228)(1381 3 0 0 229)(1382 3 0 0 230)(1383 3 0 0 231)(1384 3 0 0 232)(1385 3 0 0 233)(1386 3 0 0 234)(1387 3 0 0 235)(1388 3 0 0 236)(1389 3 0 0 237)(1390 3 0 0 238)(1391 3 0 0 239)(1392 3 0 0 240)(1393 3 0 0 241)(1394 3 0 0 242)(1395 3 0 0 243)(1396 3 0 0 244)(1397 3 0 0 245)(1398 3 0 0 246)(1399 3 0 0 247)(1400 3 0 0 248)(1401 3 0 0 249)(1402 3 0 0 250)(1403 3 0 0 251)(1404 3 0 0 252)(1405 3 0 0 253)(1406 3 0 0 254)(1407 3 0 0 255)(1408 3 0 0 256)(1409 3 0 0 257)(1410 3 0 0 258)(1411 3 0 0 259)(1412 3 0 0 260)(1413 3 0 0 261)(1414 3 0 0 262)(1415 3 0 0 263)(1416 3 0 0 264)(1417 3 0 0 265)(1418 3 0 0 266)(1419 3 0 0 267)(1420 3 0 0 268)(1421 3 0 0 269)(1422 3 0 0 270)(1423 3 0 0 271)(1424 3 0 0 272)(1425 3 0 0 273)(1426 3 0 0 274)(1427 3 0 0 275)(1428 3 0 0 276)(1429 3 0 0 277)(1430 3 0 0 278)(1431 3 0 0 279)(1432 3 0 0 280)(1433 3 0 0 281)(1434 3 0 0 282)(1435 3 0 0 283)(1436 3 0 0 284)(1437 3 0 0 285)(1438 3 0 0 286)(1439 3 0 0 287)(1440 3 0 0 288)(1441 3 0 0 289)(1442 3 0 0 290)(1443 3 0 0 291)(1444 3 0 0 292)(1445 3 0 0 293)(1446 3 0 0 294)(1447 3 0 0 295)(1448 3 0 0 296)(1449 3 0 0 297)(1450 3 0 0 298)(1451 3 0 0 299)(1452 3 0 0 300)(1453 3 0 0 301)(1454 3 0 0 302)(1455 3 0 0 303)(1456 3 0 0 304)(1457 3 0 0 305)(1458 3 0 0 306)(1459 3 0 0 307)(1460 3 0 0 308)(1461 3 0 0 309)(1462 3 0 0 310)(1463 3 0 0 311)(1464 3 0 0 312)(1465 3 0 0 313)(1466 3 0 0 314)(1467 3 0 0 315)(1468 3 0 0 316)(1469 3 0 0 317)(1470 3 0 0 318)(1471 3 0 0 319)(1472 3 0 0 320)(1473 3 0 0 321)(1474 3 0 0 322)(1475 3 0 0 323)(1476 3 0 0 324)(1477 3 0 0 325)(1478 3 0 0 326)(1479 3 0 0 327)(1480 3 0 0 328)(1481 3 0 0 329)(1482 3 0 0 330)(1483 3 0 0 331)(1484 3 0 0 332)(1485 3 0 0 333)(1486 3 0 0 334)(1487 3 0 0 335)(1488 3 0 0 336)(1489 3 0 0 337)(1490 3 0 0 338)(1491 3 0 0 339)(1492 3 0 0 340)(1493 3 0 0 341)(1494 3 0 0 342)(1495 3 0 0 343)(1496 3 0 0 344)(1497 3 0 0 345)(1498 3 0 0 346)(1499 3 0 0 347)(1500 3 0 0 348)(1501 3 0 0 349)(1502 3 0 0 350)(1503 3 0 0 351)(1504 3 0 0 352)(1505 3 0 0 353)(1506 3 0 0 354)(1507 3 0 0 355)(1508 3 0 0 356)(1509 3 0 0 357)(1510 3 0 0 358)(1511 3 0 0 359)(1512 3 0 0 360)(1513 3 0 0 361)(1514 3 0 0 362)(1515 3 0 0 363)(1516 3 0 0 364)(1517 3 0 0 365)(1518 3 0 0 366)(1519 3 0 0 367)(1520 3 0 0 368)(1521 3 0 0 369)(1522 3 0 0 370)(1523 3 0 0 371)(1524 3 0 0 372)(1525 3 0 0 373)(1526 3 0 0 374)(1527 3 0 0 375)(1528 3 0 0 376)(1529 3 0 0 377)(1530 3 0 0 378)(1531 3 0 0 379)(1532 3 0 0 380)(1533 3 0 0 381)(1534 3 0 0 382)(1535 3 0 0 383 Type 1110: (1110,2,0,500,250,1)(0 0 0)(1 0 0)(2 0 0)(3 0 0)(4 0 0)(5 0 0)(6 0 0)(7 0 0)(8 0 0)(9 0 0)(10 0 0)(11 0 0)(12 0 0)(13 0 0)(14 0 0)(15 0 0)(16 0 0)(17 0 0)(18 0 0)(19 0 0)(20 0 0)(21 0 0)(22 0 0)(23 0 0) The first entry () of the table is a header indicating (probe-type, number of channels). The meaning of the subsequent channel entries depends upon the probe type. The table must have an entry for each readout channel, usually 384. Entry values are space-separated. A single linefeed '\\n' terminates the file. Channel Entries By Type Type {0,1020,1030,1100,1120,1121,1122,1123,1200,1300}, NP 1.0-like : Channel ID, Bank number of the connected electrode, Reference ID index, AP band gain, LF band gain, AP hipass filter applied (1=ON) The reference ID values are {0=ext, 1=tip, [2..4]=on-shnk-ref}. The on-shnk ref electrodes are {192,576,960}. Type {21,2003,2004} (NP 2.0, single multiplexed shank) : Channel ID, Bank mask (logical OR of {1=bnk-0, 2=bnk-1, 4=bnk-2, 8=bnk-3}), Reference ID index, Electrode ID (range [0,1279]) Type-21 reference ID values are {0=ext, 1=tip, [2..5]=on-shnk-ref}. The on-shnk ref electrodes are {127,507,887,1251}. Type-2003,2004 reference ID values are {0=ext, 1=gnd, 2=tip}. On-shank reference electrodes are removed from commercial 2B probes. Type {24,2013,2014} (NP 2.0, 4-shank) : Channel ID, Shank ID (with tips pointing down, shank-0 is left-most), Bank ID, Reference ID index, Electrode ID (range [0,1279] on each shank) Type-24 reference ID values are {0=ext, [1..4]=tip[0..3], [5..8]=on-shnk-0, [9..12]=on-shnk-1, [13..16]=on-shnk-2, [17..20]=on-shnk-3}. The on-shnk ref electrodes of any shank are {127,511,895,1279}. Type-2013,2014 reference ID values are {0=ext, 1=gnd, [2..5]=tip[0..3]}. On-shank reference electrodes are removed from commercial 2B probes. Type {2020,2021} (Quad-probe) : Channel ID, Shank ID (with tips pointing down, shank-0 is left-most), Bank ID, Reference ID index, Electrode ID (range [0,1279] on each shank) Quad-base reference ID values are {0=ext, 1=gnd, 2=tip on same shank as electode}. Type 1110 (UHD programmable) : This has a unique header: Type (1110), ColumnMode {0=INNER, 1=OUTER, 2=ALL}, Reference ID index {0=ext, 1=tip}, AP band gain, LF band gain, AP hipass filter applied (1=ON) And 24 entries following the header: Group ID, Bank-A, Bank-B, C Code: Type 0 Default The default for a 3B type-0 probe is to select for each channel: bank=0, ref=0, APgain=500, LFgain=250, APfilter=1. void Default3B() { FILE *fo = fopen( \"Default3B.imro\", \"w\" ); // write the header fprintf( fo, \"(0,384)\" ); // write the rows (r) for( int r = 0; r < 384; ++r ) fprintf( fo, \"(%d 0 0 500 250 1)\", r ); // finish fprintf( fo, \"\\n\" ); fclose( fo ); } C Code: Type 0 Tetrodes Each channel will get the default reference, gain and filter settings {ref=0, APgain=500, LFgain=250, APfilter=1}. Starting at the tip, we'll select a block of four channels by setting them to bank-0. Then we'll skip the next four channels in bank-0 by setting them to bank-1. By repeating this we will create tetrodes that cover banks zero and one. The code will loop over sets of eight channels at a time. So there are 384/8 iterations of the loop. void Tetrodes3B() { FILE *fo = fopen( \"Tetrode_1shank.imro\", \"w\" ); // write the header fprintf( fo, \"(0,384)\" ); // write 8 rows (r) at a time for( int r = 0; r < 384/8; ++r ) { fprintf( fo, \"(%d 0 0 500 250 1)\", 8*r ); fprintf( fo, \"(%d 0 0 500 250 1)\", 8*r+1 ); fprintf( fo, \"(%d 0 0 500 250 1)\", 8*r+2 ); fprintf( fo, \"(%d 0 0 500 250 1)\", 8*r+3 ); fprintf( fo, \"(%d 1 0 500 250 1)\", 8*r+4 ); fprintf( fo, \"(%d 1 0 500 250 1)\", 8*r+5 ); fprintf( fo, \"(%d 1 0 500 250 1)\", 8*r+6 ); fprintf( fo, \"(%d 1 0 500 250 1)\", 8*r+7 ); } fprintf( fo, \"\\n\" ); fclose( fo ); } fin","title":"IMRO Table Anatomy"},{"location":"Help/imroTables/#imro-table-anatomy","text":"IM ec R ead O ut tables are simple text files that describe how to configure each readout channel on an imec probe. Each type of probe may have its own set of parameters to access that type's special features. SpikeGLX has GUI editing tools for each probe type, but sometimes you may want to do something custom. This document shows how to write your own (*.imro) files, at least for NP 1.0 probes, which have straightforward internal site selection rules (each channel can connect to just one bank). You can load your own files using the Load button in the SpikeGLX table editor. Note: When you load your own imro table file, you probably want to select default as your shank map. The default will automatically populate the shank(s) according to your imro table. You'll probably also want to select default for your channel map. The default channel map will order your graphs from the tip of the probe to the top (base) according to your imro table.","title":"IMRO Table Anatomy"},{"location":"Help/imroTables/#text-examples","text":"Type 0: (0,384)(0 0 0 500 250 1)(1 0 0 500 250 1)(2 0 0 500 250 1)(3 0 0 500 250 1)(4 0 0 500 250 1)(5 0 0 500 250 1)(6 0 0 500 250 1)(7 0 0 500 250 1)(8 0 0 500 250 1)(9 0 0 500 250 1)(10 0 0 500 250 1)(11 0 0 500 250 1)(12 0 0 500 250 1)(13 0 0 500 250 1)(14 0 0 500 250 1)(15 0 0 500 250 1)(16 0 0 500 250 1)(17 0 0 500 250 1)(18 0 0 500 250 1)(19 0 0 500 250 1)(20 0 0 500 250 1)(21 0 0 500 250 1)(22 0 0 500 250 1)(23 0 0 500 250 1)(24 0 0 500 250 1)(25 0 0 500 250 1)(26 0 0 500 250 1)(27 0 0 500 250 1)(28 0 0 500 250 1)(29 0 0 500 250 1)(30 0 0 500 250 1)(31 0 0 500 250 1)(32 0 0 500 250 1)(33 0 0 500 250 1)(34 0 0 500 250 1)(35 0 0 500 250 1)(36 0 0 500 250 1)(37 0 0 500 250 1)(38 0 0 500 250 1)(39 0 0 500 250 1)(40 0 0 500 250 1)(41 0 0 500 250 1)(42 0 0 500 250 1)(43 0 0 500 250 1)(44 0 0 500 250 1)(45 0 0 500 250 1)(46 0 0 500 250 1)(47 0 0 500 250 1)(48 0 0 500 250 1)(49 0 0 500 250 1)(50 0 0 500 250 1)(51 0 0 500 250 1)(52 0 0 500 250 1)(53 0 0 500 250 1)(54 0 0 500 250 1)(55 0 0 500 250 1)(56 0 0 500 250 1)(57 0 0 500 250 1)(58 0 0 500 250 1)(59 0 0 500 250 1)(60 0 0 500 250 1)(61 0 0 500 250 1)(62 0 0 500 250 1)(63 0 0 500 250 1)(64 0 0 500 250 1)(65 0 0 500 250 1)(66 0 0 500 250 1)(67 0 0 500 250 1)(68 0 0 500 250 1)(69 0 0 500 250 1)(70 0 0 500 250 1)(71 0 0 500 250 1)(72 0 0 500 250 1)(73 0 0 500 250 1)(74 0 0 500 250 1)(75 0 0 500 250 1)(76 0 0 500 250 1)(77 0 0 500 250 1)(78 0 0 500 250 1)(79 0 0 500 250 1)(80 0 0 500 250 1)(81 0 0 500 250 1)(82 0 0 500 250 1)(83 0 0 500 250 1)(84 0 0 500 250 1)(85 0 0 500 250 1)(86 0 0 500 250 1)(87 0 0 500 250 1)(88 0 0 500 250 1)(89 0 0 500 250 1)(90 0 0 500 250 1)(91 0 0 500 250 1)(92 0 0 500 250 1)(93 0 0 500 250 1)(94 0 0 500 250 1)(95 0 0 500 250 1)(96 0 0 500 250 1)(97 0 0 500 250 1)(98 0 0 500 250 1)(99 0 0 500 250 1)(100 0 0 500 250 1)(101 0 0 500 250 1)(102 0 0 500 250 1)(103 0 0 500 250 1)(104 0 0 500 250 1)(105 0 0 500 250 1)(106 0 0 500 250 1)(107 0 0 500 250 1)(108 0 0 500 250 1)(109 0 0 500 250 1)(110 0 0 500 250 1)(111 0 0 500 250 1)(112 0 0 500 250 1)(113 0 0 500 250 1)(114 0 0 500 250 1)(115 0 0 500 250 1)(116 0 0 500 250 1)(117 0 0 500 250 1)(118 0 0 500 250 1)(119 0 0 500 250 1)(120 0 0 500 250 1)(121 0 0 500 250 1)(122 0 0 500 250 1)(123 0 0 500 250 1)(124 0 0 500 250 1)(125 0 0 500 250 1)(126 0 0 500 250 1)(127 0 0 500 250 1)(128 0 0 500 250 1)(129 0 0 500 250 1)(130 0 0 500 250 1)(131 0 0 500 250 1)(132 0 0 500 250 1)(133 0 0 500 250 1)(134 0 0 500 250 1)(135 0 0 500 250 1)(136 0 0 500 250 1)(137 0 0 500 250 1)(138 0 0 500 250 1)(139 0 0 500 250 1)(140 0 0 500 250 1)(141 0 0 500 250 1)(142 0 0 500 250 1)(143 0 0 500 250 1)(144 0 0 500 250 1)(145 0 0 500 250 1)(146 0 0 500 250 1)(147 0 0 500 250 1)(148 0 0 500 250 1)(149 0 0 500 250 1)(150 0 0 500 250 1)(151 0 0 500 250 1)(152 0 0 500 250 1)(153 0 0 500 250 1)(154 0 0 500 250 1)(155 0 0 500 250 1)(156 0 0 500 250 1)(157 0 0 500 250 1)(158 0 0 500 250 1)(159 0 0 500 250 1)(160 0 0 500 250 1)(161 0 0 500 250 1)(162 0 0 500 250 1)(163 0 0 500 250 1)(164 0 0 500 250 1)(165 0 0 500 250 1)(166 0 0 500 250 1)(167 0 0 500 250 1)(168 0 0 500 250 1)(169 0 0 500 250 1)(170 0 0 500 250 1)(171 0 0 500 250 1)(172 0 0 500 250 1)(173 0 0 500 250 1)(174 0 0 500 250 1)(175 0 0 500 250 1)(176 0 0 500 250 1)(177 0 0 500 250 1)(178 0 0 500 250 1)(179 0 0 500 250 1)(180 0 0 500 250 1)(181 0 0 500 250 1)(182 0 0 500 250 1)(183 0 0 500 250 1)(184 0 0 500 250 1)(185 0 0 500 250 1)(186 0 0 500 250 1)(187 0 0 500 250 1)(188 0 0 500 250 1)(189 0 0 500 250 1)(190 0 0 500 250 1)(191 0 0 500 250 1)(192 0 0 500 250 1)(193 0 0 500 250 1)(194 0 0 500 250 1)(195 0 0 500 250 1)(196 0 0 500 250 1)(197 0 0 500 250 1)(198 0 0 500 250 1)(199 0 0 500 250 1)(200 0 0 500 250 1)(201 0 0 500 250 1)(202 0 0 500 250 1)(203 0 0 500 250 1)(204 0 0 500 250 1)(205 0 0 500 250 1)(206 0 0 500 250 1)(207 0 0 500 250 1)(208 0 0 500 250 1)(209 0 0 500 250 1)(210 0 0 500 250 1)(211 0 0 500 250 1)(212 0 0 500 250 1)(213 0 0 500 250 1)(214 0 0 500 250 1)(215 0 0 500 250 1)(216 0 0 500 250 1)(217 0 0 500 250 1)(218 0 0 500 250 1)(219 0 0 500 250 1)(220 0 0 500 250 1)(221 0 0 500 250 1)(222 0 0 500 250 1)(223 0 0 500 250 1)(224 0 0 500 250 1)(225 0 0 500 250 1)(226 0 0 500 250 1)(227 0 0 500 250 1)(228 0 0 500 250 1)(229 0 0 500 250 1)(230 0 0 500 250 1)(231 0 0 500 250 1)(232 0 0 500 250 1)(233 0 0 500 250 1)(234 0 0 500 250 1)(235 0 0 500 250 1)(236 0 0 500 250 1)(237 0 0 500 250 1)(238 0 0 500 250 1)(239 0 0 500 250 1)(240 0 0 500 250 1)(241 0 0 500 250 1)(242 0 0 500 250 1)(243 0 0 500 250 1)(244 0 0 500 250 1)(245 0 0 500 250 1)(246 0 0 500 250 1)(247 0 0 500 250 1)(248 0 0 500 250 1)(249 0 0 500 250 1)(250 0 0 500 250 1)(251 0 0 500 250 1)(252 0 0 500 250 1)(253 0 0 500 250 1)(254 0 0 500 250 1)(255 0 0 500 250 1)(256 0 0 500 250 1)(257 0 0 500 250 1)(258 0 0 500 250 1)(259 0 0 500 250 1)(260 0 0 500 250 1)(261 0 0 500 250 1)(262 0 0 500 250 1)(263 0 0 500 250 1)(264 0 0 500 250 1)(265 0 0 500 250 1)(266 0 0 500 250 1)(267 0 0 500 250 1)(268 0 0 500 250 1)(269 0 0 500 250 1)(270 0 0 500 250 1)(271 0 0 500 250 1)(272 0 0 500 250 1)(273 0 0 500 250 1)(274 0 0 500 250 1)(275 0 0 500 250 1)(276 0 0 500 250 1)(277 0 0 500 250 1)(278 0 0 500 250 1)(279 0 0 500 250 1)(280 0 0 500 250 1)(281 0 0 500 250 1)(282 0 0 500 250 1)(283 0 0 500 250 1)(284 0 0 500 250 1)(285 0 0 500 250 1)(286 0 0 500 250 1)(287 0 0 500 250 1)(288 0 0 500 250 1)(289 0 0 500 250 1)(290 0 0 500 250 1)(291 0 0 500 250 1)(292 0 0 500 250 1)(293 0 0 500 250 1)(294 0 0 500 250 1)(295 0 0 500 250 1)(296 0 0 500 250 1)(297 0 0 500 250 1)(298 0 0 500 250 1)(299 0 0 500 250 1)(300 0 0 500 250 1)(301 0 0 500 250 1)(302 0 0 500 250 1)(303 0 0 500 250 1)(304 0 0 500 250 1)(305 0 0 500 250 1)(306 0 0 500 250 1)(307 0 0 500 250 1)(308 0 0 500 250 1)(309 0 0 500 250 1)(310 0 0 500 250 1)(311 0 0 500 250 1)(312 0 0 500 250 1)(313 0 0 500 250 1)(314 0 0 500 250 1)(315 0 0 500 250 1)(316 0 0 500 250 1)(317 0 0 500 250 1)(318 0 0 500 250 1)(319 0 0 500 250 1)(320 0 0 500 250 1)(321 0 0 500 250 1)(322 0 0 500 250 1)(323 0 0 500 250 1)(324 0 0 500 250 1)(325 0 0 500 250 1)(326 0 0 500 250 1)(327 0 0 500 250 1)(328 0 0 500 250 1)(329 0 0 500 250 1)(330 0 0 500 250 1)(331 0 0 500 250 1)(332 0 0 500 250 1)(333 0 0 500 250 1)(334 0 0 500 250 1)(335 0 0 500 250 1)(336 0 0 500 250 1)(337 0 0 500 250 1)(338 0 0 500 250 1)(339 0 0 500 250 1)(340 0 0 500 250 1)(341 0 0 500 250 1)(342 0 0 500 250 1)(343 0 0 500 250 1)(344 0 0 500 250 1)(345 0 0 500 250 1)(346 0 0 500 250 1)(347 0 0 500 250 1)(348 0 0 500 250 1)(349 0 0 500 250 1)(350 0 0 500 250 1)(351 0 0 500 250 1)(352 0 0 500 250 1)(353 0 0 500 250 1)(354 0 0 500 250 1)(355 0 0 500 250 1)(356 0 0 500 250 1)(357 0 0 500 250 1)(358 0 0 500 250 1)(359 0 0 500 250 1)(360 0 0 500 250 1)(361 0 0 500 250 1)(362 0 0 500 250 1)(363 0 0 500 250 1)(364 0 0 500 250 1)(365 0 0 500 250 1)(366 0 0 500 250 1)(367 0 0 500 250 1)(368 0 0 500 250 1)(369 0 0 500 250 1)(370 0 0 500 250 1)(371 0 0 500 250 1)(372 0 0 500 250 1)(373 0 0 500 250 1)(374 0 0 500 250 1)(375 0 0 500 250 1)(376 0 0 500 250 1)(377 0 0 500 250 1)(378 0 0 500 250 1)(379 0 0 500 250 1)(380 0 0 500 250 1)(381 0 0 500 250 1)(382 0 0 500 250 1)(383 0 0 500 250 1) Type 21: (21,384)(0 1 0 0)(1 1 0 1)(2 1 0 2)(3 1 0 3)(4 1 0 4)(5 1 0 5)(6 1 0 6)(7 1 0 7)(8 1 0 8)(9 1 0 9)(10 1 0 10)(11 1 0 11)(12 1 0 12)(13 1 0 13)(14 1 0 14)(15 1 0 15)(16 1 0 16)(17 1 0 17)(18 1 0 18)(19 1 0 19)(20 1 0 20)(21 1 0 21)(22 1 0 22)(23 1 0 23)(24 1 0 24)(25 1 0 25)(26 1 0 26)(27 1 0 27)(28 1 0 28)(29 1 0 29)(30 1 0 30)(31 1 0 31)(32 1 0 32)(33 1 0 33)(34 1 0 34)(35 1 0 35)(36 1 0 36)(37 1 0 37)(38 1 0 38)(39 1 0 39)(40 1 0 40)(41 1 0 41)(42 1 0 42)(43 1 0 43)(44 1 0 44)(45 1 0 45)(46 1 0 46)(47 1 0 47)(48 1 0 48)(49 1 0 49)(50 1 0 50)(51 1 0 51)(52 1 0 52)(53 1 0 53)(54 1 0 54)(55 1 0 55)(56 1 0 56)(57 1 0 57)(58 1 0 58)(59 1 0 59)(60 1 0 60)(61 1 0 61)(62 1 0 62)(63 1 0 63)(64 1 0 64)(65 1 0 65)(66 1 0 66)(67 1 0 67)(68 1 0 68)(69 1 0 69)(70 1 0 70)(71 1 0 71)(72 1 0 72)(73 1 0 73)(74 1 0 74)(75 1 0 75)(76 1 0 76)(77 1 0 77)(78 1 0 78)(79 1 0 79)(80 1 0 80)(81 1 0 81)(82 1 0 82)(83 1 0 83)(84 1 0 84)(85 1 0 85)(86 1 0 86)(87 1 0 87)(88 1 0 88)(89 1 0 89)(90 1 0 90)(91 1 0 91)(92 1 0 92)(93 1 0 93)(94 1 0 94)(95 1 0 95)(96 1 0 96)(97 1 0 97)(98 1 0 98)(99 1 0 99)(100 1 0 100)(101 1 0 101)(102 1 0 102)(103 1 0 103)(104 1 0 104)(105 1 0 105)(106 1 0 106)(107 1 0 107)(108 1 0 108)(109 1 0 109)(110 1 0 110)(111 1 0 111)(112 1 0 112)(113 1 0 113)(114 1 0 114)(115 1 0 115)(116 1 0 116)(117 1 0 117)(118 1 0 118)(119 1 0 119)(120 1 0 120)(121 1 0 121)(122 1 0 122)(123 1 0 123)(124 1 0 124)(125 1 0 125)(126 1 0 126)(127 1 0 127)(128 1 0 128)(129 1 0 129)(130 1 0 130)(131 1 0 131)(132 1 0 132)(133 1 0 133)(134 1 0 134)(135 1 0 135)(136 1 0 136)(137 1 0 137)(138 1 0 138)(139 1 0 139)(140 1 0 140)(141 1 0 141)(142 1 0 142)(143 1 0 143)(144 1 0 144)(145 1 0 145)(146 1 0 146)(147 1 0 147)(148 1 0 148)(149 1 0 149)(150 1 0 150)(151 1 0 151)(152 1 0 152)(153 1 0 153)(154 1 0 154)(155 1 0 155)(156 1 0 156)(157 1 0 157)(158 1 0 158)(159 1 0 159)(160 1 0 160)(161 1 0 161)(162 1 0 162)(163 1 0 163)(164 1 0 164)(165 1 0 165)(166 1 0 166)(167 1 0 167)(168 1 0 168)(169 1 0 169)(170 1 0 170)(171 1 0 171)(172 1 0 172)(173 1 0 173)(174 1 0 174)(175 1 0 175)(176 1 0 176)(177 1 0 177)(178 1 0 178)(179 1 0 179)(180 1 0 180)(181 1 0 181)(182 1 0 182)(183 1 0 183)(184 1 0 184)(185 1 0 185)(186 1 0 186)(187 1 0 187)(188 1 0 188)(189 1 0 189)(190 1 0 190)(191 1 0 191)(192 1 0 192)(193 1 0 193)(194 1 0 194)(195 1 0 195)(196 1 0 196)(197 1 0 197)(198 1 0 198)(199 1 0 199)(200 1 0 200)(201 1 0 201)(202 1 0 202)(203 1 0 203)(204 1 0 204)(205 1 0 205)(206 1 0 206)(207 1 0 207)(208 1 0 208)(209 1 0 209)(210 1 0 210)(211 1 0 211)(212 1 0 212)(213 1 0 213)(214 1 0 214)(215 1 0 215)(216 1 0 216)(217 1 0 217)(218 1 0 218)(219 1 0 219)(220 1 0 220)(221 1 0 221)(222 1 0 222)(223 1 0 223)(224 1 0 224)(225 1 0 225)(226 1 0 226)(227 1 0 227)(228 1 0 228)(229 1 0 229)(230 1 0 230)(231 1 0 231)(232 1 0 232)(233 1 0 233)(234 1 0 234)(235 1 0 235)(236 1 0 236)(237 1 0 237)(238 1 0 238)(239 1 0 239)(240 1 0 240)(241 1 0 241)(242 1 0 242)(243 1 0 243)(244 1 0 244)(245 1 0 245)(246 1 0 246)(247 1 0 247)(248 1 0 248)(249 1 0 249)(250 1 0 250)(251 1 0 251)(252 1 0 252)(253 1 0 253)(254 1 0 254)(255 1 0 255)(256 1 0 256)(257 1 0 257)(258 1 0 258)(259 1 0 259)(260 1 0 260)(261 1 0 261)(262 1 0 262)(263 1 0 263)(264 1 0 264)(265 1 0 265)(266 1 0 266)(267 1 0 267)(268 1 0 268)(269 1 0 269)(270 1 0 270)(271 1 0 271)(272 1 0 272)(273 1 0 273)(274 1 0 274)(275 1 0 275)(276 1 0 276)(277 1 0 277)(278 1 0 278)(279 1 0 279)(280 1 0 280)(281 1 0 281)(282 1 0 282)(283 1 0 283)(284 1 0 284)(285 1 0 285)(286 1 0 286)(287 1 0 287)(288 1 0 288)(289 1 0 289)(290 1 0 290)(291 1 0 291)(292 1 0 292)(293 1 0 293)(294 1 0 294)(295 1 0 295)(296 1 0 296)(297 1 0 297)(298 1 0 298)(299 1 0 299)(300 1 0 300)(301 1 0 301)(302 1 0 302)(303 1 0 303)(304 1 0 304)(305 1 0 305)(306 1 0 306)(307 1 0 307)(308 1 0 308)(309 1 0 309)(310 1 0 310)(311 1 0 311)(312 1 0 312)(313 1 0 313)(314 1 0 314)(315 1 0 315)(316 1 0 316)(317 1 0 317)(318 1 0 318)(319 1 0 319)(320 1 0 320)(321 1 0 321)(322 1 0 322)(323 1 0 323)(324 1 0 324)(325 1 0 325)(326 1 0 326)(327 1 0 327)(328 1 0 328)(329 1 0 329)(330 1 0 330)(331 1 0 331)(332 1 0 332)(333 1 0 333)(334 1 0 334)(335 1 0 335)(336 1 0 336)(337 1 0 337)(338 1 0 338)(339 1 0 339)(340 1 0 340)(341 1 0 341)(342 1 0 342)(343 1 0 343)(344 1 0 344)(345 1 0 345)(346 1 0 346)(347 1 0 347)(348 1 0 348)(349 1 0 349)(350 1 0 350)(351 1 0 351)(352 1 0 352)(353 1 0 353)(354 1 0 354)(355 1 0 355)(356 1 0 356)(357 1 0 357)(358 1 0 358)(359 1 0 359)(360 1 0 360)(361 1 0 361)(362 1 0 362)(363 1 0 363)(364 1 0 364)(365 1 0 365)(366 1 0 366)(367 1 0 367)(368 1 0 368)(369 1 0 369)(370 1 0 370)(371 1 0 371)(372 1 0 372)(373 1 0 373)(374 1 0 374)(375 1 0 375)(376 1 0 376)(377 1 0 377)(378 1 0 378)(379 1 0 379)(380 1 0 380)(381 1 0 381)(382 1 0 382)(383 1 0 383) Type 24: (24,384)(0 0 0 1 0)(1 0 0 1 1)(2 0 0 1 2)(3 0 0 1 3)(4 0 0 1 4)(5 0 0 1 5)(6 0 0 1 6)(7 0 0 1 7)(8 0 0 1 8)(9 0 0 1 9)(10 0 0 1 10)(11 0 0 1 11)(12 0 0 1 12)(13 0 0 1 13)(14 0 0 1 14)(15 0 0 1 15)(16 0 0 1 16)(17 0 0 1 17)(18 0 0 1 18)(19 0 0 1 19)(20 0 0 1 20)(21 0 0 1 21)(22 0 0 1 22)(23 0 0 1 23)(24 0 0 1 24)(25 0 0 1 25)(26 0 0 1 26)(27 0 0 1 27)(28 0 0 1 28)(29 0 0 1 29)(30 0 0 1 30)(31 0 0 1 31)(32 0 0 1 32)(33 0 0 1 33)(34 0 0 1 34)(35 0 0 1 35)(36 0 0 1 36)(37 0 0 1 37)(38 0 0 1 38)(39 0 0 1 39)(40 0 0 1 40)(41 0 0 1 41)(42 0 0 1 42)(43 0 0 1 43)(44 0 0 1 44)(45 0 0 1 45)(46 0 0 1 46)(47 0 0 1 47)(48 0 0 1 288)(49 0 0 1 289)(50 0 0 1 290)(51 0 0 1 291)(52 0 0 1 292)(53 0 0 1 293)(54 0 0 1 294)(55 0 0 1 295)(56 0 0 1 296)(57 0 0 1 297)(58 0 0 1 298)(59 0 0 1 299)(60 0 0 1 300)(61 0 0 1 301)(62 0 0 1 302)(63 0 0 1 303)(64 0 0 1 304)(65 0 0 1 305)(66 0 0 1 306)(67 0 0 1 307)(68 0 0 1 308)(69 0 0 1 309)(70 0 0 1 310)(71 0 0 1 311)(72 0 0 1 312)(73 0 0 1 313)(74 0 0 1 314)(75 0 0 1 315)(76 0 0 1 316)(77 0 0 1 317)(78 0 0 1 318)(79 0 0 1 319)(80 0 0 1 320)(81 0 0 1 321)(82 0 0 1 322)(83 0 0 1 323)(84 0 0 1 324)(85 0 0 1 325)(86 0 0 1 326)(87 0 0 1 327)(88 0 0 1 328)(89 0 0 1 329)(90 0 0 1 330)(91 0 0 1 331)(92 0 0 1 332)(93 0 0 1 333)(94 0 0 1 334)(95 0 0 1 335)(96 0 0 1 48)(97 0 0 1 49)(98 0 0 1 50)(99 0 0 1 51)(100 0 0 1 52)(101 0 0 1 53)(102 0 0 1 54)(103 0 0 1 55)(104 0 0 1 56)(105 0 0 1 57)(106 0 0 1 58)(107 0 0 1 59)(108 0 0 1 60)(109 0 0 1 61)(110 0 0 1 62)(111 0 0 1 63)(112 0 0 1 64)(113 0 0 1 65)(114 0 0 1 66)(115 0 0 1 67)(116 0 0 1 68)(117 0 0 1 69)(118 0 0 1 70)(119 0 0 1 71)(120 0 0 1 72)(121 0 0 1 73)(122 0 0 1 74)(123 0 0 1 75)(124 0 0 1 76)(125 0 0 1 77)(126 0 0 1 78)(127 0 0 1 79)(128 0 0 1 80)(129 0 0 1 81)(130 0 0 1 82)(131 0 0 1 83)(132 0 0 1 84)(133 0 0 1 85)(134 0 0 1 86)(135 0 0 1 87)(136 0 0 1 88)(137 0 0 1 89)(138 0 0 1 90)(139 0 0 1 91)(140 0 0 1 92)(141 0 0 1 93)(142 0 0 1 94)(143 0 0 1 95)(144 0 0 1 336)(145 0 0 1 337)(146 0 0 1 338)(147 0 0 1 339)(148 0 0 1 340)(149 0 0 1 341)(150 0 0 1 342)(151 0 0 1 343)(152 0 0 1 344)(153 0 0 1 345)(154 0 0 1 346)(155 0 0 1 347)(156 0 0 1 348)(157 0 0 1 349)(158 0 0 1 350)(159 0 0 1 351)(160 0 0 1 352)(161 0 0 1 353)(162 0 0 1 354)(163 0 0 1 355)(164 0 0 1 356)(165 0 0 1 357)(166 0 0 1 358)(167 0 0 1 359)(168 0 0 1 360)(169 0 0 1 361)(170 0 0 1 362)(171 0 0 1 363)(172 0 0 1 364)(173 0 0 1 365)(174 0 0 1 366)(175 0 0 1 367)(176 0 0 1 368)(177 0 0 1 369)(178 0 0 1 370)(179 0 0 1 371)(180 0 0 1 372)(181 0 0 1 373)(182 0 0 1 374)(183 0 0 1 375)(184 0 0 1 376)(185 0 0 1 377)(186 0 0 1 378)(187 0 0 1 379)(188 0 0 1 380)(189 0 0 1 381)(190 0 0 1 382)(191 0 0 1 383)(192 0 0 1 96)(193 0 0 1 97)(194 0 0 1 98)(195 0 0 1 99)(196 0 0 1 100)(197 0 0 1 101)(198 0 0 1 102)(199 0 0 1 103)(200 0 0 1 104)(201 0 0 1 105)(202 0 0 1 106)(203 0 0 1 107)(204 0 0 1 108)(205 0 0 1 109)(206 0 0 1 110)(207 0 0 1 111)(208 0 0 1 112)(209 0 0 1 113)(210 0 0 1 114)(211 0 0 1 115)(212 0 0 1 116)(213 0 0 1 117)(214 0 0 1 118)(215 0 0 1 119)(216 0 0 1 120)(217 0 0 1 121)(218 0 0 1 122)(219 0 0 1 123)(220 0 0 1 124)(221 0 0 1 125)(222 0 0 1 126)(223 0 0 1 127)(224 0 0 1 128)(225 0 0 1 129)(226 0 0 1 130)(227 0 0 1 131)(228 0 0 1 132)(229 0 0 1 133)(230 0 0 1 134)(231 0 0 1 135)(232 0 0 1 136)(233 0 0 1 137)(234 0 0 1 138)(235 0 0 1 139)(236 0 0 1 140)(237 0 0 1 141)(238 0 0 1 142)(239 0 0 1 143)(240 0 0 1 192)(241 0 0 1 193)(242 0 0 1 194)(243 0 0 1 195)(244 0 0 1 196)(245 0 0 1 197)(246 0 0 1 198)(247 0 0 1 199)(248 0 0 1 200)(249 0 0 1 201)(250 0 0 1 202)(251 0 0 1 203)(252 0 0 1 204)(253 0 0 1 205)(254 0 0 1 206)(255 0 0 1 207)(256 0 0 1 208)(257 0 0 1 209)(258 0 0 1 210)(259 0 0 1 211)(260 0 0 1 212)(261 0 0 1 213)(262 0 0 1 214)(263 0 0 1 215)(264 0 0 1 216)(265 0 0 1 217)(266 0 0 1 218)(267 0 0 1 219)(268 0 0 1 220)(269 0 0 1 221)(270 0 0 1 222)(271 0 0 1 223)(272 0 0 1 224)(273 0 0 1 225)(274 0 0 1 226)(275 0 0 1 227)(276 0 0 1 228)(277 0 0 1 229)(278 0 0 1 230)(279 0 0 1 231)(280 0 0 1 232)(281 0 0 1 233)(282 0 0 1 234)(283 0 0 1 235)(284 0 0 1 236)(285 0 0 1 237)(286 0 0 1 238)(287 0 0 1 239)(288 0 0 1 144)(289 0 0 1 145)(290 0 0 1 146)(291 0 0 1 147)(292 0 0 1 148)(293 0 0 1 149)(294 0 0 1 150)(295 0 0 1 151)(296 0 0 1 152)(297 0 0 1 153)(298 0 0 1 154)(299 0 0 1 155)(300 0 0 1 156)(301 0 0 1 157)(302 0 0 1 158)(303 0 0 1 159)(304 0 0 1 160)(305 0 0 1 161)(306 0 0 1 162)(307 0 0 1 163)(308 0 0 1 164)(309 0 0 1 165)(310 0 0 1 166)(311 0 0 1 167)(312 0 0 1 168)(313 0 0 1 169)(314 0 0 1 170)(315 0 0 1 171)(316 0 0 1 172)(317 0 0 1 173)(318 0 0 1 174)(319 0 0 1 175)(320 0 0 1 176)(321 0 0 1 177)(322 0 0 1 178)(323 0 0 1 179)(324 0 0 1 180)(325 0 0 1 181)(326 0 0 1 182)(327 0 0 1 183)(328 0 0 1 184)(329 0 0 1 185)(330 0 0 1 186)(331 0 0 1 187)(332 0 0 1 188)(333 0 0 1 189)(334 0 0 1 190)(335 0 0 1 191)(336 0 0 1 240)(337 0 0 1 241)(338 0 0 1 242)(339 0 0 1 243)(340 0 0 1 244)(341 0 0 1 245)(342 0 0 1 246)(343 0 0 1 247)(344 0 0 1 248)(345 0 0 1 249)(346 0 0 1 250)(347 0 0 1 251)(348 0 0 1 252)(349 0 0 1 253)(350 0 0 1 254)(351 0 0 1 255)(352 0 0 1 256)(353 0 0 1 257)(354 0 0 1 258)(355 0 0 1 259)(356 0 0 1 260)(357 0 0 1 261)(358 0 0 1 262)(359 0 0 1 263)(360 0 0 1 264)(361 0 0 1 265)(362 0 0 1 266)(363 0 0 1 267)(364 0 0 1 268)(365 0 0 1 269)(366 0 0 1 270)(367 0 0 1 271)(368 0 0 1 272)(369 0 0 1 273)(370 0 0 1 274)(371 0 0 1 275)(372 0 0 1 276)(373 0 0 1 277)(374 0 0 1 278)(375 0 0 1 279)(376 0 0 1 280)(377 0 0 1 281)(378 0 0 1 282)(379 0 0 1 283)(380 0 0 1 284)(381 0 0 1 285)(382 0 0 1 286)(383 0 0 1 287) Type 2020: (2020,1536)(0 0 0 0 0)(1 0 0 0 1)(2 0 0 0 2)(3 0 0 0 3)(4 0 0 0 4)(5 0 0 0 5)(6 0 0 0 6)(7 0 0 0 7)(8 0 0 0 8)(9 0 0 0 9)(10 0 0 0 10)(11 0 0 0 11)(12 0 0 0 12)(13 0 0 0 13)(14 0 0 0 14)(15 0 0 0 15)(16 0 0 0 16)(17 0 0 0 17)(18 0 0 0 18)(19 0 0 0 19)(20 0 0 0 20)(21 0 0 0 21)(22 0 0 0 22)(23 0 0 0 23)(24 0 0 0 24)(25 0 0 0 25)(26 0 0 0 26)(27 0 0 0 27)(28 0 0 0 28)(29 0 0 0 29)(30 0 0 0 30)(31 0 0 0 31)(32 0 0 0 32)(33 0 0 0 33)(34 0 0 0 34)(35 0 0 0 35)(36 0 0 0 36)(37 0 0 0 37)(38 0 0 0 38)(39 0 0 0 39)(40 0 0 0 40)(41 0 0 0 41)(42 0 0 0 42)(43 0 0 0 43)(44 0 0 0 44)(45 0 0 0 45)(46 0 0 0 46)(47 0 0 0 47)(48 0 0 0 48)(49 0 0 0 49)(50 0 0 0 50)(51 0 0 0 51)(52 0 0 0 52)(53 0 0 0 53)(54 0 0 0 54)(55 0 0 0 55)(56 0 0 0 56)(57 0 0 0 57)(58 0 0 0 58)(59 0 0 0 59)(60 0 0 0 60)(61 0 0 0 61)(62 0 0 0 62)(63 0 0 0 63)(64 0 0 0 64)(65 0 0 0 65)(66 0 0 0 66)(67 0 0 0 67)(68 0 0 0 68)(69 0 0 0 69)(70 0 0 0 70)(71 0 0 0 71)(72 0 0 0 72)(73 0 0 0 73)(74 0 0 0 74)(75 0 0 0 75)(76 0 0 0 76)(77 0 0 0 77)(78 0 0 0 78)(79 0 0 0 79)(80 0 0 0 80)(81 0 0 0 81)(82 0 0 0 82)(83 0 0 0 83)(84 0 0 0 84)(85 0 0 0 85)(86 0 0 0 86)(87 0 0 0 87)(88 0 0 0 88)(89 0 0 0 89)(90 0 0 0 90)(91 0 0 0 91)(92 0 0 0 92)(93 0 0 0 93)(94 0 0 0 94)(95 0 0 0 95)(96 0 0 0 96)(97 0 0 0 97)(98 0 0 0 98)(99 0 0 0 99)(100 0 0 0 100)(101 0 0 0 101)(102 0 0 0 102)(103 0 0 0 103)(104 0 0 0 104)(105 0 0 0 105)(106 0 0 0 106)(107 0 0 0 107)(108 0 0 0 108)(109 0 0 0 109)(110 0 0 0 110)(111 0 0 0 111)(112 0 0 0 112)(113 0 0 0 113)(114 0 0 0 114)(115 0 0 0 115)(116 0 0 0 116)(117 0 0 0 117)(118 0 0 0 118)(119 0 0 0 119)(120 0 0 0 120)(121 0 0 0 121)(122 0 0 0 122)(123 0 0 0 123)(124 0 0 0 124)(125 0 0 0 125)(126 0 0 0 126)(127 0 0 0 127)(128 0 0 0 128)(129 0 0 0 129)(130 0 0 0 130)(131 0 0 0 131)(132 0 0 0 132)(133 0 0 0 133)(134 0 0 0 134)(135 0 0 0 135)(136 0 0 0 136)(137 0 0 0 137)(138 0 0 0 138)(139 0 0 0 139)(140 0 0 0 140)(141 0 0 0 141)(142 0 0 0 142)(143 0 0 0 143)(144 0 0 0 144)(145 0 0 0 145)(146 0 0 0 146)(147 0 0 0 147)(148 0 0 0 148)(149 0 0 0 149)(150 0 0 0 150)(151 0 0 0 151)(152 0 0 0 152)(153 0 0 0 153)(154 0 0 0 154)(155 0 0 0 155)(156 0 0 0 156)(157 0 0 0 157)(158 0 0 0 158)(159 0 0 0 159)(160 0 0 0 160)(161 0 0 0 161)(162 0 0 0 162)(163 0 0 0 163)(164 0 0 0 164)(165 0 0 0 165)(166 0 0 0 166)(167 0 0 0 167)(168 0 0 0 168)(169 0 0 0 169)(170 0 0 0 170)(171 0 0 0 171)(172 0 0 0 172)(173 0 0 0 173)(174 0 0 0 174)(175 0 0 0 175)(176 0 0 0 176)(177 0 0 0 177)(178 0 0 0 178)(179 0 0 0 179)(180 0 0 0 180)(181 0 0 0 181)(182 0 0 0 182)(183 0 0 0 183)(184 0 0 0 184)(185 0 0 0 185)(186 0 0 0 186)(187 0 0 0 187)(188 0 0 0 188)(189 0 0 0 189)(190 0 0 0 190)(191 0 0 0 191)(192 0 0 0 192)(193 0 0 0 193)(194 0 0 0 194)(195 0 0 0 195)(196 0 0 0 196)(197 0 0 0 197)(198 0 0 0 198)(199 0 0 0 199)(200 0 0 0 200)(201 0 0 0 201)(202 0 0 0 202)(203 0 0 0 203)(204 0 0 0 204)(205 0 0 0 205)(206 0 0 0 206)(207 0 0 0 207)(208 0 0 0 208)(209 0 0 0 209)(210 0 0 0 210)(211 0 0 0 211)(212 0 0 0 212)(213 0 0 0 213)(214 0 0 0 214)(215 0 0 0 215)(216 0 0 0 216)(217 0 0 0 217)(218 0 0 0 218)(219 0 0 0 219)(220 0 0 0 220)(221 0 0 0 221)(222 0 0 0 222)(223 0 0 0 223)(224 0 0 0 224)(225 0 0 0 225)(226 0 0 0 226)(227 0 0 0 227)(228 0 0 0 228)(229 0 0 0 229)(230 0 0 0 230)(231 0 0 0 231)(232 0 0 0 232)(233 0 0 0 233)(234 0 0 0 234)(235 0 0 0 235)(236 0 0 0 236)(237 0 0 0 237)(238 0 0 0 238)(239 0 0 0 239)(240 0 0 0 240)(241 0 0 0 241)(242 0 0 0 242)(243 0 0 0 243)(244 0 0 0 244)(245 0 0 0 245)(246 0 0 0 246)(247 0 0 0 247)(248 0 0 0 248)(249 0 0 0 249)(250 0 0 0 250)(251 0 0 0 251)(252 0 0 0 252)(253 0 0 0 253)(254 0 0 0 254)(255 0 0 0 255)(256 0 0 0 256)(257 0 0 0 257)(258 0 0 0 258)(259 0 0 0 259)(260 0 0 0 260)(261 0 0 0 261)(262 0 0 0 262)(263 0 0 0 263)(264 0 0 0 264)(265 0 0 0 265)(266 0 0 0 266)(267 0 0 0 267)(268 0 0 0 268)(269 0 0 0 269)(270 0 0 0 270)(271 0 0 0 271)(272 0 0 0 272)(273 0 0 0 273)(274 0 0 0 274)(275 0 0 0 275)(276 0 0 0 276)(277 0 0 0 277)(278 0 0 0 278)(279 0 0 0 279)(280 0 0 0 280)(281 0 0 0 281)(282 0 0 0 282)(283 0 0 0 283)(284 0 0 0 284)(285 0 0 0 285)(286 0 0 0 286)(287 0 0 0 287)(288 0 0 0 288)(289 0 0 0 289)(290 0 0 0 290)(291 0 0 0 291)(292 0 0 0 292)(293 0 0 0 293)(294 0 0 0 294)(295 0 0 0 295)(296 0 0 0 296)(297 0 0 0 297)(298 0 0 0 298)(299 0 0 0 299)(300 0 0 0 300)(301 0 0 0 301)(302 0 0 0 302)(303 0 0 0 303)(304 0 0 0 304)(305 0 0 0 305)(306 0 0 0 306)(307 0 0 0 307)(308 0 0 0 308)(309 0 0 0 309)(310 0 0 0 310)(311 0 0 0 311)(312 0 0 0 312)(313 0 0 0 313)(314 0 0 0 314)(315 0 0 0 315)(316 0 0 0 316)(317 0 0 0 317)(318 0 0 0 318)(319 0 0 0 319)(320 0 0 0 320)(321 0 0 0 321)(322 0 0 0 322)(323 0 0 0 323)(324 0 0 0 324)(325 0 0 0 325)(326 0 0 0 326)(327 0 0 0 327)(328 0 0 0 328)(329 0 0 0 329)(330 0 0 0 330)(331 0 0 0 331)(332 0 0 0 332)(333 0 0 0 333)(334 0 0 0 334)(335 0 0 0 335)(336 0 0 0 336)(337 0 0 0 337)(338 0 0 0 338)(339 0 0 0 339)(340 0 0 0 340)(341 0 0 0 341)(342 0 0 0 342)(343 0 0 0 343)(344 0 0 0 344)(345 0 0 0 345)(346 0 0 0 346)(347 0 0 0 347)(348 0 0 0 348)(349 0 0 0 349)(350 0 0 0 350)(351 0 0 0 351)(352 0 0 0 352)(353 0 0 0 353)(354 0 0 0 354)(355 0 0 0 355)(356 0 0 0 356)(357 0 0 0 357)(358 0 0 0 358)(359 0 0 0 359)(360 0 0 0 360)(361 0 0 0 361)(362 0 0 0 362)(363 0 0 0 363)(364 0 0 0 364)(365 0 0 0 365)(366 0 0 0 366)(367 0 0 0 367)(368 0 0 0 368)(369 0 0 0 369)(370 0 0 0 370)(371 0 0 0 371)(372 0 0 0 372)(373 0 0 0 373)(374 0 0 0 374)(375 0 0 0 375)(376 0 0 0 376)(377 0 0 0 377)(378 0 0 0 378)(379 0 0 0 379)(380 0 0 0 380)(381 0 0 0 381)(382 0 0 0 382)(383 0 0 0 383)(384 1 0 0 0)(385 1 0 0 1)(386 1 0 0 2)(387 1 0 0 3)(388 1 0 0 4)(389 1 0 0 5)(390 1 0 0 6)(391 1 0 0 7)(392 1 0 0 8)(393 1 0 0 9)(394 1 0 0 10)(395 1 0 0 11)(396 1 0 0 12)(397 1 0 0 13)(398 1 0 0 14)(399 1 0 0 15)(400 1 0 0 16)(401 1 0 0 17)(402 1 0 0 18)(403 1 0 0 19)(404 1 0 0 20)(405 1 0 0 21)(406 1 0 0 22)(407 1 0 0 23)(408 1 0 0 24)(409 1 0 0 25)(410 1 0 0 26)(411 1 0 0 27)(412 1 0 0 28)(413 1 0 0 29)(414 1 0 0 30)(415 1 0 0 31)(416 1 0 0 32)(417 1 0 0 33)(418 1 0 0 34)(419 1 0 0 35)(420 1 0 0 36)(421 1 0 0 37)(422 1 0 0 38)(423 1 0 0 39)(424 1 0 0 40)(425 1 0 0 41)(426 1 0 0 42)(427 1 0 0 43)(428 1 0 0 44)(429 1 0 0 45)(430 1 0 0 46)(431 1 0 0 47)(432 1 0 0 48)(433 1 0 0 49)(434 1 0 0 50)(435 1 0 0 51)(436 1 0 0 52)(437 1 0 0 53)(438 1 0 0 54)(439 1 0 0 55)(440 1 0 0 56)(441 1 0 0 57)(442 1 0 0 58)(443 1 0 0 59)(444 1 0 0 60)(445 1 0 0 61)(446 1 0 0 62)(447 1 0 0 63)(448 1 0 0 64)(449 1 0 0 65)(450 1 0 0 66)(451 1 0 0 67)(452 1 0 0 68)(453 1 0 0 69)(454 1 0 0 70)(455 1 0 0 71)(456 1 0 0 72)(457 1 0 0 73)(458 1 0 0 74)(459 1 0 0 75)(460 1 0 0 76)(461 1 0 0 77)(462 1 0 0 78)(463 1 0 0 79)(464 1 0 0 80)(465 1 0 0 81)(466 1 0 0 82)(467 1 0 0 83)(468 1 0 0 84)(469 1 0 0 85)(470 1 0 0 86)(471 1 0 0 87)(472 1 0 0 88)(473 1 0 0 89)(474 1 0 0 90)(475 1 0 0 91)(476 1 0 0 92)(477 1 0 0 93)(478 1 0 0 94)(479 1 0 0 95)(480 1 0 0 96)(481 1 0 0 97)(482 1 0 0 98)(483 1 0 0 99)(484 1 0 0 100)(485 1 0 0 101)(486 1 0 0 102)(487 1 0 0 103)(488 1 0 0 104)(489 1 0 0 105)(490 1 0 0 106)(491 1 0 0 107)(492 1 0 0 108)(493 1 0 0 109)(494 1 0 0 110)(495 1 0 0 111)(496 1 0 0 112)(497 1 0 0 113)(498 1 0 0 114)(499 1 0 0 115)(500 1 0 0 116)(501 1 0 0 117)(502 1 0 0 118)(503 1 0 0 119)(504 1 0 0 120)(505 1 0 0 121)(506 1 0 0 122)(507 1 0 0 123)(508 1 0 0 124)(509 1 0 0 125)(510 1 0 0 126)(511 1 0 0 127)(512 1 0 0 128)(513 1 0 0 129)(514 1 0 0 130)(515 1 0 0 131)(516 1 0 0 132)(517 1 0 0 133)(518 1 0 0 134)(519 1 0 0 135)(520 1 0 0 136)(521 1 0 0 137)(522 1 0 0 138)(523 1 0 0 139)(524 1 0 0 140)(525 1 0 0 141)(526 1 0 0 142)(527 1 0 0 143)(528 1 0 0 144)(529 1 0 0 145)(530 1 0 0 146)(531 1 0 0 147)(532 1 0 0 148)(533 1 0 0 149)(534 1 0 0 150)(535 1 0 0 151)(536 1 0 0 152)(537 1 0 0 153)(538 1 0 0 154)(539 1 0 0 155)(540 1 0 0 156)(541 1 0 0 157)(542 1 0 0 158)(543 1 0 0 159)(544 1 0 0 160)(545 1 0 0 161)(546 1 0 0 162)(547 1 0 0 163)(548 1 0 0 164)(549 1 0 0 165)(550 1 0 0 166)(551 1 0 0 167)(552 1 0 0 168)(553 1 0 0 169)(554 1 0 0 170)(555 1 0 0 171)(556 1 0 0 172)(557 1 0 0 173)(558 1 0 0 174)(559 1 0 0 175)(560 1 0 0 176)(561 1 0 0 177)(562 1 0 0 178)(563 1 0 0 179)(564 1 0 0 180)(565 1 0 0 181)(566 1 0 0 182)(567 1 0 0 183)(568 1 0 0 184)(569 1 0 0 185)(570 1 0 0 186)(571 1 0 0 187)(572 1 0 0 188)(573 1 0 0 189)(574 1 0 0 190)(575 1 0 0 191)(576 1 0 0 192)(577 1 0 0 193)(578 1 0 0 194)(579 1 0 0 195)(580 1 0 0 196)(581 1 0 0 197)(582 1 0 0 198)(583 1 0 0 199)(584 1 0 0 200)(585 1 0 0 201)(586 1 0 0 202)(587 1 0 0 203)(588 1 0 0 204)(589 1 0 0 205)(590 1 0 0 206)(591 1 0 0 207)(592 1 0 0 208)(593 1 0 0 209)(594 1 0 0 210)(595 1 0 0 211)(596 1 0 0 212)(597 1 0 0 213)(598 1 0 0 214)(599 1 0 0 215)(600 1 0 0 216)(601 1 0 0 217)(602 1 0 0 218)(603 1 0 0 219)(604 1 0 0 220)(605 1 0 0 221)(606 1 0 0 222)(607 1 0 0 223)(608 1 0 0 224)(609 1 0 0 225)(610 1 0 0 226)(611 1 0 0 227)(612 1 0 0 228)(613 1 0 0 229)(614 1 0 0 230)(615 1 0 0 231)(616 1 0 0 232)(617 1 0 0 233)(618 1 0 0 234)(619 1 0 0 235)(620 1 0 0 236)(621 1 0 0 237)(622 1 0 0 238)(623 1 0 0 239)(624 1 0 0 240)(625 1 0 0 241)(626 1 0 0 242)(627 1 0 0 243)(628 1 0 0 244)(629 1 0 0 245)(630 1 0 0 246)(631 1 0 0 247)(632 1 0 0 248)(633 1 0 0 249)(634 1 0 0 250)(635 1 0 0 251)(636 1 0 0 252)(637 1 0 0 253)(638 1 0 0 254)(639 1 0 0 255)(640 1 0 0 256)(641 1 0 0 257)(642 1 0 0 258)(643 1 0 0 259)(644 1 0 0 260)(645 1 0 0 261)(646 1 0 0 262)(647 1 0 0 263)(648 1 0 0 264)(649 1 0 0 265)(650 1 0 0 266)(651 1 0 0 267)(652 1 0 0 268)(653 1 0 0 269)(654 1 0 0 270)(655 1 0 0 271)(656 1 0 0 272)(657 1 0 0 273)(658 1 0 0 274)(659 1 0 0 275)(660 1 0 0 276)(661 1 0 0 277)(662 1 0 0 278)(663 1 0 0 279)(664 1 0 0 280)(665 1 0 0 281)(666 1 0 0 282)(667 1 0 0 283)(668 1 0 0 284)(669 1 0 0 285)(670 1 0 0 286)(671 1 0 0 287)(672 1 0 0 288)(673 1 0 0 289)(674 1 0 0 290)(675 1 0 0 291)(676 1 0 0 292)(677 1 0 0 293)(678 1 0 0 294)(679 1 0 0 295)(680 1 0 0 296)(681 1 0 0 297)(682 1 0 0 298)(683 1 0 0 299)(684 1 0 0 300)(685 1 0 0 301)(686 1 0 0 302)(687 1 0 0 303)(688 1 0 0 304)(689 1 0 0 305)(690 1 0 0 306)(691 1 0 0 307)(692 1 0 0 308)(693 1 0 0 309)(694 1 0 0 310)(695 1 0 0 311)(696 1 0 0 312)(697 1 0 0 313)(698 1 0 0 314)(699 1 0 0 315)(700 1 0 0 316)(701 1 0 0 317)(702 1 0 0 318)(703 1 0 0 319)(704 1 0 0 320)(705 1 0 0 321)(706 1 0 0 322)(707 1 0 0 323)(708 1 0 0 324)(709 1 0 0 325)(710 1 0 0 326)(711 1 0 0 327)(712 1 0 0 328)(713 1 0 0 329)(714 1 0 0 330)(715 1 0 0 331)(716 1 0 0 332)(717 1 0 0 333)(718 1 0 0 334)(719 1 0 0 335)(720 1 0 0 336)(721 1 0 0 337)(722 1 0 0 338)(723 1 0 0 339)(724 1 0 0 340)(725 1 0 0 341)(726 1 0 0 342)(727 1 0 0 343)(728 1 0 0 344)(729 1 0 0 345)(730 1 0 0 346)(731 1 0 0 347)(732 1 0 0 348)(733 1 0 0 349)(734 1 0 0 350)(735 1 0 0 351)(736 1 0 0 352)(737 1 0 0 353)(738 1 0 0 354)(739 1 0 0 355)(740 1 0 0 356)(741 1 0 0 357)(742 1 0 0 358)(743 1 0 0 359)(744 1 0 0 360)(745 1 0 0 361)(746 1 0 0 362)(747 1 0 0 363)(748 1 0 0 364)(749 1 0 0 365)(750 1 0 0 366)(751 1 0 0 367)(752 1 0 0 368)(753 1 0 0 369)(754 1 0 0 370)(755 1 0 0 371)(756 1 0 0 372)(757 1 0 0 373)(758 1 0 0 374)(759 1 0 0 375)(760 1 0 0 376)(761 1 0 0 377)(762 1 0 0 378)(763 1 0 0 379)(764 1 0 0 380)(765 1 0 0 381)(766 1 0 0 382)(767 1 0 0 383)(768 2 0 0 0)(769 2 0 0 1)(770 2 0 0 2)(771 2 0 0 3)(772 2 0 0 4)(773 2 0 0 5)(774 2 0 0 6)(775 2 0 0 7)(776 2 0 0 8)(777 2 0 0 9)(778 2 0 0 10)(779 2 0 0 11)(780 2 0 0 12)(781 2 0 0 13)(782 2 0 0 14)(783 2 0 0 15)(784 2 0 0 16)(785 2 0 0 17)(786 2 0 0 18)(787 2 0 0 19)(788 2 0 0 20)(789 2 0 0 21)(790 2 0 0 22)(791 2 0 0 23)(792 2 0 0 24)(793 2 0 0 25)(794 2 0 0 26)(795 2 0 0 27)(796 2 0 0 28)(797 2 0 0 29)(798 2 0 0 30)(799 2 0 0 31)(800 2 0 0 32)(801 2 0 0 33)(802 2 0 0 34)(803 2 0 0 35)(804 2 0 0 36)(805 2 0 0 37)(806 2 0 0 38)(807 2 0 0 39)(808 2 0 0 40)(809 2 0 0 41)(810 2 0 0 42)(811 2 0 0 43)(812 2 0 0 44)(813 2 0 0 45)(814 2 0 0 46)(815 2 0 0 47)(816 2 0 0 48)(817 2 0 0 49)(818 2 0 0 50)(819 2 0 0 51)(820 2 0 0 52)(821 2 0 0 53)(822 2 0 0 54)(823 2 0 0 55)(824 2 0 0 56)(825 2 0 0 57)(826 2 0 0 58)(827 2 0 0 59)(828 2 0 0 60)(829 2 0 0 61)(830 2 0 0 62)(831 2 0 0 63)(832 2 0 0 64)(833 2 0 0 65)(834 2 0 0 66)(835 2 0 0 67)(836 2 0 0 68)(837 2 0 0 69)(838 2 0 0 70)(839 2 0 0 71)(840 2 0 0 72)(841 2 0 0 73)(842 2 0 0 74)(843 2 0 0 75)(844 2 0 0 76)(845 2 0 0 77)(846 2 0 0 78)(847 2 0 0 79)(848 2 0 0 80)(849 2 0 0 81)(850 2 0 0 82)(851 2 0 0 83)(852 2 0 0 84)(853 2 0 0 85)(854 2 0 0 86)(855 2 0 0 87)(856 2 0 0 88)(857 2 0 0 89)(858 2 0 0 90)(859 2 0 0 91)(860 2 0 0 92)(861 2 0 0 93)(862 2 0 0 94)(863 2 0 0 95)(864 2 0 0 96)(865 2 0 0 97)(866 2 0 0 98)(867 2 0 0 99)(868 2 0 0 100)(869 2 0 0 101)(870 2 0 0 102)(871 2 0 0 103)(872 2 0 0 104)(873 2 0 0 105)(874 2 0 0 106)(875 2 0 0 107)(876 2 0 0 108)(877 2 0 0 109)(878 2 0 0 110)(879 2 0 0 111)(880 2 0 0 112)(881 2 0 0 113)(882 2 0 0 114)(883 2 0 0 115)(884 2 0 0 116)(885 2 0 0 117)(886 2 0 0 118)(887 2 0 0 119)(888 2 0 0 120)(889 2 0 0 121)(890 2 0 0 122)(891 2 0 0 123)(892 2 0 0 124)(893 2 0 0 125)(894 2 0 0 126)(895 2 0 0 127)(896 2 0 0 128)(897 2 0 0 129)(898 2 0 0 130)(899 2 0 0 131)(900 2 0 0 132)(901 2 0 0 133)(902 2 0 0 134)(903 2 0 0 135)(904 2 0 0 136)(905 2 0 0 137)(906 2 0 0 138)(907 2 0 0 139)(908 2 0 0 140)(909 2 0 0 141)(910 2 0 0 142)(911 2 0 0 143)(912 2 0 0 144)(913 2 0 0 145)(914 2 0 0 146)(915 2 0 0 147)(916 2 0 0 148)(917 2 0 0 149)(918 2 0 0 150)(919 2 0 0 151)(920 2 0 0 152)(921 2 0 0 153)(922 2 0 0 154)(923 2 0 0 155)(924 2 0 0 156)(925 2 0 0 157)(926 2 0 0 158)(927 2 0 0 159)(928 2 0 0 160)(929 2 0 0 161)(930 2 0 0 162)(931 2 0 0 163)(932 2 0 0 164)(933 2 0 0 165)(934 2 0 0 166)(935 2 0 0 167)(936 2 0 0 168)(937 2 0 0 169)(938 2 0 0 170)(939 2 0 0 171)(940 2 0 0 172)(941 2 0 0 173)(942 2 0 0 174)(943 2 0 0 175)(944 2 0 0 176)(945 2 0 0 177)(946 2 0 0 178)(947 2 0 0 179)(948 2 0 0 180)(949 2 0 0 181)(950 2 0 0 182)(951 2 0 0 183)(952 2 0 0 184)(953 2 0 0 185)(954 2 0 0 186)(955 2 0 0 187)(956 2 0 0 188)(957 2 0 0 189)(958 2 0 0 190)(959 2 0 0 191)(960 2 0 0 192)(961 2 0 0 193)(962 2 0 0 194)(963 2 0 0 195)(964 2 0 0 196)(965 2 0 0 197)(966 2 0 0 198)(967 2 0 0 199)(968 2 0 0 200)(969 2 0 0 201)(970 2 0 0 202)(971 2 0 0 203)(972 2 0 0 204)(973 2 0 0 205)(974 2 0 0 206)(975 2 0 0 207)(976 2 0 0 208)(977 2 0 0 209)(978 2 0 0 210)(979 2 0 0 211)(980 2 0 0 212)(981 2 0 0 213)(982 2 0 0 214)(983 2 0 0 215)(984 2 0 0 216)(985 2 0 0 217)(986 2 0 0 218)(987 2 0 0 219)(988 2 0 0 220)(989 2 0 0 221)(990 2 0 0 222)(991 2 0 0 223)(992 2 0 0 224)(993 2 0 0 225)(994 2 0 0 226)(995 2 0 0 227)(996 2 0 0 228)(997 2 0 0 229)(998 2 0 0 230)(999 2 0 0 231)(1000 2 0 0 232)(1001 2 0 0 233)(1002 2 0 0 234)(1003 2 0 0 235)(1004 2 0 0 236)(1005 2 0 0 237)(1006 2 0 0 238)(1007 2 0 0 239)(1008 2 0 0 240)(1009 2 0 0 241)(1010 2 0 0 242)(1011 2 0 0 243)(1012 2 0 0 244)(1013 2 0 0 245)(1014 2 0 0 246)(1015 2 0 0 247)(1016 2 0 0 248)(1017 2 0 0 249)(1018 2 0 0 250)(1019 2 0 0 251)(1020 2 0 0 252)(1021 2 0 0 253)(1022 2 0 0 254)(1023 2 0 0 255)(1024 2 0 0 256)(1025 2 0 0 257)(1026 2 0 0 258)(1027 2 0 0 259)(1028 2 0 0 260)(1029 2 0 0 261)(1030 2 0 0 262)(1031 2 0 0 263)(1032 2 0 0 264)(1033 2 0 0 265)(1034 2 0 0 266)(1035 2 0 0 267)(1036 2 0 0 268)(1037 2 0 0 269)(1038 2 0 0 270)(1039 2 0 0 271)(1040 2 0 0 272)(1041 2 0 0 273)(1042 2 0 0 274)(1043 2 0 0 275)(1044 2 0 0 276)(1045 2 0 0 277)(1046 2 0 0 278)(1047 2 0 0 279)(1048 2 0 0 280)(1049 2 0 0 281)(1050 2 0 0 282)(1051 2 0 0 283)(1052 2 0 0 284)(1053 2 0 0 285)(1054 2 0 0 286)(1055 2 0 0 287)(1056 2 0 0 288)(1057 2 0 0 289)(1058 2 0 0 290)(1059 2 0 0 291)(1060 2 0 0 292)(1061 2 0 0 293)(1062 2 0 0 294)(1063 2 0 0 295)(1064 2 0 0 296)(1065 2 0 0 297)(1066 2 0 0 298)(1067 2 0 0 299)(1068 2 0 0 300)(1069 2 0 0 301)(1070 2 0 0 302)(1071 2 0 0 303)(1072 2 0 0 304)(1073 2 0 0 305)(1074 2 0 0 306)(1075 2 0 0 307)(1076 2 0 0 308)(1077 2 0 0 309)(1078 2 0 0 310)(1079 2 0 0 311)(1080 2 0 0 312)(1081 2 0 0 313)(1082 2 0 0 314)(1083 2 0 0 315)(1084 2 0 0 316)(1085 2 0 0 317)(1086 2 0 0 318)(1087 2 0 0 319)(1088 2 0 0 320)(1089 2 0 0 321)(1090 2 0 0 322)(1091 2 0 0 323)(1092 2 0 0 324)(1093 2 0 0 325)(1094 2 0 0 326)(1095 2 0 0 327)(1096 2 0 0 328)(1097 2 0 0 329)(1098 2 0 0 330)(1099 2 0 0 331)(1100 2 0 0 332)(1101 2 0 0 333)(1102 2 0 0 334)(1103 2 0 0 335)(1104 2 0 0 336)(1105 2 0 0 337)(1106 2 0 0 338)(1107 2 0 0 339)(1108 2 0 0 340)(1109 2 0 0 341)(1110 2 0 0 342)(1111 2 0 0 343)(1112 2 0 0 344)(1113 2 0 0 345)(1114 2 0 0 346)(1115 2 0 0 347)(1116 2 0 0 348)(1117 2 0 0 349)(1118 2 0 0 350)(1119 2 0 0 351)(1120 2 0 0 352)(1121 2 0 0 353)(1122 2 0 0 354)(1123 2 0 0 355)(1124 2 0 0 356)(1125 2 0 0 357)(1126 2 0 0 358)(1127 2 0 0 359)(1128 2 0 0 360)(1129 2 0 0 361)(1130 2 0 0 362)(1131 2 0 0 363)(1132 2 0 0 364)(1133 2 0 0 365)(1134 2 0 0 366)(1135 2 0 0 367)(1136 2 0 0 368)(1137 2 0 0 369)(1138 2 0 0 370)(1139 2 0 0 371)(1140 2 0 0 372)(1141 2 0 0 373)(1142 2 0 0 374)(1143 2 0 0 375)(1144 2 0 0 376)(1145 2 0 0 377)(1146 2 0 0 378)(1147 2 0 0 379)(1148 2 0 0 380)(1149 2 0 0 381)(1150 2 0 0 382)(1151 2 0 0 383)(1152 3 0 0 0)(1153 3 0 0 1)(1154 3 0 0 2)(1155 3 0 0 3)(1156 3 0 0 4)(1157 3 0 0 5)(1158 3 0 0 6)(1159 3 0 0 7)(1160 3 0 0 8)(1161 3 0 0 9)(1162 3 0 0 10)(1163 3 0 0 11)(1164 3 0 0 12)(1165 3 0 0 13)(1166 3 0 0 14)(1167 3 0 0 15)(1168 3 0 0 16)(1169 3 0 0 17)(1170 3 0 0 18)(1171 3 0 0 19)(1172 3 0 0 20)(1173 3 0 0 21)(1174 3 0 0 22)(1175 3 0 0 23)(1176 3 0 0 24)(1177 3 0 0 25)(1178 3 0 0 26)(1179 3 0 0 27)(1180 3 0 0 28)(1181 3 0 0 29)(1182 3 0 0 30)(1183 3 0 0 31)(1184 3 0 0 32)(1185 3 0 0 33)(1186 3 0 0 34)(1187 3 0 0 35)(1188 3 0 0 36)(1189 3 0 0 37)(1190 3 0 0 38)(1191 3 0 0 39)(1192 3 0 0 40)(1193 3 0 0 41)(1194 3 0 0 42)(1195 3 0 0 43)(1196 3 0 0 44)(1197 3 0 0 45)(1198 3 0 0 46)(1199 3 0 0 47)(1200 3 0 0 48)(1201 3 0 0 49)(1202 3 0 0 50)(1203 3 0 0 51)(1204 3 0 0 52)(1205 3 0 0 53)(1206 3 0 0 54)(1207 3 0 0 55)(1208 3 0 0 56)(1209 3 0 0 57)(1210 3 0 0 58)(1211 3 0 0 59)(1212 3 0 0 60)(1213 3 0 0 61)(1214 3 0 0 62)(1215 3 0 0 63)(1216 3 0 0 64)(1217 3 0 0 65)(1218 3 0 0 66)(1219 3 0 0 67)(1220 3 0 0 68)(1221 3 0 0 69)(1222 3 0 0 70)(1223 3 0 0 71)(1224 3 0 0 72)(1225 3 0 0 73)(1226 3 0 0 74)(1227 3 0 0 75)(1228 3 0 0 76)(1229 3 0 0 77)(1230 3 0 0 78)(1231 3 0 0 79)(1232 3 0 0 80)(1233 3 0 0 81)(1234 3 0 0 82)(1235 3 0 0 83)(1236 3 0 0 84)(1237 3 0 0 85)(1238 3 0 0 86)(1239 3 0 0 87)(1240 3 0 0 88)(1241 3 0 0 89)(1242 3 0 0 90)(1243 3 0 0 91)(1244 3 0 0 92)(1245 3 0 0 93)(1246 3 0 0 94)(1247 3 0 0 95)(1248 3 0 0 96)(1249 3 0 0 97)(1250 3 0 0 98)(1251 3 0 0 99)(1252 3 0 0 100)(1253 3 0 0 101)(1254 3 0 0 102)(1255 3 0 0 103)(1256 3 0 0 104)(1257 3 0 0 105)(1258 3 0 0 106)(1259 3 0 0 107)(1260 3 0 0 108)(1261 3 0 0 109)(1262 3 0 0 110)(1263 3 0 0 111)(1264 3 0 0 112)(1265 3 0 0 113)(1266 3 0 0 114)(1267 3 0 0 115)(1268 3 0 0 116)(1269 3 0 0 117)(1270 3 0 0 118)(1271 3 0 0 119)(1272 3 0 0 120)(1273 3 0 0 121)(1274 3 0 0 122)(1275 3 0 0 123)(1276 3 0 0 124)(1277 3 0 0 125)(1278 3 0 0 126)(1279 3 0 0 127)(1280 3 0 0 128)(1281 3 0 0 129)(1282 3 0 0 130)(1283 3 0 0 131)(1284 3 0 0 132)(1285 3 0 0 133)(1286 3 0 0 134)(1287 3 0 0 135)(1288 3 0 0 136)(1289 3 0 0 137)(1290 3 0 0 138)(1291 3 0 0 139)(1292 3 0 0 140)(1293 3 0 0 141)(1294 3 0 0 142)(1295 3 0 0 143)(1296 3 0 0 144)(1297 3 0 0 145)(1298 3 0 0 146)(1299 3 0 0 147)(1300 3 0 0 148)(1301 3 0 0 149)(1302 3 0 0 150)(1303 3 0 0 151)(1304 3 0 0 152)(1305 3 0 0 153)(1306 3 0 0 154)(1307 3 0 0 155)(1308 3 0 0 156)(1309 3 0 0 157)(1310 3 0 0 158)(1311 3 0 0 159)(1312 3 0 0 160)(1313 3 0 0 161)(1314 3 0 0 162)(1315 3 0 0 163)(1316 3 0 0 164)(1317 3 0 0 165)(1318 3 0 0 166)(1319 3 0 0 167)(1320 3 0 0 168)(1321 3 0 0 169)(1322 3 0 0 170)(1323 3 0 0 171)(1324 3 0 0 172)(1325 3 0 0 173)(1326 3 0 0 174)(1327 3 0 0 175)(1328 3 0 0 176)(1329 3 0 0 177)(1330 3 0 0 178)(1331 3 0 0 179)(1332 3 0 0 180)(1333 3 0 0 181)(1334 3 0 0 182)(1335 3 0 0 183)(1336 3 0 0 184)(1337 3 0 0 185)(1338 3 0 0 186)(1339 3 0 0 187)(1340 3 0 0 188)(1341 3 0 0 189)(1342 3 0 0 190)(1343 3 0 0 191)(1344 3 0 0 192)(1345 3 0 0 193)(1346 3 0 0 194)(1347 3 0 0 195)(1348 3 0 0 196)(1349 3 0 0 197)(1350 3 0 0 198)(1351 3 0 0 199)(1352 3 0 0 200)(1353 3 0 0 201)(1354 3 0 0 202)(1355 3 0 0 203)(1356 3 0 0 204)(1357 3 0 0 205)(1358 3 0 0 206)(1359 3 0 0 207)(1360 3 0 0 208)(1361 3 0 0 209)(1362 3 0 0 210)(1363 3 0 0 211)(1364 3 0 0 212)(1365 3 0 0 213)(1366 3 0 0 214)(1367 3 0 0 215)(1368 3 0 0 216)(1369 3 0 0 217)(1370 3 0 0 218)(1371 3 0 0 219)(1372 3 0 0 220)(1373 3 0 0 221)(1374 3 0 0 222)(1375 3 0 0 223)(1376 3 0 0 224)(1377 3 0 0 225)(1378 3 0 0 226)(1379 3 0 0 227)(1380 3 0 0 228)(1381 3 0 0 229)(1382 3 0 0 230)(1383 3 0 0 231)(1384 3 0 0 232)(1385 3 0 0 233)(1386 3 0 0 234)(1387 3 0 0 235)(1388 3 0 0 236)(1389 3 0 0 237)(1390 3 0 0 238)(1391 3 0 0 239)(1392 3 0 0 240)(1393 3 0 0 241)(1394 3 0 0 242)(1395 3 0 0 243)(1396 3 0 0 244)(1397 3 0 0 245)(1398 3 0 0 246)(1399 3 0 0 247)(1400 3 0 0 248)(1401 3 0 0 249)(1402 3 0 0 250)(1403 3 0 0 251)(1404 3 0 0 252)(1405 3 0 0 253)(1406 3 0 0 254)(1407 3 0 0 255)(1408 3 0 0 256)(1409 3 0 0 257)(1410 3 0 0 258)(1411 3 0 0 259)(1412 3 0 0 260)(1413 3 0 0 261)(1414 3 0 0 262)(1415 3 0 0 263)(1416 3 0 0 264)(1417 3 0 0 265)(1418 3 0 0 266)(1419 3 0 0 267)(1420 3 0 0 268)(1421 3 0 0 269)(1422 3 0 0 270)(1423 3 0 0 271)(1424 3 0 0 272)(1425 3 0 0 273)(1426 3 0 0 274)(1427 3 0 0 275)(1428 3 0 0 276)(1429 3 0 0 277)(1430 3 0 0 278)(1431 3 0 0 279)(1432 3 0 0 280)(1433 3 0 0 281)(1434 3 0 0 282)(1435 3 0 0 283)(1436 3 0 0 284)(1437 3 0 0 285)(1438 3 0 0 286)(1439 3 0 0 287)(1440 3 0 0 288)(1441 3 0 0 289)(1442 3 0 0 290)(1443 3 0 0 291)(1444 3 0 0 292)(1445 3 0 0 293)(1446 3 0 0 294)(1447 3 0 0 295)(1448 3 0 0 296)(1449 3 0 0 297)(1450 3 0 0 298)(1451 3 0 0 299)(1452 3 0 0 300)(1453 3 0 0 301)(1454 3 0 0 302)(1455 3 0 0 303)(1456 3 0 0 304)(1457 3 0 0 305)(1458 3 0 0 306)(1459 3 0 0 307)(1460 3 0 0 308)(1461 3 0 0 309)(1462 3 0 0 310)(1463 3 0 0 311)(1464 3 0 0 312)(1465 3 0 0 313)(1466 3 0 0 314)(1467 3 0 0 315)(1468 3 0 0 316)(1469 3 0 0 317)(1470 3 0 0 318)(1471 3 0 0 319)(1472 3 0 0 320)(1473 3 0 0 321)(1474 3 0 0 322)(1475 3 0 0 323)(1476 3 0 0 324)(1477 3 0 0 325)(1478 3 0 0 326)(1479 3 0 0 327)(1480 3 0 0 328)(1481 3 0 0 329)(1482 3 0 0 330)(1483 3 0 0 331)(1484 3 0 0 332)(1485 3 0 0 333)(1486 3 0 0 334)(1487 3 0 0 335)(1488 3 0 0 336)(1489 3 0 0 337)(1490 3 0 0 338)(1491 3 0 0 339)(1492 3 0 0 340)(1493 3 0 0 341)(1494 3 0 0 342)(1495 3 0 0 343)(1496 3 0 0 344)(1497 3 0 0 345)(1498 3 0 0 346)(1499 3 0 0 347)(1500 3 0 0 348)(1501 3 0 0 349)(1502 3 0 0 350)(1503 3 0 0 351)(1504 3 0 0 352)(1505 3 0 0 353)(1506 3 0 0 354)(1507 3 0 0 355)(1508 3 0 0 356)(1509 3 0 0 357)(1510 3 0 0 358)(1511 3 0 0 359)(1512 3 0 0 360)(1513 3 0 0 361)(1514 3 0 0 362)(1515 3 0 0 363)(1516 3 0 0 364)(1517 3 0 0 365)(1518 3 0 0 366)(1519 3 0 0 367)(1520 3 0 0 368)(1521 3 0 0 369)(1522 3 0 0 370)(1523 3 0 0 371)(1524 3 0 0 372)(1525 3 0 0 373)(1526 3 0 0 374)(1527 3 0 0 375)(1528 3 0 0 376)(1529 3 0 0 377)(1530 3 0 0 378)(1531 3 0 0 379)(1532 3 0 0 380)(1533 3 0 0 381)(1534 3 0 0 382)(1535 3 0 0 383 Type 1110: (1110,2,0,500,250,1)(0 0 0)(1 0 0)(2 0 0)(3 0 0)(4 0 0)(5 0 0)(6 0 0)(7 0 0)(8 0 0)(9 0 0)(10 0 0)(11 0 0)(12 0 0)(13 0 0)(14 0 0)(15 0 0)(16 0 0)(17 0 0)(18 0 0)(19 0 0)(20 0 0)(21 0 0)(22 0 0)(23 0 0) The first entry () of the table is a header indicating (probe-type, number of channels). The meaning of the subsequent channel entries depends upon the probe type. The table must have an entry for each readout channel, usually 384. Entry values are space-separated. A single linefeed '\\n' terminates the file.","title":"Text Examples"},{"location":"Help/imroTables/#channel-entries-by-type","text":"Type {0,1020,1030,1100,1120,1121,1122,1123,1200,1300}, NP 1.0-like : Channel ID, Bank number of the connected electrode, Reference ID index, AP band gain, LF band gain, AP hipass filter applied (1=ON) The reference ID values are {0=ext, 1=tip, [2..4]=on-shnk-ref}. The on-shnk ref electrodes are {192,576,960}. Type {21,2003,2004} (NP 2.0, single multiplexed shank) : Channel ID, Bank mask (logical OR of {1=bnk-0, 2=bnk-1, 4=bnk-2, 8=bnk-3}), Reference ID index, Electrode ID (range [0,1279]) Type-21 reference ID values are {0=ext, 1=tip, [2..5]=on-shnk-ref}. The on-shnk ref electrodes are {127,507,887,1251}. Type-2003,2004 reference ID values are {0=ext, 1=gnd, 2=tip}. On-shank reference electrodes are removed from commercial 2B probes. Type {24,2013,2014} (NP 2.0, 4-shank) : Channel ID, Shank ID (with tips pointing down, shank-0 is left-most), Bank ID, Reference ID index, Electrode ID (range [0,1279] on each shank) Type-24 reference ID values are {0=ext, [1..4]=tip[0..3], [5..8]=on-shnk-0, [9..12]=on-shnk-1, [13..16]=on-shnk-2, [17..20]=on-shnk-3}. The on-shnk ref electrodes of any shank are {127,511,895,1279}. Type-2013,2014 reference ID values are {0=ext, 1=gnd, [2..5]=tip[0..3]}. On-shank reference electrodes are removed from commercial 2B probes. Type {2020,2021} (Quad-probe) : Channel ID, Shank ID (with tips pointing down, shank-0 is left-most), Bank ID, Reference ID index, Electrode ID (range [0,1279] on each shank) Quad-base reference ID values are {0=ext, 1=gnd, 2=tip on same shank as electode}. Type 1110 (UHD programmable) : This has a unique header: Type (1110), ColumnMode {0=INNER, 1=OUTER, 2=ALL}, Reference ID index {0=ext, 1=tip}, AP band gain, LF band gain, AP hipass filter applied (1=ON) And 24 entries following the header: Group ID, Bank-A, Bank-B,","title":"Channel Entries By Type"},{"location":"Help/imroTables/#c-code-type-0-default","text":"The default for a 3B type-0 probe is to select for each channel: bank=0, ref=0, APgain=500, LFgain=250, APfilter=1. void Default3B() { FILE *fo = fopen( \"Default3B.imro\", \"w\" ); // write the header fprintf( fo, \"(0,384)\" ); // write the rows (r) for( int r = 0; r < 384; ++r ) fprintf( fo, \"(%d 0 0 500 250 1)\", r ); // finish fprintf( fo, \"\\n\" ); fclose( fo ); }","title":"C Code: Type 0 Default"},{"location":"Help/imroTables/#c-code-type-0-tetrodes","text":"Each channel will get the default reference, gain and filter settings {ref=0, APgain=500, LFgain=250, APfilter=1}. Starting at the tip, we'll select a block of four channels by setting them to bank-0. Then we'll skip the next four channels in bank-0 by setting them to bank-1. By repeating this we will create tetrodes that cover banks zero and one. The code will loop over sets of eight channels at a time. So there are 384/8 iterations of the loop. void Tetrodes3B() { FILE *fo = fopen( \"Tetrode_1shank.imro\", \"w\" ); // write the header fprintf( fo, \"(0,384)\" ); // write 8 rows (r) at a time for( int r = 0; r < 384/8; ++r ) { fprintf( fo, \"(%d 0 0 500 250 1)\", 8*r ); fprintf( fo, \"(%d 0 0 500 250 1)\", 8*r+1 ); fprintf( fo, \"(%d 0 0 500 250 1)\", 8*r+2 ); fprintf( fo, \"(%d 0 0 500 250 1)\", 8*r+3 ); fprintf( fo, \"(%d 1 0 500 250 1)\", 8*r+4 ); fprintf( fo, \"(%d 1 0 500 250 1)\", 8*r+5 ); fprintf( fo, \"(%d 1 0 500 250 1)\", 8*r+6 ); fprintf( fo, \"(%d 1 0 500 250 1)\", 8*r+7 ); } fprintf( fo, \"\\n\" ); fclose( fo ); } fin","title":"C Code: Type 0 Tetrodes"},{"location":"Help/Solder/solder/","text":"Noise: Learn How To Solder Overview Imec probes as shipped to you generally meet their noise specs: 6 uV RMS . Noise above that is in your own setup/environment. There are many possible sources of noise in the world, but all too often we have traced excessive noise to bad soldering of the reference or ground connections at (or near) the probe. Such effects can show up with a wide range of amplitudes and frequencies, but tend to be common to most channels. The probes are super sensitive differential voltage meters. A bad solder joint on the reference path will have high (possibly variable) resistance. This causes measurements to float and wander. Similarly, a poor connection of the amplifier ground causes unpredictable circuit performance. It is essential to make good wiring connections at the probe and at other points such as a skull screw. What to look for Following image unmodified and courtesy of Bill Earl, adafruit.com. Look at your connections! Do they honestly look alright? How to solder Read all the truly excellent instructions at adafruit.com: Guide To Excellent Soldering . We've added some emphasis and a few extra tips below. Tips Practice first : If you're at all nervous about doing this right, and who isn't?, then by all means practice soldering some wires or inexpensive resistors onto an old printed circuit board. Next extend your soldering practice to flex cable which doesn't heat as easily as standard printed circuit board. Use a dummy probe if you have one to spare. Get the hang of it first. Maybe somebody else in your lab is just better at it than you are. Make them do it. Buy them a beer after. Use the right wire : Use wire with adequate conductivity like copper or silver. Stainless steel, for example, does not conduct heat very well making it hard to wet with solder. Solder won't stick to it. Validate your choice using a scrap of that wire to see if heats and melts solder. Use the right solder : Lead is nasty, but quite honestly, you want to use solder with about a 60/40 ratio of tin/lead because it melts and flows at a low enough temperature to prevent damaging the probe. Use the right iron : Use an iron with settable temperature so you can get the joint hot enough but overheat it. Set it to about 700 F. Make sure the parts are clean : The pad, wire and tip of the iron should be free of oils, plastics or other contaminants. Tin the tip of the iron : (1) Clean the tip: Coat it with solder and immediately wipe it off again using the moistened sponge that comes with the solder station. The tip should look shiny and bright all over. (2) Melt a tiny fresh bead of solder onto the tip, just enough to get heat flowing when you touch it to the joint. Heat the joint, not the solder : Never drip molten solder onto a joint. Heat the joint up so solder flows onto and adheres to the joint as you touch it to the wires. Try not to touch the iron itself, that's cheating. However, sometimes you need to wet the tip a little better by adding a touch more of solder to the iron so it makes better contact. Get it hot enough : It's hot enough when touching solder to the wire makes it melt and flow easily. Yes the probe is expensive and the iron is hot. You'll be super nervous, but you still have to get the connection hot enough to flow the solder or your expensive probe will not work. Keep still while it cools : After removing the iron, the joint and solder will cool in 2 to 3 seconds. Don't move while it cools. If you disturb the work during those few seconds you'll diminish the contact surface area, hence, the conductivity of the joint. fin","title":"Noise: Learn How To Solder"},{"location":"Help/Solder/solder/#noise-learn-how-to-solder","text":"","title":"Noise: Learn How To Solder"},{"location":"Help/Solder/solder/#overview","text":"Imec probes as shipped to you generally meet their noise specs: 6 uV RMS . Noise above that is in your own setup/environment. There are many possible sources of noise in the world, but all too often we have traced excessive noise to bad soldering of the reference or ground connections at (or near) the probe. Such effects can show up with a wide range of amplitudes and frequencies, but tend to be common to most channels. The probes are super sensitive differential voltage meters. A bad solder joint on the reference path will have high (possibly variable) resistance. This causes measurements to float and wander. Similarly, a poor connection of the amplifier ground causes unpredictable circuit performance. It is essential to make good wiring connections at the probe and at other points such as a skull screw.","title":"Overview"},{"location":"Help/Solder/solder/#what-to-look-for","text":"Following image unmodified and courtesy of Bill Earl, adafruit.com. Look at your connections! Do they honestly look alright?","title":"What to look for"},{"location":"Help/Solder/solder/#how-to-solder","text":"Read all the truly excellent instructions at adafruit.com: Guide To Excellent Soldering . We've added some emphasis and a few extra tips below.","title":"How to solder"},{"location":"Help/Solder/solder/#tips","text":"Practice first : If you're at all nervous about doing this right, and who isn't?, then by all means practice soldering some wires or inexpensive resistors onto an old printed circuit board. Next extend your soldering practice to flex cable which doesn't heat as easily as standard printed circuit board. Use a dummy probe if you have one to spare. Get the hang of it first. Maybe somebody else in your lab is just better at it than you are. Make them do it. Buy them a beer after. Use the right wire : Use wire with adequate conductivity like copper or silver. Stainless steel, for example, does not conduct heat very well making it hard to wet with solder. Solder won't stick to it. Validate your choice using a scrap of that wire to see if heats and melts solder. Use the right solder : Lead is nasty, but quite honestly, you want to use solder with about a 60/40 ratio of tin/lead because it melts and flows at a low enough temperature to prevent damaging the probe. Use the right iron : Use an iron with settable temperature so you can get the joint hot enough but overheat it. Set it to about 700 F. Make sure the parts are clean : The pad, wire and tip of the iron should be free of oils, plastics or other contaminants. Tin the tip of the iron : (1) Clean the tip: Coat it with solder and immediately wipe it off again using the moistened sponge that comes with the solder station. The tip should look shiny and bright all over. (2) Melt a tiny fresh bead of solder onto the tip, just enough to get heat flowing when you touch it to the joint. Heat the joint, not the solder : Never drip molten solder onto a joint. Heat the joint up so solder flows onto and adheres to the joint as you touch it to the wires. Try not to touch the iron itself, that's cheating. However, sometimes you need to wet the tip a little better by adding a touch more of solder to the iron so it makes better contact. Get it hot enough : It's hot enough when touching solder to the wire makes it melt and flow easily. Yes the probe is expensive and the iron is hot. You'll be super nervous, but you still have to get the connection hot enough to flow the solder or your expensive probe will not work. Keep still while it cools : After removing the iron, the joint and solder will cool in 2 to 3 seconds. Don't move while it cools. If you disturb the work during those few seconds you'll diminish the contact surface area, hence, the conductivity of the joint. fin","title":"Tips"},{"location":"Help/SyncEdges/Sync_edges/","text":"Sync: Aligning with Edges Document organization: General principles Needed components and their use Worked example showing command line parameters Plug for scripted pipeline Overview Definition : SpikeGLX Data Stream = Set of channels sampled according to a given sample clock. Examples of streams: Neuropixels probe . The sample clock lives in the headstage . The AP-band data are acquired at nominally 30kHz but actual rates may differ by as much as one Hz. If that probe acquires a separate LF-band, the same clock is used and the LF-band sample rate is exactly 1/12 that of the AP-band. In short each probe, really each headstage, is a separate stream. Onebox ADC channels : An imec Onebox can record from several probes, each of which is a stream, and it can record several analog and digital non-neural channels at ~30303Hz, which we also regard as a stream. This gets its own obx file type. NI device : You can use a NI multifunction/multichannel device to record your non-neural analog and digital (TTL) channels. You'll have several options for setting its sample rate. This is one stream. Actually SpikeGLX lets you run two NI devices of the same model together, one master and one slave, so that they share a common clock, and are thus recorded and treated as a single stream with double the channel capacity. Problem : Generally, data streams each have their own clock, hence, their own nominal sample rate, and run asynchronously. Moreover, sample clock rates will vary with temperature. This makes it necessary and challenging to synchronize (align) events acquired in different streams. Solution : SpikeGLX (plus companion tools CatGT and TPrime ) provide a reliable means of aligning data to sub-millisecond accuracy. Note that the SpikeGLX \"alignment\" process does not entail any resampling or editing of the raw acquired data. Rather it is a scheme for mapping post-analysis event times (seconds, not samples) from one coordinate system to another. This mapping scheme is implemented as follows. A common 1 Hz square wave is recorded in one channel of each data stream throughout the experiment. In offline processing, the rising edges in this \" sync wave \" are paired across streams A & B. Any event (T) occurring in B is no more than one second away from a nearest (preceding) sync wave edge (Eb) in stream B. That edge has a simultaneously occurring matching edge (Ea) in stream A. To map T in stream B to T' in stream A, we simply calculate: T' = T - Eb + Ea. Assuming we can correctly pair sync wave edges, the error on any mapped time is bounded by [1s * rate_error/rate]. For example, if the nominal probe sample rate is 30kHz and the error in that value is 3Hz, then the error in the mapped time would be 0.1ms. Rate error arises when we do not know the actual clock rate. The two largest sources of error are (1) bad/unknown calibration (the largest difference from 30kHz we've seen post calibration is 1Hz), and (2) temperature variation, which we measure to be very small near room temperature: < 0.01Hz/5C. So mapping errors after application of TPrime are typically smaller than 0.1ms. Briefly, the sync-related roles of various components are the following, listed in the order you would organize your workflow: SpikeGLX : Calibrate sample rates Recalibrate rates from run Generate and record runtime sync wave CatGT : Extract tables of sync wave edges Extract tables of non-neural event times Your_favorite_spike_sorter : Extract tables of spike times TPrime : Remap all tables of times to reference stream coordinates The remaining sections cover some how-to tips. SpikeGLX: Clock calibration Do I need it? Calibrating your clocks is useful for these reasons: It's a test of headstage health. The measured rate shouldn't be more than 1Hz different than 30kHz, and if you repeat the measurement, it should remain stable to < 0.1Hz. TPrime should also be used if you plan to publish claims about timing. But if you are just browsing in the FileViewer or eyeballing PSTH plots to roughly see how things line up without the bother of running TPrime, that will work better if all clocks are at least calibrated. TPrime needs to be able to identify pairs of matching edges. If the recorded times of edges in the sync wave are a second or more off, the adjustment may suffer phase error. This could be a problem in a long run where error is cumulative. To estimate the duration, consider that an uncalibrated clock could run as much as 1Hz differently than 30kHz. Then a problem will occur at time T, where 1Hz * T = 30000 or T = 8.3 hours. How to Using the Sync tab in the Configuration dialog, you: select a sync wave source specify for each stream which channels are getting sync wave input check Use next run for calibration (and select a run-length) This configures a special purpose run and does a post-run analysis to count how many samples are actually occurring between edges of the sync wave, and thereby deduces the true sample rate. It reports its results in a dialog for you to accept or reject. If accepted these become saved in a database and are used for subsequent runs of those hardware devices until you decide to do another calibration. Tips You probably don't need to calibrate a given device more than once, but you might as well get a good measurement for that one time. We recommend setting the calibration data collection time to 40 min . SpikeGLX: Recalibration Conditions Even if you never calibrated your sample clocks before, you can still calibrate them after the fact from existing run data if: You were recording the sync wave in each stream you want to calibrate. The run is long enough to get a reasonable estimate, at least 20 min. How to To do this, choose item Sample Rates From Run from the Tools menu and follow the instructions in the dialog. As with a first-time calibration it will show you results that you can accept or not. If you accept you can further choose whether to edit this run's metadata, and whether to update the database and use the new rates going forward. The dialog won't let you select imec LF-band files because their time resolution is too low. Rather, select the partner AP-band file. Both AP and LF metadata will be updated together. Note that the LF rate is exactly 1/12 the AP rate. SpikeGLX: Run with sync How to It's easy to do a run that records the sync waveform. Specify a source/generator of the common sync waveform. You have several options: Select any one of the imec slots. Select your NI multifunction I/O device (SpikeGLX programs its output). Use your own signal generator. Set it for 1 Hz and 50% duty cycle. Feed wires from the source to one channel in each stream. For the PXI based versions, all of the imec modules share the sync signal using the chassis backplane, so only one slot (module) needs a wire connected to its SMA connector, whether it is specified as input or output (source). So you connect a wire to just one (active) module, and all imec probes will automatically record the sync wave. If NI is the source, the Notes field indicates which output terminal to connect. Tell the Sync tab which channels you wired so SpikeGLX can locate the waveform in each stream. For NP 1.0 and later, this signal is hard wired to appear on bit #6 of the last 16-bit word in the stream, the SY channel. File T-zero and length When you are running with sync enabled on the Sync tab, whenever a file-writing trigger event occurs and a new set of files is started, SpikeGLX internally uses the edges to make sure that the files all start at a common wall time. Each file's metadata records the sample index number of the first sample in that file: firstSample . These samples are aligned to each other. Said another way, the files share a common T0. While long files are being written, their alignment may slowly degrade because they are running and recording according to their own clock rates. If the clocks have been calibrated this drift will be a bit smaller, but nothing happens during writing to \"reset\" the alignment. Doing that would entail interpolating or resampling of data, which we do not do. (Note that TPrime corrects times by referencing times to sync edges no matter how long the file is. It's effectively like getting periodic resets throughout the run.) The writing phase for a given set of files (given g, t index) ends when a stop event occurs. Perhaps a writing timer elapses, or a TTL trigger gets a stop signal, or you click the Disable or Stop button. Any such event stops all the streams and closes the files, but the \"right-hand-side\" or \"trailing edges\" of the files are not guaranteed to be perfectly aligned. The files are often quite close to being the same length (metadata item fileTimeSecs ), but this is not controlled. CatGT: Event extraction CatGT can perform several post-processing jobs, singly or in combination: Concatenate a g/t-series of separate trial files (whence the name). Apply tshift, band-pass and CAR filters to neural channels. Edit out saturation artifacts. Extract tables of sync waveform edge times to drive TPrime. Extract tables of any other TTL event times to be aligned with spikes. The extraction features are discussed here. General Starting with version 3.0, CatGT extracts sync edges from all streams by default, unless you specify the -no_auto_sync option (see below). There are five extractors for scanning and decoding nonneural data channels in any data stream. They differ in the data types they operate upon: xa: Finds positive pulses in any analog channel. xd: Finds positive pulses in any digital channel. xia: Finds inverted pulses in any analog channel. xid: Finds inverted pulses in any digital channel. bf: Decodes positive bitfields in any digital channel. The first three parameters of any extractor specify the stream-type, stream-index and channel (16-bit word) to operate on, E.g.: -xa= js,ip,word , <additional parameters> Extractors js (stream-type): NI : js = 0 (any extractor). OB : js = 1 (any extractor). AP : js = 2 (only {xd, xid} are legal). *Extractors do not work on LF files. Use the AP-band for sync and event extraction: the higher sample rate improves accuracy.* Extractors ip (stream-index) NI : ip = 0 (there is only one NI stream). OB : ip = 0 selects obx0, ip = 7 selects obx7, etc. AP : ip = 0 selects imec0, ip = 7 selects imec7, etc. Extractors word Word is a zero-based channel index. It selects the 16-bit data word to process. word = -1, selects the last word in that stream. That's especially useful to specify the SY word at the end of a OneBox or probe stream. It can also be used for NI streams as shorthand for a trailing digital word. It may be helpful to review the organization of words and bits in data streams in the SpikeGLX User Manual . Extractors positive pulse starts at low baseline (below threshold) has a leading/rising edge (crosses above threshold) (optionally) stays high/deflected for a given duration has a trailing/falling edge (crosses below threshold) Digital TTL signals are in the range [0,5] V, so for the xd case, positive pulses are inherently non-negative. The xa extractor looks for rising edges and it works regardless of the baseline level of the pulse. The two threshold value can be positive or negative. The positive pulse extractors {xa, xd} make text files that report the times (seconds) of the leading edges of matched pulses. Extractors xa Following -xa=js,ip,word , these parameters are required: Primary threshold-1 (V). Optional more stringent threshold-2 (V). Milliseconds duration. If your signal looks like clean square pulses, set threshold-2 to be closer to baseline than threshold-1 to ignore the threshold-2 level and run more efficiently. For noisy signals or for non-square pulses set threshold-2 to be farther from baseline than theshold-1 to ensure pulses attain a desired deflection amplitude. Using two separate threshold levels allows detecting the earliest time that pulse departs from baseline (threshold-1) and separately testing that the deflection is great enough to be considered a real event and not noise (threshold-2). See Fig. 1. Extractors xd Following -xd=js,ip,word , these parameters are required: Index of the bit in the word. Milliseconds duration. Extractors both xa and xd All indexing is zero-based. Milliseconds duration means the signal must remain deflected from baseline for that long. Milliseconds duration can be zero to specify detection of all leading edges regardless of pulse duration. Milliseconds duration default precision (tolerance) is +/- 20% . Default tolerance can be overridden by appending it in milliseconds as the last parameter for that extractor. Each extractor can have its own tolerance. E.g., -xd=js,ip,word,bit,100 seeks pulses with duration in default range [80,120] ms. * E.g., -xd=js,ip,word,bit,100,2 seeks pulses with duration in specified range [98,102] ms. A given channel or even bit could encode two or more types of pulse that have different durations, e.g., -xd=0,0,8,0,10 -xd=0,0,8,0,20 scans and reports both 10 and 20 ms pulses on the same line. Each option, say -xd=2,0,384,6,500 , creates an output file whose name reflects the parameters, e.g., run_name_g0_tcat.imec0.ap.xd_384_6_500.txt . The threshold is not encoded in the -xa filename; just word and milliseconds. The -save and -sepShanks options can create new neural binaries derived from a parent probe with index ip1, and these new files are labeled by your provided ip2 indices. However, extraction of nonneural events is performed only on the parent ip1 files. For example, you might split a four-shank probe {0} into four separate shank files {1000,1001,1002,1003} using -sepShanks=0,1000,1001,1002,1003 . The output will contain a single file of extracted sync edges, named for probe-0. The derived neural files all share the same nonneural data so the extractor output files are not replicated. Rather, the fyi file has path entries that connect each derived ip2 index with the parent ip1 extractor output file. The run_ga_fyi.txt file lists the full paths of generated extractor output files. It also lists which extractor files go with any derived (ip2) neural file indices. The files report the times (s) of leading edges of detected pulses; one time per line, \\n line endings. The time is relative to the start of the stream in which the pulse is detected (native time). Extractors inverted pulse starts at high baseline (above threshold) has a leading/falling edge (crosses below threshold) (optionally) stays low/deflected for a given duration has a trailing/rising edge (crosses above threshold) Digital TTL signals are in the range [0,5] V, so for the xid case, inverted pulses are still entiely non-negative. The xia extractor looks for falling edges and it works regardless of the baseline level of the pulse. The two threshold value can be positive or negative. The inverted pulse extractors {xia, xid} make text files that report the times (seconds) of the leading edges of matched pulses. The inverted pulse versions work exactly the same way as their positive counterparts. Just keep in mind that inverted pulses have a high baseline level and deflect toward lower values. Extractors bf (bit-field) The -xd and -xid options treat each bit of a digital word as an individual line. In contrast, the -bf option interprets a contiguous group of bits as a non-negative n-bit binary number. The -bf extractor reports value transitions: the newest value and the time it changed, in two separate files. Following -xa=js,ip,word , the parameters are: startbit : lowest order bit included in group (range [0..15]), nbits : how many bits belong to group (range [1..<16-startbit>]). inarow : a real value has to persist this many samples in a row (1 or higher). In the following examples we set inarow=3: To interpret all 16 bits of NI word 5 as a number, set -bf=0,0,5,0,16,3. To interpret the high-byte as a number, set -bf=0,0,5,8,8,3. To interpret bits {3,4,5,6} as a four-bit value, set -bf=0,0,5,3,4,3. You can specify multiple -bf options on the same command line. The words and bits can overlap. Each -bf option generates two output files, named according to the parameters (excluding inarow), for example: run_name_g0_tcat.nidq.bfv_5_3_4.txt . run_name_g0_tcat.nidq.bft_5_3_4.txt , The two files have paired entries. The bfv file contains the decoded values, and the bft file contains the time (seconds from file start) that the field switched to that value. Extractors inarow option The pulse extractors {xa,xd,xia,xid} use edge detection. By default, when a signal crosses from low to high, it is required to stay high for at least 5 samples. Similarly, when crossing from high to low the signal is required to stay low for at least 5 samples. This requirement is applied even when specifying a pulse duration of zero, that is, it is applied to any edge. This is done to guard against noise. You can override the count giving any value >= 1. Extractors no_auto_sync option Starting with version 3.0, CatGT automatically extracts sync edges from all streams unless you turn that off using -no_auto_sync . For an NI stream, CatGT reads the metadata to see which analog or digital word contains the sync waveform and builds the corresponding extractor for you, either -xa=0,0,word,thresh,0,500 or -xd=0,0,word,bit,500 . For OB and AP streams, CatGT seeks edges in bit #6 of the SY word, as if you had specified -xd=1,ip,-1,6,500 and/or -xd=2,ip,-1,6,500 . TPrime: Remapping General After recording, spike sorting, TTL extraction...Now you need to convert all these times from the native timelines of the data streams in which they were measured to a common reference timeline. That's the only way you can compare them! That's what TPrime does. TPrime uses three types of files: tostream : The reference stream we will map to. It is defined by a file of sync wave edges as extracted by CatGT. There is only one of these. fromstream : A native stream we will map from. There can be several of these. A fromstream is identified by a file of sync wave edges extracted by CatGT, and, an arbitrary positive integer that is a shorthand for that stream, just so you don't have to type the edge-file-path over and over. events file : These are times you want to convert. Typically you will have a different file for every event class, such as all the spikes from probe zero, or all the nose_poke times from the NI stream. On the command line for each such file you will specify the stream index for the matching fromstream, an input file of native times, a new file path for the output times. Events files Key specs for events files: Input and output file type can be .txt or .npy (Kilosort). You can mix types: txt in, npy out, etc. Times are seconds, they are not sample numbers . Times are relative to the start of the file. Times are in ascending order. Worked example Outline Here we'll show actual command lines for CatGT and TPrime. We'll use a very simple contrived experiment for concreteness. Two probes {0,1}. Two non-neural NI signals {go_cue, nose_poke}. SpikeGLX settings We focus here on SpikeGLX settings relevant to the CatGT/TPrime command lines... Imec Setup tab: (probe 0) :: Save chans : 0-49,200-249,768 ; 2 blocks of 50 channels + SY (probe 1) :: Save chans : all NI Setup tab: Primary device :: XA box: 0 ; go_cue as analog just to demonstrate Primary device :: XD box: 2,3 ; 2=nose_poke, 3=sync Common analog :: AI range : -5, 5 Maps :: Channels to save : all Sync tab: Square wave source :: Imec slot 3 Inputs :: Nidq : Digital bit, 3 Triggers tab Trigger mode : Immediate start ; single file, record upon button press Save tab: Run naming :: Data directory :: D:/Data Run naming :: Run name : demo Run naming :: Folder per probe : checked SpikeGLX output D:/data/ ; data folder demo/ ; run folder demo_g0_imec0/ ; probe folder demo_g0_t0.imec0.ap.bin demo_g0_t0.imec0.ap.meta demo_g0_t0.imec0.lf.bin demo_g0_t0.imec0.lf.meta demo_g0_imec1/ ; probe folder demo_g0_t0.imec1.ap.bin demo_g0_t0.imec1.ap.meta demo_g0_t0.imec1.lf.bin demo_g0_t0.imec1.lf.meta demo_g0_t0.nidq.bin ; ni at top of run folder demo_g0_t0.nidq.meta CatGT command line I broke the line into several groups using continuation characters (^) but doing so is aesthetic only. The comments (;) must not appear in real commands. IMPORTANT : In real command lines there should be NO extra spaces inserted into the text of options, NOR following a caret (^) character. > CatGT ^ -dir=D:/data -run=demo -prb_fld ^ ; run naming -g=0 -t=0,0 ^ ; g and t range -ap -prb=0,1 -ni ^ ; which streams -apfilter=butter,12,300,9000 ^ ; filters -xa=0,0,0,1.1,0,25 ^ ; go_cue = 25 ms square pulse -xd=0,0,1,2,0 ^ ; nose_poke duration unknown -dest=D:/CGT_OUT ^ ; let's put output in new place -out_prb_fld ; and use an output folder per probe CatGT output D:/CGT_OUT/ ; master output folder catgt_demo_g0/ ; run output folder demo_g0_imec0/ ; probe folder demo_g0_tcat.imec0.ap.bin ; filtered data for KS2 demo_g0_tcat.imec0.ap.meta demo_g0_tcat.imec0.ap.xd_100_6_500.txt ; sync edges demo_g0_imec1/ ; probe folder demo_g0_tcat.imec1.ap.bin ; filtered data for KS2 demo_g0_tcat.imec1.ap.meta demo_g0_tcat.imec1.ap.xd_384_6_500.txt ; sync edges demo_g0_tcat.nidq.xa_0_25.txt ; go_cue demo_g0_tcat.nidq.xd_1_2_0.txt ; nose_poke demo_g0_tcat.nidq.xd_1_3_500.txt ; sync edges Kilosort 2 output Suppose we tell KS2 to put its output into the same folders as the CatGT output. Of course we run KS2 once for each probe. The output from KS2 is then: D:/CGT_OUT/ ; master output folder catgt_demo_g0/ ; run output folder demo_g0_imec0/ ; probe folder amplitudes.npy channel_map.npy ... spike_times.npy ; this is in samples ... whitening_mat_inv.npy demo_g0_imec1/ ; probe folder amplitudes.npy channel_map.npy ... spike_times.npy ; this is in samples ... whitening_mat_inv.npy Samples to times Most spike sorters report spike times as sample indices so we'll need our own mini program to convert those to times in seconds. The program: Loads array spike_times.npy . Parses value imSampRate from the metadata file. Divides the rate into each array element. Writes the times out in same folder as spike_seconds.npy . Metadata parsers are available here . IMPORTANT: npy files usually store the values as doubles which preserves full numeric precision. Whenever you are saving clock rates or event times as text, be sure to write the values to microsecond-level precision. Keep six digits in the fractional part. TPrime command line Let's map all times to probe-0: > TPrime -syncperiod=1.0 ^ -tostream=D:/CGT_OUT/catgt_demo_g0/demo_g0_imec0/demo_g0_tcat.imec0.ap.xd_100_6_500.txt ^ -fromstream=1,D:/CGT_OUT/catgt_demo_g0/demo_g0_imec1/demo_g0_tcat.imec1.ap.xd_384_6_500.txt ^ -fromstream=2,D:/CGT_OUT/catgt_demo_g0/demo_g0_tcat.nidq.xd_1_3_500.txt ^ -events=1,D:/CGT_OUT/catgt_demo_g0/demo_g0_imec1/spike_seconds.npy,D:/CGT_OUT/catgt_demo_g0/demo_g0_imec1/spike_seconds_adj.npy ^ -events=2,D:/CGT_OUT/catgt_demo_g0/demo_g0_tcat.nidq.xa_0_25.txt,D:/CGT_OUT/catgt_demo_g0/go_cue.txt ^ -events=2,D:/CGT_OUT/catgt_demo_g0/demo_g0_tcat.nidq.xd_1_2_0.txt,D:/CGT_OUT/catgt_demo_g0/nose_poke.txt Scripted pipeline It can be daunting to get all these command lines correct. You might want to check out Jennifer Colonell's version of the Allen Institute ecephys_spike_sorting pipeline. This Python script-driven pipeline chains together: CatGT, KS2, Noise Cluster Tagging, C_Waves, QC metrics, TPrime. It's been tested a lot here at Janelia and several other institutions. fin","title":"Sync: Aligning with Edges"},{"location":"Help/SyncEdges/Sync_edges/#sync-aligning-with-edges","text":"Document organization: General principles Needed components and their use Worked example showing command line parameters Plug for scripted pipeline","title":"Sync: Aligning with Edges"},{"location":"Help/SyncEdges/Sync_edges/#overview","text":"Definition : SpikeGLX Data Stream = Set of channels sampled according to a given sample clock. Examples of streams: Neuropixels probe . The sample clock lives in the headstage . The AP-band data are acquired at nominally 30kHz but actual rates may differ by as much as one Hz. If that probe acquires a separate LF-band, the same clock is used and the LF-band sample rate is exactly 1/12 that of the AP-band. In short each probe, really each headstage, is a separate stream. Onebox ADC channels : An imec Onebox can record from several probes, each of which is a stream, and it can record several analog and digital non-neural channels at ~30303Hz, which we also regard as a stream. This gets its own obx file type. NI device : You can use a NI multifunction/multichannel device to record your non-neural analog and digital (TTL) channels. You'll have several options for setting its sample rate. This is one stream. Actually SpikeGLX lets you run two NI devices of the same model together, one master and one slave, so that they share a common clock, and are thus recorded and treated as a single stream with double the channel capacity. Problem : Generally, data streams each have their own clock, hence, their own nominal sample rate, and run asynchronously. Moreover, sample clock rates will vary with temperature. This makes it necessary and challenging to synchronize (align) events acquired in different streams. Solution : SpikeGLX (plus companion tools CatGT and TPrime ) provide a reliable means of aligning data to sub-millisecond accuracy. Note that the SpikeGLX \"alignment\" process does not entail any resampling or editing of the raw acquired data. Rather it is a scheme for mapping post-analysis event times (seconds, not samples) from one coordinate system to another. This mapping scheme is implemented as follows. A common 1 Hz square wave is recorded in one channel of each data stream throughout the experiment. In offline processing, the rising edges in this \" sync wave \" are paired across streams A & B. Any event (T) occurring in B is no more than one second away from a nearest (preceding) sync wave edge (Eb) in stream B. That edge has a simultaneously occurring matching edge (Ea) in stream A. To map T in stream B to T' in stream A, we simply calculate: T' = T - Eb + Ea. Assuming we can correctly pair sync wave edges, the error on any mapped time is bounded by [1s * rate_error/rate]. For example, if the nominal probe sample rate is 30kHz and the error in that value is 3Hz, then the error in the mapped time would be 0.1ms. Rate error arises when we do not know the actual clock rate. The two largest sources of error are (1) bad/unknown calibration (the largest difference from 30kHz we've seen post calibration is 1Hz), and (2) temperature variation, which we measure to be very small near room temperature: < 0.01Hz/5C. So mapping errors after application of TPrime are typically smaller than 0.1ms. Briefly, the sync-related roles of various components are the following, listed in the order you would organize your workflow: SpikeGLX : Calibrate sample rates Recalibrate rates from run Generate and record runtime sync wave CatGT : Extract tables of sync wave edges Extract tables of non-neural event times Your_favorite_spike_sorter : Extract tables of spike times TPrime : Remap all tables of times to reference stream coordinates The remaining sections cover some how-to tips.","title":"Overview"},{"location":"Help/SyncEdges/Sync_edges/#spikeglx-clock-calibration","text":"","title":"SpikeGLX: Clock calibration"},{"location":"Help/SyncEdges/Sync_edges/#do-i-need-it","text":"Calibrating your clocks is useful for these reasons: It's a test of headstage health. The measured rate shouldn't be more than 1Hz different than 30kHz, and if you repeat the measurement, it should remain stable to < 0.1Hz. TPrime should also be used if you plan to publish claims about timing. But if you are just browsing in the FileViewer or eyeballing PSTH plots to roughly see how things line up without the bother of running TPrime, that will work better if all clocks are at least calibrated. TPrime needs to be able to identify pairs of matching edges. If the recorded times of edges in the sync wave are a second or more off, the adjustment may suffer phase error. This could be a problem in a long run where error is cumulative. To estimate the duration, consider that an uncalibrated clock could run as much as 1Hz differently than 30kHz. Then a problem will occur at time T, where 1Hz * T = 30000 or T = 8.3 hours.","title":"Do I need it?"},{"location":"Help/SyncEdges/Sync_edges/#how-to","text":"Using the Sync tab in the Configuration dialog, you: select a sync wave source specify for each stream which channels are getting sync wave input check Use next run for calibration (and select a run-length) This configures a special purpose run and does a post-run analysis to count how many samples are actually occurring between edges of the sync wave, and thereby deduces the true sample rate. It reports its results in a dialog for you to accept or reject. If accepted these become saved in a database and are used for subsequent runs of those hardware devices until you decide to do another calibration.","title":"How to"},{"location":"Help/SyncEdges/Sync_edges/#tips","text":"You probably don't need to calibrate a given device more than once, but you might as well get a good measurement for that one time. We recommend setting the calibration data collection time to 40 min .","title":"Tips"},{"location":"Help/SyncEdges/Sync_edges/#spikeglx-recalibration","text":"","title":"SpikeGLX: Recalibration"},{"location":"Help/SyncEdges/Sync_edges/#conditions","text":"Even if you never calibrated your sample clocks before, you can still calibrate them after the fact from existing run data if: You were recording the sync wave in each stream you want to calibrate. The run is long enough to get a reasonable estimate, at least 20 min.","title":"Conditions"},{"location":"Help/SyncEdges/Sync_edges/#how-to_1","text":"To do this, choose item Sample Rates From Run from the Tools menu and follow the instructions in the dialog. As with a first-time calibration it will show you results that you can accept or not. If you accept you can further choose whether to edit this run's metadata, and whether to update the database and use the new rates going forward. The dialog won't let you select imec LF-band files because their time resolution is too low. Rather, select the partner AP-band file. Both AP and LF metadata will be updated together. Note that the LF rate is exactly 1/12 the AP rate.","title":"How to"},{"location":"Help/SyncEdges/Sync_edges/#spikeglx-run-with-sync","text":"","title":"SpikeGLX: Run with sync"},{"location":"Help/SyncEdges/Sync_edges/#how-to_2","text":"It's easy to do a run that records the sync waveform. Specify a source/generator of the common sync waveform. You have several options: Select any one of the imec slots. Select your NI multifunction I/O device (SpikeGLX programs its output). Use your own signal generator. Set it for 1 Hz and 50% duty cycle. Feed wires from the source to one channel in each stream. For the PXI based versions, all of the imec modules share the sync signal using the chassis backplane, so only one slot (module) needs a wire connected to its SMA connector, whether it is specified as input or output (source). So you connect a wire to just one (active) module, and all imec probes will automatically record the sync wave. If NI is the source, the Notes field indicates which output terminal to connect. Tell the Sync tab which channels you wired so SpikeGLX can locate the waveform in each stream. For NP 1.0 and later, this signal is hard wired to appear on bit #6 of the last 16-bit word in the stream, the SY channel.","title":"How to"},{"location":"Help/SyncEdges/Sync_edges/#file-t-zero-and-length","text":"When you are running with sync enabled on the Sync tab, whenever a file-writing trigger event occurs and a new set of files is started, SpikeGLX internally uses the edges to make sure that the files all start at a common wall time. Each file's metadata records the sample index number of the first sample in that file: firstSample . These samples are aligned to each other. Said another way, the files share a common T0. While long files are being written, their alignment may slowly degrade because they are running and recording according to their own clock rates. If the clocks have been calibrated this drift will be a bit smaller, but nothing happens during writing to \"reset\" the alignment. Doing that would entail interpolating or resampling of data, which we do not do. (Note that TPrime corrects times by referencing times to sync edges no matter how long the file is. It's effectively like getting periodic resets throughout the run.) The writing phase for a given set of files (given g, t index) ends when a stop event occurs. Perhaps a writing timer elapses, or a TTL trigger gets a stop signal, or you click the Disable or Stop button. Any such event stops all the streams and closes the files, but the \"right-hand-side\" or \"trailing edges\" of the files are not guaranteed to be perfectly aligned. The files are often quite close to being the same length (metadata item fileTimeSecs ), but this is not controlled.","title":"File T-zero and length"},{"location":"Help/SyncEdges/Sync_edges/#catgt-event-extraction","text":"CatGT can perform several post-processing jobs, singly or in combination: Concatenate a g/t-series of separate trial files (whence the name). Apply tshift, band-pass and CAR filters to neural channels. Edit out saturation artifacts. Extract tables of sync waveform edge times to drive TPrime. Extract tables of any other TTL event times to be aligned with spikes. The extraction features are discussed here.","title":"CatGT: Event extraction"},{"location":"Help/SyncEdges/Sync_edges/#general","text":"Starting with version 3.0, CatGT extracts sync edges from all streams by default, unless you specify the -no_auto_sync option (see below). There are five extractors for scanning and decoding nonneural data channels in any data stream. They differ in the data types they operate upon: xa: Finds positive pulses in any analog channel. xd: Finds positive pulses in any digital channel. xia: Finds inverted pulses in any analog channel. xid: Finds inverted pulses in any digital channel. bf: Decodes positive bitfields in any digital channel. The first three parameters of any extractor specify the stream-type, stream-index and channel (16-bit word) to operate on, E.g.: -xa= js,ip,word , <additional parameters>","title":"General"},{"location":"Help/SyncEdges/Sync_edges/#extractors-js-stream-type","text":"NI : js = 0 (any extractor). OB : js = 1 (any extractor). AP : js = 2 (only {xd, xid} are legal). *Extractors do not work on LF files. Use the AP-band for sync and event extraction: the higher sample rate improves accuracy.*","title":"Extractors js (stream-type):"},{"location":"Help/SyncEdges/Sync_edges/#extractors-ip-stream-index","text":"NI : ip = 0 (there is only one NI stream). OB : ip = 0 selects obx0, ip = 7 selects obx7, etc. AP : ip = 0 selects imec0, ip = 7 selects imec7, etc.","title":"Extractors ip (stream-index)"},{"location":"Help/SyncEdges/Sync_edges/#extractors-word","text":"Word is a zero-based channel index. It selects the 16-bit data word to process. word = -1, selects the last word in that stream. That's especially useful to specify the SY word at the end of a OneBox or probe stream. It can also be used for NI streams as shorthand for a trailing digital word. It may be helpful to review the organization of words and bits in data streams in the SpikeGLX User Manual .","title":"Extractors word"},{"location":"Help/SyncEdges/Sync_edges/#extractors-positive-pulse","text":"starts at low baseline (below threshold) has a leading/rising edge (crosses above threshold) (optionally) stays high/deflected for a given duration has a trailing/falling edge (crosses below threshold) Digital TTL signals are in the range [0,5] V, so for the xd case, positive pulses are inherently non-negative. The xa extractor looks for rising edges and it works regardless of the baseline level of the pulse. The two threshold value can be positive or negative. The positive pulse extractors {xa, xd} make text files that report the times (seconds) of the leading edges of matched pulses.","title":"Extractors positive pulse"},{"location":"Help/SyncEdges/Sync_edges/#extractors-xa","text":"Following -xa=js,ip,word , these parameters are required: Primary threshold-1 (V). Optional more stringent threshold-2 (V). Milliseconds duration. If your signal looks like clean square pulses, set threshold-2 to be closer to baseline than threshold-1 to ignore the threshold-2 level and run more efficiently. For noisy signals or for non-square pulses set threshold-2 to be farther from baseline than theshold-1 to ensure pulses attain a desired deflection amplitude. Using two separate threshold levels allows detecting the earliest time that pulse departs from baseline (threshold-1) and separately testing that the deflection is great enough to be considered a real event and not noise (threshold-2). See Fig. 1.","title":"Extractors xa"},{"location":"Help/SyncEdges/Sync_edges/#extractors-xd","text":"Following -xd=js,ip,word , these parameters are required: Index of the bit in the word. Milliseconds duration.","title":"Extractors xd"},{"location":"Help/SyncEdges/Sync_edges/#extractors-both-xa-and-xd","text":"All indexing is zero-based. Milliseconds duration means the signal must remain deflected from baseline for that long. Milliseconds duration can be zero to specify detection of all leading edges regardless of pulse duration. Milliseconds duration default precision (tolerance) is +/- 20% . Default tolerance can be overridden by appending it in milliseconds as the last parameter for that extractor. Each extractor can have its own tolerance. E.g., -xd=js,ip,word,bit,100 seeks pulses with duration in default range [80,120] ms. * E.g., -xd=js,ip,word,bit,100,2 seeks pulses with duration in specified range [98,102] ms. A given channel or even bit could encode two or more types of pulse that have different durations, e.g., -xd=0,0,8,0,10 -xd=0,0,8,0,20 scans and reports both 10 and 20 ms pulses on the same line. Each option, say -xd=2,0,384,6,500 , creates an output file whose name reflects the parameters, e.g., run_name_g0_tcat.imec0.ap.xd_384_6_500.txt . The threshold is not encoded in the -xa filename; just word and milliseconds. The -save and -sepShanks options can create new neural binaries derived from a parent probe with index ip1, and these new files are labeled by your provided ip2 indices. However, extraction of nonneural events is performed only on the parent ip1 files. For example, you might split a four-shank probe {0} into four separate shank files {1000,1001,1002,1003} using -sepShanks=0,1000,1001,1002,1003 . The output will contain a single file of extracted sync edges, named for probe-0. The derived neural files all share the same nonneural data so the extractor output files are not replicated. Rather, the fyi file has path entries that connect each derived ip2 index with the parent ip1 extractor output file. The run_ga_fyi.txt file lists the full paths of generated extractor output files. It also lists which extractor files go with any derived (ip2) neural file indices. The files report the times (s) of leading edges of detected pulses; one time per line, \\n line endings. The time is relative to the start of the stream in which the pulse is detected (native time).","title":"Extractors both xa and xd"},{"location":"Help/SyncEdges/Sync_edges/#extractors-inverted-pulse","text":"starts at high baseline (above threshold) has a leading/falling edge (crosses below threshold) (optionally) stays low/deflected for a given duration has a trailing/rising edge (crosses above threshold) Digital TTL signals are in the range [0,5] V, so for the xid case, inverted pulses are still entiely non-negative. The xia extractor looks for falling edges and it works regardless of the baseline level of the pulse. The two threshold value can be positive or negative. The inverted pulse extractors {xia, xid} make text files that report the times (seconds) of the leading edges of matched pulses. The inverted pulse versions work exactly the same way as their positive counterparts. Just keep in mind that inverted pulses have a high baseline level and deflect toward lower values.","title":"Extractors inverted pulse"},{"location":"Help/SyncEdges/Sync_edges/#extractors-bf-bit-field","text":"The -xd and -xid options treat each bit of a digital word as an individual line. In contrast, the -bf option interprets a contiguous group of bits as a non-negative n-bit binary number. The -bf extractor reports value transitions: the newest value and the time it changed, in two separate files. Following -xa=js,ip,word , the parameters are: startbit : lowest order bit included in group (range [0..15]), nbits : how many bits belong to group (range [1..<16-startbit>]). inarow : a real value has to persist this many samples in a row (1 or higher). In the following examples we set inarow=3: To interpret all 16 bits of NI word 5 as a number, set -bf=0,0,5,0,16,3. To interpret the high-byte as a number, set -bf=0,0,5,8,8,3. To interpret bits {3,4,5,6} as a four-bit value, set -bf=0,0,5,3,4,3. You can specify multiple -bf options on the same command line. The words and bits can overlap. Each -bf option generates two output files, named according to the parameters (excluding inarow), for example: run_name_g0_tcat.nidq.bfv_5_3_4.txt . run_name_g0_tcat.nidq.bft_5_3_4.txt , The two files have paired entries. The bfv file contains the decoded values, and the bft file contains the time (seconds from file start) that the field switched to that value.","title":"Extractors bf (bit-field)"},{"location":"Help/SyncEdges/Sync_edges/#extractors-inarow-option","text":"The pulse extractors {xa,xd,xia,xid} use edge detection. By default, when a signal crosses from low to high, it is required to stay high for at least 5 samples. Similarly, when crossing from high to low the signal is required to stay low for at least 5 samples. This requirement is applied even when specifying a pulse duration of zero, that is, it is applied to any edge. This is done to guard against noise. You can override the count giving any value >= 1.","title":"Extractors inarow option"},{"location":"Help/SyncEdges/Sync_edges/#extractors-no_auto_sync-option","text":"Starting with version 3.0, CatGT automatically extracts sync edges from all streams unless you turn that off using -no_auto_sync . For an NI stream, CatGT reads the metadata to see which analog or digital word contains the sync waveform and builds the corresponding extractor for you, either -xa=0,0,word,thresh,0,500 or -xd=0,0,word,bit,500 . For OB and AP streams, CatGT seeks edges in bit #6 of the SY word, as if you had specified -xd=1,ip,-1,6,500 and/or -xd=2,ip,-1,6,500 .","title":"Extractors no_auto_sync option"},{"location":"Help/SyncEdges/Sync_edges/#tprime-remapping","text":"","title":"TPrime: Remapping"},{"location":"Help/SyncEdges/Sync_edges/#general_1","text":"After recording, spike sorting, TTL extraction...Now you need to convert all these times from the native timelines of the data streams in which they were measured to a common reference timeline. That's the only way you can compare them! That's what TPrime does. TPrime uses three types of files: tostream : The reference stream we will map to. It is defined by a file of sync wave edges as extracted by CatGT. There is only one of these. fromstream : A native stream we will map from. There can be several of these. A fromstream is identified by a file of sync wave edges extracted by CatGT, and, an arbitrary positive integer that is a shorthand for that stream, just so you don't have to type the edge-file-path over and over. events file : These are times you want to convert. Typically you will have a different file for every event class, such as all the spikes from probe zero, or all the nose_poke times from the NI stream. On the command line for each such file you will specify the stream index for the matching fromstream, an input file of native times, a new file path for the output times.","title":"General"},{"location":"Help/SyncEdges/Sync_edges/#events-files","text":"Key specs for events files: Input and output file type can be .txt or .npy (Kilosort). You can mix types: txt in, npy out, etc. Times are seconds, they are not sample numbers . Times are relative to the start of the file. Times are in ascending order.","title":"Events files"},{"location":"Help/SyncEdges/Sync_edges/#worked-example","text":"","title":"Worked example"},{"location":"Help/SyncEdges/Sync_edges/#outline","text":"Here we'll show actual command lines for CatGT and TPrime. We'll use a very simple contrived experiment for concreteness. Two probes {0,1}. Two non-neural NI signals {go_cue, nose_poke}.","title":"Outline"},{"location":"Help/SyncEdges/Sync_edges/#spikeglx-settings","text":"We focus here on SpikeGLX settings relevant to the CatGT/TPrime command lines... Imec Setup tab: (probe 0) :: Save chans : 0-49,200-249,768 ; 2 blocks of 50 channels + SY (probe 1) :: Save chans : all NI Setup tab: Primary device :: XA box: 0 ; go_cue as analog just to demonstrate Primary device :: XD box: 2,3 ; 2=nose_poke, 3=sync Common analog :: AI range : -5, 5 Maps :: Channels to save : all Sync tab: Square wave source :: Imec slot 3 Inputs :: Nidq : Digital bit, 3 Triggers tab Trigger mode : Immediate start ; single file, record upon button press Save tab: Run naming :: Data directory :: D:/Data Run naming :: Run name : demo Run naming :: Folder per probe : checked","title":"SpikeGLX settings"},{"location":"Help/SyncEdges/Sync_edges/#spikeglx-output","text":"D:/data/ ; data folder demo/ ; run folder demo_g0_imec0/ ; probe folder demo_g0_t0.imec0.ap.bin demo_g0_t0.imec0.ap.meta demo_g0_t0.imec0.lf.bin demo_g0_t0.imec0.lf.meta demo_g0_imec1/ ; probe folder demo_g0_t0.imec1.ap.bin demo_g0_t0.imec1.ap.meta demo_g0_t0.imec1.lf.bin demo_g0_t0.imec1.lf.meta demo_g0_t0.nidq.bin ; ni at top of run folder demo_g0_t0.nidq.meta","title":"SpikeGLX output"},{"location":"Help/SyncEdges/Sync_edges/#catgt-command-line","text":"I broke the line into several groups using continuation characters (^) but doing so is aesthetic only. The comments (;) must not appear in real commands. IMPORTANT : In real command lines there should be NO extra spaces inserted into the text of options, NOR following a caret (^) character. > CatGT ^ -dir=D:/data -run=demo -prb_fld ^ ; run naming -g=0 -t=0,0 ^ ; g and t range -ap -prb=0,1 -ni ^ ; which streams -apfilter=butter,12,300,9000 ^ ; filters -xa=0,0,0,1.1,0,25 ^ ; go_cue = 25 ms square pulse -xd=0,0,1,2,0 ^ ; nose_poke duration unknown -dest=D:/CGT_OUT ^ ; let's put output in new place -out_prb_fld ; and use an output folder per probe","title":"CatGT command line"},{"location":"Help/SyncEdges/Sync_edges/#catgt-output","text":"D:/CGT_OUT/ ; master output folder catgt_demo_g0/ ; run output folder demo_g0_imec0/ ; probe folder demo_g0_tcat.imec0.ap.bin ; filtered data for KS2 demo_g0_tcat.imec0.ap.meta demo_g0_tcat.imec0.ap.xd_100_6_500.txt ; sync edges demo_g0_imec1/ ; probe folder demo_g0_tcat.imec1.ap.bin ; filtered data for KS2 demo_g0_tcat.imec1.ap.meta demo_g0_tcat.imec1.ap.xd_384_6_500.txt ; sync edges demo_g0_tcat.nidq.xa_0_25.txt ; go_cue demo_g0_tcat.nidq.xd_1_2_0.txt ; nose_poke demo_g0_tcat.nidq.xd_1_3_500.txt ; sync edges","title":"CatGT output"},{"location":"Help/SyncEdges/Sync_edges/#kilosort-2-output","text":"Suppose we tell KS2 to put its output into the same folders as the CatGT output. Of course we run KS2 once for each probe. The output from KS2 is then: D:/CGT_OUT/ ; master output folder catgt_demo_g0/ ; run output folder demo_g0_imec0/ ; probe folder amplitudes.npy channel_map.npy ... spike_times.npy ; this is in samples ... whitening_mat_inv.npy demo_g0_imec1/ ; probe folder amplitudes.npy channel_map.npy ... spike_times.npy ; this is in samples ... whitening_mat_inv.npy","title":"Kilosort 2 output"},{"location":"Help/SyncEdges/Sync_edges/#samples-to-times","text":"Most spike sorters report spike times as sample indices so we'll need our own mini program to convert those to times in seconds. The program: Loads array spike_times.npy . Parses value imSampRate from the metadata file. Divides the rate into each array element. Writes the times out in same folder as spike_seconds.npy . Metadata parsers are available here . IMPORTANT: npy files usually store the values as doubles which preserves full numeric precision. Whenever you are saving clock rates or event times as text, be sure to write the values to microsecond-level precision. Keep six digits in the fractional part.","title":"Samples to times"},{"location":"Help/SyncEdges/Sync_edges/#tprime-command-line","text":"Let's map all times to probe-0: > TPrime -syncperiod=1.0 ^ -tostream=D:/CGT_OUT/catgt_demo_g0/demo_g0_imec0/demo_g0_tcat.imec0.ap.xd_100_6_500.txt ^ -fromstream=1,D:/CGT_OUT/catgt_demo_g0/demo_g0_imec1/demo_g0_tcat.imec1.ap.xd_384_6_500.txt ^ -fromstream=2,D:/CGT_OUT/catgt_demo_g0/demo_g0_tcat.nidq.xd_1_3_500.txt ^ -events=1,D:/CGT_OUT/catgt_demo_g0/demo_g0_imec1/spike_seconds.npy,D:/CGT_OUT/catgt_demo_g0/demo_g0_imec1/spike_seconds_adj.npy ^ -events=2,D:/CGT_OUT/catgt_demo_g0/demo_g0_tcat.nidq.xa_0_25.txt,D:/CGT_OUT/catgt_demo_g0/go_cue.txt ^ -events=2,D:/CGT_OUT/catgt_demo_g0/demo_g0_tcat.nidq.xd_1_2_0.txt,D:/CGT_OUT/catgt_demo_g0/nose_poke.txt","title":"TPrime command line"},{"location":"Help/SyncEdges/Sync_edges/#scripted-pipeline","text":"It can be daunting to get all these command lines correct. You might want to check out Jennifer Colonell's version of the Allen Institute ecephys_spike_sorting pipeline. This Python script-driven pipeline chains together: CatGT, KS2, Noise Cluster Tagging, C_Waves, QC metrics, TPrime. It's been tested a lot here at Janelia and several other institutions. fin","title":"Scripted pipeline"},{"location":"Help/catgt_tshift/catgt_tshift/","text":"CatGT: Tshift, CAR, Gfix Tshift Imec probes digitize the voltages on all of their channels during each sample period (~ 1/(30kHz)). However, the converting circuits (ADCs) are expensive in power and real estate, so there are only a few dozen on the probe and they are shared by the ~384 channels. The channels are organized into multiplex channel groups that are digitized together, consequently each group's actual sampling time is slightly offset from that of other groups. CatGT automatically applies an operation we call tshift to undo the effects of multiplexing by temporally aligning channels to each other. This improves the results of operations that compare or combine different channels, such as global CAR filtering or whitening. The FFT-based correction method was proposed by Olivier Winter of the International Brain Laboratory. Figure: Licking artifact (fast transient on all channels), 1200 uV full-scale: Figure panels (from SpikeGLX FileViewer): Left: Raw traces; 100 ms time span. Middle: Raw traces zoomed-in; 1 ms time span. Right: Aligned by CatGT tshift; 1 ms time span. Artifact Corrections {CAR, Gfix} CAR (CatGT -gblcar option) Global common average referencing (CAR) calculates (for each sample) the average over all channels, and then subtracts that from each channel. This does a great job of cancelling artifacts that are indeed similar on all channels and that haven't saturated on any channels. Zeroing (CatGT -gfix option) Sometimes the hardware experiences a large electrical insult that affects all channels in a nonuniform way. This may arise from licking, chewing, head banging or laser stimulation events. In these cases CAR won't work as well. CatGT can detect these events and replace them with zeros. This option is specified, for example, as follows: -gfix=0.40,0.10,0.02 . This requires that a transient artifact must attain a peak amplitude of at least ||0.40 mV||, must reach its peak as least as rapidly as ||0.1mV/sample-tick||, and the transient is over when the amplitude settles back to ||0.02 mV|| or smaller. These values are easy to read by inspecting examples with the SpikeGLX FileViewer. Furthermore, at least 25% of the channels must show a transient with these characteristics. Such timepoints are flagged. After all other filtering has been applied, the data are edited to replace the artifact span with zeros in all channels. It does make sense to use -gblcar and -gfix options together. Editing removes extreme artifacts completely, while CAR removes common background noise at all timepoints, not just at extrema. Figure: Variety of artifacts spanning all channels, 240 uV and 100 ms full-scale: Figure panels (from SpikeGLX FileViewer): Left: Uncorrected. Middle: -gblcar; Smaller artifacts removed. Right: -gblcar -gfix; All artifacts removed. What is global demux (gbldmx)? The CatGT gbldmx option separates the channels into groups that are sampled concurrently so suffer no time shifts within the group. CAR is then performed on a group by group basis which has advantages and disadvantages compared to doing (tshift + gblcar). Disadvantages: Because the number of channels in a multiplex group is small the averages are noisier than we can achieve by tshifting all channels into one large group and applying CAR after that. Outlier channels have a stronger biasing effect with smaller sample sizes. The correction factors tend to be larger (small channel count in denominator) than with CAR, and that can produce overcorrection artifacts that look like spikes (often small inverted spikes). When to use gbldmx: The probe sampling rate is 30 kHz, so noise faster than 15 kHz is not adequately sampled, and therefore, not accurately propagated to other channel groups by the tshift operation. So for very fast noise artifacts, gbldmx may produce better cancellation within each subsampling group. gbldmx usually outperforms gblcar when tshift is omitted. You may want to omit tshift in CatGT, using the -no_tshift option, if tshift will be applied by some later component in your analysis pipeline. What is local CAR (loccar)? CatGT offers the option to do local CAR over a ring of channels. The idea is that for each channel a disk is used to average the signal of neighbor channels, but an inner disk (containing a potential spike footprint) is excluded from the average. You get to specify the inner and outer disk radii in units of channels. The downsides to this are: Its hard to tune the disk sizes to the actual spike footprints, especially if the probe spans several brain regions with different characteristic neuron sizes, and considering that neurons are at a variety of distances from the probe. Although loccar appears to have good noise reduction, more often than not the true spike amplitude is more severely attenuated because the footprint is larger than you expect. When to use loccar: If background is not uniform over the whole probe. If the probe spans dissimilar brain regions, you may do better averaging more locally. Try setting a fairly large outer radius to balance locality vs smoothness. What about LFP? Tshift is valuable for aligning LFP channels. CAR is not recommended when analyzing low frequencies: LFP varies slowly over the whole shank, making distant channels a bad reference for correcting noise. fin","title":"CatGT: Tshift, CAR, Gfix"},{"location":"Help/catgt_tshift/catgt_tshift/#catgt-tshift-car-gfix","text":"","title":"CatGT: Tshift, CAR, Gfix"},{"location":"Help/catgt_tshift/catgt_tshift/#tshift","text":"Imec probes digitize the voltages on all of their channels during each sample period (~ 1/(30kHz)). However, the converting circuits (ADCs) are expensive in power and real estate, so there are only a few dozen on the probe and they are shared by the ~384 channels. The channels are organized into multiplex channel groups that are digitized together, consequently each group's actual sampling time is slightly offset from that of other groups. CatGT automatically applies an operation we call tshift to undo the effects of multiplexing by temporally aligning channels to each other. This improves the results of operations that compare or combine different channels, such as global CAR filtering or whitening. The FFT-based correction method was proposed by Olivier Winter of the International Brain Laboratory. Figure: Licking artifact (fast transient on all channels), 1200 uV full-scale: Figure panels (from SpikeGLX FileViewer): Left: Raw traces; 100 ms time span. Middle: Raw traces zoomed-in; 1 ms time span. Right: Aligned by CatGT tshift; 1 ms time span.","title":"Tshift"},{"location":"Help/catgt_tshift/catgt_tshift/#artifact-corrections-car-gfix","text":"CAR (CatGT -gblcar option) Global common average referencing (CAR) calculates (for each sample) the average over all channels, and then subtracts that from each channel. This does a great job of cancelling artifacts that are indeed similar on all channels and that haven't saturated on any channels. Zeroing (CatGT -gfix option) Sometimes the hardware experiences a large electrical insult that affects all channels in a nonuniform way. This may arise from licking, chewing, head banging or laser stimulation events. In these cases CAR won't work as well. CatGT can detect these events and replace them with zeros. This option is specified, for example, as follows: -gfix=0.40,0.10,0.02 . This requires that a transient artifact must attain a peak amplitude of at least ||0.40 mV||, must reach its peak as least as rapidly as ||0.1mV/sample-tick||, and the transient is over when the amplitude settles back to ||0.02 mV|| or smaller. These values are easy to read by inspecting examples with the SpikeGLX FileViewer. Furthermore, at least 25% of the channels must show a transient with these characteristics. Such timepoints are flagged. After all other filtering has been applied, the data are edited to replace the artifact span with zeros in all channels. It does make sense to use -gblcar and -gfix options together. Editing removes extreme artifacts completely, while CAR removes common background noise at all timepoints, not just at extrema. Figure: Variety of artifacts spanning all channels, 240 uV and 100 ms full-scale: Figure panels (from SpikeGLX FileViewer): Left: Uncorrected. Middle: -gblcar; Smaller artifacts removed. Right: -gblcar -gfix; All artifacts removed.","title":"Artifact Corrections {CAR, Gfix}"},{"location":"Help/catgt_tshift/catgt_tshift/#what-is-global-demux-gbldmx","text":"The CatGT gbldmx option separates the channels into groups that are sampled concurrently so suffer no time shifts within the group. CAR is then performed on a group by group basis which has advantages and disadvantages compared to doing (tshift + gblcar). Disadvantages: Because the number of channels in a multiplex group is small the averages are noisier than we can achieve by tshifting all channels into one large group and applying CAR after that. Outlier channels have a stronger biasing effect with smaller sample sizes. The correction factors tend to be larger (small channel count in denominator) than with CAR, and that can produce overcorrection artifacts that look like spikes (often small inverted spikes). When to use gbldmx: The probe sampling rate is 30 kHz, so noise faster than 15 kHz is not adequately sampled, and therefore, not accurately propagated to other channel groups by the tshift operation. So for very fast noise artifacts, gbldmx may produce better cancellation within each subsampling group. gbldmx usually outperforms gblcar when tshift is omitted. You may want to omit tshift in CatGT, using the -no_tshift option, if tshift will be applied by some later component in your analysis pipeline.","title":"What is global demux (gbldmx)?"},{"location":"Help/catgt_tshift/catgt_tshift/#what-is-local-car-loccar","text":"CatGT offers the option to do local CAR over a ring of channels. The idea is that for each channel a disk is used to average the signal of neighbor channels, but an inner disk (containing a potential spike footprint) is excluded from the average. You get to specify the inner and outer disk radii in units of channels. The downsides to this are: Its hard to tune the disk sizes to the actual spike footprints, especially if the probe spans several brain regions with different characteristic neuron sizes, and considering that neurons are at a variety of distances from the probe. Although loccar appears to have good noise reduction, more often than not the true spike amplitude is more severely attenuated because the footprint is larger than you expect. When to use loccar: If background is not uniform over the whole probe. If the probe spans dissimilar brain regions, you may do better averaging more locally. Try setting a fairly large outer radius to balance locality vs smoothness.","title":"What is local CAR (loccar)?"},{"location":"Help/catgt_tshift/catgt_tshift/#what-about-lfp","text":"Tshift is valuable for aligning LFP channels. CAR is not recommended when analyzing low frequencies: LFP varies slowly over the whole shank, making distant channels a bad reference for correcting noise. fin","title":"What about LFP?"}]}