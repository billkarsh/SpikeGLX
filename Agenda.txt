// RELEASE NOTES
// ==========================

20230905
--------
+ Add ShankView right-click menu.

20230815
--------
+ API 3.62.
+ Support metal cap 2.0 (NP2014) probes.
+ Add low latency mode.
+ Now have -<Tn> and -<Tx> offset subtraction.
+ Improve open metadata error reporting.
+ Add SaveChannels: autofill to implanted depth.

20230425
--------
+ Fix Whisper ShankView.
+ Fix remote call to set audio parameters.
+ Fix running multiple sim probes.
+ FileViewer handles CatGT AP -> LF files.
+ Graphs can stack vertically.
+ Imro editor gets up to 16 boxes.
+ Imro editor warning box "Can't apply edit if recording."
+ Improve csv export of imec SY channel.
+ Widen survey transition boundaries.
+ Add filtered IM stream buffers.
+ Improve SNR for {audio, ShankViewer, surveys}.
+ Support 2B internal ground reference.
+ Add probe error flags to metadata.
+ Add tip-length to metadata.
+ Add remote call getGeomMap().
+ Pinpoint anatomy stored in metadata.
+ Pinpoint anatomy colors shanks.
+ Pinpoint anatomy colors traces.

20230411
--------
+ API 3.60.
+ Fix running both PH2B docks.
+ Fix probe table memory bug.
+ Fix editing missing imro file.
+ Fix simulating missing lfp file.
+ Fix timestamps on probe settings.
+ Allow negative FileViewer file offsets.
+ Allow zero-sample remote fetches.

20230326
--------
+ API 3.59.
+ Support probes {2003,2004,2013,2014}.
+ Extended probe metadata.
+ Add FileViewer file offset feature.
+ Add firmware version alert.

20230323
--------
+ Fix crash when selecting LFP in ShankViewer.
+ Improve ShankViewer window state memory.

20230320
--------
+ Fix Rows-per-box mistake in the shank editor.

20230202
--------
+ Fix single-threaded configuration of simulated probes.
+ Fix viewing of LFP survey files.
+ More realistic shank views.
+ Remove ~snsShankMap (probe cartoon) from imec metadata.
+ Add ~snsGeomMap (true probe geometry) to imec metadata.
+ Add passive probe part number dialog.

20230120
--------
+ Revert to single-threaded probe configuration.

20230101
--------
+ API 3.57.

20221220
--------
+ API 3.56.
+ Fix TTL misses trigger if gate open long time.
+ FileViewer yPix saved for each stream type.
+ Improve multistream error messages.
+ Support NHP probes {1011, 1012, 1013, 1015, 1016}.
+ Support NHP probes {1022, 1032}.
+ Support UHD probes {1120, 1121, 1122, 1123}.
+ Support headstages {NPNH_HS_31}.
+ Support all SN 2047xxx headstages.

20221212
--------
+ Fix editing of passive UHD IMROs.

20221031
--------
+ Fix imec sync SMA input.
+ Fix IMRO editor boxes selector bug.
+ Fix shankMap handling for NI files.
+ Improve Graphs window slider paging.
+ Add LFP filter to Graphs window.
+ Add FileViewer command to view metafile.
+ Add ~muxTbl entry to probe metadata.
+ Add sim slots.
+ Add sim probes.

20221012
--------
+ API 3.52 fixes newer HS detection issue.

20220101
--------
+ API 3.51.
+ Fix NI channel counting.
+ Fix NI AI buffer sizing.
+ Fix remote gate/trigger server.
+ LF metadata gets ~snsShankMap.
+ Enable HST for 1.0.
+ Update Par2 tool.
+ Write firstSample earlier in run.
+ LF FileViewer understands CatGT downsampled AP.
+ Improve NI analog input accuracy.
+ Improve BinMax speed.
+ Improve Configuration dialog UI.
+ Improve run startup dialog.
+ Improve graph label visibility.
+ Improve help.
+ Edit run notes from Graphs Window.
+ ShankViewers now floating windows.
+ FileViewer gets ShankViewer.
+ Add probe Survey mode.
+ Add graphical IMRO editing.
+ Add IMRO editing to online/offline ShankViewers
+ Add OneBox support.
+ Add MATLAB OneBox support.
+ Add MATLAB opto-probe support.
+ Add MATLAB probe param getters and setters.
+ Add MATLAB OneBox param getters and setters.
+ Simplify/optimize MATLAB remote interface.
+ Add C++ remote API.
+ Remote APIs now separate downloads.
+ MATLAB users must reinstall @SpikeGL and CalinsNetMex.mexw64.

20201103
--------
+ Make Update Firmware dialog more modal.
+ Improve lagging trigger error report.
+ Update docs.

20201024
--------
+ Improve firmware update reliability.
+ Update HST unimplemented message.

20201012
--------
+ API 3.31.
+ Add support for NP1010 and NP1100 probes.
+ Improve text in firmware update dialog.
+ Improve text in BIST dialog.

20200513
--------
+ Initial NP 3.0.
+ Improve table editors.
+ Improve firmware update progress bar.
+ Fix crash when delete and re-add slots.
+ Fix "Sample Rates From Run."
+ Add new imro selectors.
+ Add FileViewer graph statistics.
+ FileViewer can open any 3A or later run.
+ ShankMap editor handles zero neural channels.
+ Change names of firmware files: "BS_FPGA_XXX, "QBSC_FPGA_XXX."

20200309
--------
+ Add multidisk run splitting.
+ Can now select/explore disk top level directory.
+ MATLAB better handling of Windows path strings.

20191001
--------
+ "Sample Rates From Run" now updates LF.
+ CAR filters applied whole-probe, not shank-by-shank.
+ Fix NI DI and PFI channel counting.
+ Fix ShankViewer crash if shift or right-click.
+ Fix linking of exported files in FileViewer.
+ Remove SY entry from exported snsShankMap.
+ Graphs Window default now user order.
+ Improve FileViewer slider tracking.
+ Improve short timespan graphing.

20190919
--------
+ API v2.11.
+ Fix SYNC, now fully functional.
+ Fix 4-shank tip and internal refs.
+ Fix calibration run file naming.
+ Fix select NI for sync if not enabled.
+ Fix ShankView LFP option.
+ Trigger context margin now half stream length.

20190911
--------
+ Invert sign of AP band data.
+ Fix 'AP + LF' bandpass filter in Graphs window.

20190724
--------
+ Initial NP 2.0.
+ BIST tests not implemented.
+ HST  tests not implemented.
+ HS has no EEPROM to remember its serial number.
+ IMRO editors load externally made maps.
+ Right-click-in-graph config editing has 60s delay.
+ Module SYNC connector is INPUT ONLY.

20190413
--------
+ Better parsing of file paths.
+ TTL settings now remember stream correctly.
+ Fix MATLAB SDK: DemoReadSGLXData.m/ChanGainsIM().
+ IMRO: Select block anywhere on shank.
+ NI supports 653X DIO devices.
+ Time trigger: negative L overlaps files.
+ Headstage tester (HST) now supported.

20190327
--------
+ Fix parsing of filenames with dots.
+ Fix MATLAB GetImProbeSN command.
+ Add MATLAB GetImProbeCount command.
+ Add MATLAB GetImVoltageRange command.
+ Add MATLAB MapSample command.
+ Add MATLAB file-writing beeps.
+ NI Clock Source dialog gets settle time variable.

20190305
--------
+ Fix negative g-index from Graphs window.
+ Fix max rate query for some NI devices.
+ Support up to 32 NI multifunction DI channels.
+ Time trigger realigns each file.
+ Optional confirmation on Disable Recording.
+ Right-click/Refresh Graphs command.
+ Add MATLAB SetNextFileName command.
+ Imec SMA always an input unless specifically set as sync output.

20190214
--------
+ Cleaner stops when disabling recording.
+ Optional LF-AP save-channel pairing.
+ Always save sync channel.
+ Smarter continuation run naming.
+ Folder per run.
+ Folder per probe option.

20180829
--------
+ Fix TTL trigger bug.
+ NI works with PXI, M, X devices.
+ 3B2 (PXI) is 64-bit.
+ Updates to MATLAB API.
+ Calibrated sample rates stored in _Calibration.
+ ImecProbeData folder renamed to _Calibration.
+ configs folder renamed to _Configs.
+ Add 'Window/Run Metrics'.
+ Add 'Window/More Traces'.
+ More accurate disk speed estimates.
+ Offline BinMax stepping is selectable.
+ Log reports caller CPU.
+ Better show/hide window behavior.

20180715
--------
+ Introduce imec probe cal policy.
+ Fix test for existing run dir.
+ Fix test for existing run name.
+ Name NI devices anything you want.
+ Add MATLAB 'connectionClosed' warningid.
+ Add MATLAB query for imec probe SN/type.

20180515
--------
+ Fix FileViewer imec.lf crash.

20180415
--------
+ Graph Window stream selectors.
+ Fix FileViewer <T> filter.
+ Gate/Trigger server gets enable checkbox.
+ Brighter sweep cursor.
+ More accurate disk space calculator.
+ Update Qled components.
+ Update license notices.

20180325
--------
+ Fix file writing when gate auto-enabled at run start.
+ Fix inaccurate Acquisition clock.
+ Fix imro per-channel AP filter (flip sense).
+ Fix imro gain 3000 setting.
+ Fix MATLAB SetParams, StartRun, GetRunName.
+ Fix MATLAB connection timeouts.
+ Improve graph filters.
+ FileViewer gets right-click shankMap editing.
+ Steadier view when changing Graphs:chans_per_page.
+ Enable Recording button shown by default.

20180316
--------
+ Fix problem triggering on imec without nidq.
+ Change imec yielding and error 15 handling.

20170903
--------
+ FVW fix ~TRG label.
+ FVW prettier graph resizing.
+ FVW selected span readout.
+ Graph labels easier to read.
+ Audio fix scaling bug.
+ Audio fix freezing bug.
+ Improve Par2 Cancel operation.
+ Config dialog checks ColorTTL settings.
+ Data fetching more efficient.
+ Enhanced error handling and logging.
+ New stream synchronization features.
+ Fix Imec FIFO queue filling problem.
+ Improve nidq dual-device settings logic.

20170814
--------
+ Fix new bug configuring only nidq stream.

20170808
--------
+ Fix bug in TTL trigger.
+ Begin hidden multistream work.

20170724
--------
+ Improve look and abort function of run startup dialog.
+ Fix bug in Timed trigger when gate is closed-reopened.
+ Fix bug setting audio highpass filter from MATLAB.
+ Add MATLAB SetMetaData function.

20170501
--------
+ Audio output for either stream.
+ Smoother quitting of runs upon Imec errors.
+ Menu items to Explore run dir, app dir.
+ Force gets 'Explore ImecProbeData' button.
+ Force '11 -> 9' button sets probe option.
+ FileViewer gets channel submenus.
+ Add MATLAB GettingStarted.txt.
+ Improve 'Metadata.html' discussion.

20170315
--------
+ Fix FileViewer bug drawing nidq aux channels.
+ Current <G T> file labels added to Graphs window.
+ Better graph label legibility.
+ Better BinMax (spike drawing) signal-to-noise.
+ Include 'Metadata.html' explaining tags.
+ Include MATLAB code for parsing output files.
+ Remember screen layout.

20161201
--------
+ Prettier dialogs that resize:
+    Config, IM-Force, IMROTable, ShankMaps, ChanMaps,
+    CmdServer, RemoteServer, Help,
+    AO, FVWOptions, BIST, PAR2.
+ Add shank viewer help text.
+ Graphs get save and AO indicators.
+ Right-click graphs to edit sort order.
+ Right-click graphs to edit saved channels.
+ Right-click graphs to colorize TTL events.
+ Sort graphs along shank: forward or reverse order.
+ User notes field on Config::Save tab.
+ User notes in metadata and FileViewer.
+ FileViewer Zoom in/out key commands.
+ FileViewer Zoom by ctrl-click & drag.
+ FileViewer Set Export Range now shift-click & drag.
+ FileViewer gets option to manually update graphs.
+ Extend TTL triggering to imec and nidq digital lines.
+ Improved graph time axis accuracy.

20161101
--------
+ Increase FVW YScale to 999.
+ Gray config items if stream disabled.
+ Improve ShankMap editors.
+ Add ShankMap viewers.

20160806
--------
+ Fix enabled state of "Edit On/Off" R-click item.
+ Fix filters to obey order: Flt:<T>:<S>:BinMax.

20160805
--------
+ More predictable file starts in Timed trigger mode.
+ Rename graphing option "-DC" to "-<T>".
+ Add -<T> option to online NI stream.
+ Add default ShankMap backing spatial channel averaging.
+ Add -<S> option to online streams.
+ Add -<S> option to offline viewers.
+ Split Config SNS tab into Map and Save tabs.
+ Add ShankMap file support.
+ Add ShankMap editors.
+ Can order ChanMap according to ShankMap.
+ Imec internal refs: UI to turn off option 3 chans.
+ Right-click graphs to edit imro table or on/off.
+ Make sure R-click changes update ShankMap.

20160703
--------
+ Imec v4.3.
+ Fix spelling error.
+ Update doc texts.
+ Better ChanMap editor.
+ FVW can hide all.
+ FVW can edit ChanMap.
+ FVW better channel selection.
+ FVW fix export ChanMap.
+ FVW fix export time span.

20160701
--------
+ Clean up Imec startup.
+ Fix AO initialization.
+ Correct MATLAB docs.
+ Better default server addresses.
+ Metafile written before and after.
+ Meta gets firstCt time stamp.
+ File viewer opens any stream type.
+ Better FVW UI for graph and time ranges.
+ Faster FVW param setters and dragging.
+ FVW linking.
+ FVW help text.

20160601
--------
+ MATLAB: GetFileStartCount.
+ Fix TTL trigger bug.

20160515
--------
+ Imec v4.2.
+ Add option to disable LEDs.
+ Imec diagnostics (BIST) dialog.
+ Update Imec start sequence.
+ More AO filter options.
+ Fix AO deadlock.
+ Render digital channels.
+ Nicer default values.

20160511
--------
+ Update help text.

20160505
--------
+ Add BinMax checkbox.
+ Fix AO dialog issue.
+ Split Imec data files.
+ Gate start waits for sample arrival.
+ Improve stream sync in all triggers.
+ Add recording time display.

20160502
--------
+ Retire DataFile::badData.
+ Fix bug in TTL trigger type.
+ Better handling of "?" button.
+ Add remote sort order query.

20160501
--------
+ ADC/gain handling for broken EEPROMs.
+ More accurate time displays.

20160408
--------
+ Imec support at v4.1.
+ (ADC calib, optional gain calib, sync input).
+ Imec setup panel gets force identity button.

20160404
--------
+ Reenable spike and TTL triggers.
+ Recast trigger pause as gate override.
+ MATLAB: SetTrgEnable -> SetRecordingEnable.

20160401
--------
+ Imec support at v3.5 (ADC calibration).
+ Detect if USB NI device connected.
+ Multiple SpikeGLX can run but one owns NI.
+ Errors bring console window to top.
+ Config dialog gets disk space calculator.

20160305
--------
+ Fix timing issue with USB NI-DAQ.
+ Disable Imec ref disconnection.
+ Flesh out SN field of imro table.
+ Add trigger stream selector.
+ Prelim work on spike trigger, still disabled.

20160304
--------
+ Imec support at v3.4 (faster startup, improved reference signal routing).
+ Fix run startup bug.
+ Fix DC subtraction bug.
+ Fix NI digital channel issue.
+ Message if set bank out of range.
+ Right-click to edit Imec settings.

20160302
--------
+ Correctly set Bank 0.
+ Start including SpikeGLX-MATLAB-SDK in release.

20160301
--------
+ Imec support.
+ Start releasing SpikeGLX.exe and SpikeGLX_NISIM.exe.
+ SpikeGLX folder requires "libNeuropix_basestation_api.dll".
+ Configuration dialog gets {Devices, IM Setup} Tabs.
+ Updated run pause/resume options moved from Triggers Tab to Gates Tab.
+ Data are processed in two parallel "streams": Imec stream, nidq stream.
+ Each stream generates own datafiles {.imec.bin, .imec.meta} {.nidq.bin, .nidq.meta}.
+ Some renaming of metadata items to distinguish stream type.
+ Each stream gets own channel map and own save-channel string.
+ Each stream gets own Graphs window viewer pane.
+ All graphing uses pages of stacked traces.
+ New Graphs window Run Toolbar layout.
+ NI viewer gets low-pass filter option.
+ MATLAB API modified to fetch from either imec or nidq stream.
+ Online help text rewritten.

Temporarily disabled:
- Spike trigger option.
- TTL trigger option.
- AO for Imec channels.
- Offline file viewer for Imec files.
- Graphs window save-channel checkboxes.

20160101
--------
- Introduces "multi-trace" MGraph class set and a revised FVW to use, test
and develop that. MGraph is a QGLWidget (or QOpenGLWidget) that draws
unlimited numbers of traces in a vertical stack arrangement. MGraph can
be child of any QWidget, or can be used as the viewport of an MScroll
(subclasses QAbstractScrollArea) as we are in FVW.
- Fix bug: SpikeGLX hangs on remote setTrgEnable command.
- Fix bug: Remote setRunName doesn't handle _g_t tags correctly.
- Data files now get double extension '.nidq.bin', '.nidq.meta'.
- Offline file viewer enabled.

20151231
--------
Function set very close to original SpikeGL. Major UI difference is disabled
fileViewerWindow (FVW) because the model of one GLGraph per channel creates
too many graphics objects. This version is effectively same as "prerelease"
versions distributed around Janelia and elsewhere.


// QT VERSIONS
// ==========================

SpikeGLX Phase3A and earlier:   Qt5.3.2  MinGW4.8.2 32bit.
Phase3B1 SpikeGLX:              Qt5.10.1 MinGW5.3.0 32bit.
Phase20 and Phase3B2 SpikeGLX:  Qt5.12.0 MinGW7.3.0 64bit.
Phase30 SpikeGLX (build):       Qt5.12.0 MinGW7.3.0 64bit.
Phase30 SpikeGLX (tested):      Qt5.15.1 MinGW8.1.0 64bit.


// LOOSE ENDS
// ==========================

- Remote queries about dataFile objects are ill-advised or
(better?) forbidden.


// DOCUMENTATION
// ==========================

- Revisit all BK: notes.

- More structure docs.

- Review documentation of file formats.


// UI IMPROVEMENT
// ==========================

-GW TODO:
    - Imec !filter currently adds (AP+LF)...but superposition better.

- IMEC TODO:
    - Imec can be run alone using software or hardware start, or get
        hardware start from nidaq (need to break D0 out from Whisper!).

- Save/load parameter sets by name (also remotely). Perhaps a single
file or package? Perhaps a master catalog file pointing to others?


// NEW FEATURES
// ==========================

- Lee group asks for specified channel to act as reference for all others.

- Brian asks for FVW to output measurements like FFT or RMS on each channel.
Perhaps add an Analysis menu.

- GateCtl gets more modes?

- GateCtl should provide option to put acq hardware resets on gate
lo-hi and hi-lo edges. This is to counter analog intan saturation.

- Should allow configuring user digital-out on threshold crosses, like
evt saving modes with {aiChan, doChan, thresh, W, duration, indef}.

- Jeremy Cohen suggest two interesting trigger modes:
(1) Rate trigger (to detect activity periods w/ chronic implants) wherein
recording starts (perievtwindow) iff x-percent of given channel subset is
firing with rate > R.

(2) Ripple mode (sharp waves) wherein recording starts (perievtwindow)
iff x-percent of given channel subset is firing (not necessarily at a high
rate, but...) within a time window of width W.

- Consider HDF5 file format.


// MISC NOTES
// ==========================

- Compiling with C++11:
    - Try CONFIG += c++11
    - Try QMAKE_CXXFLAGS += -std=c++11

- Pixmap (xpm) editing notes:
(1) Copy existing .xpm to linux.
(2) Open .xpm in Inkscape, edit/save as .svg.
(3) Open .svg in GIMP, save as xpm.
(4) Open .xpm in kwrite, change array type to 'static const char * const'.

- Typical/high aux channel usage might be 6-12 analog in, 16 digital in.

- Use CniAcqDmx to monitor load. If nWhole count increasing beyond expected,
save restore states of {graph-pause, AO-enable}. This may help on systems
with fewer cores.

- Thread count is main load and best hardware is probably quad+ core.
As always, higher clock rate is better. Next issue is spooling data to
same disk as main OS activities. Better to have dedicated data drive.

- Nice test for cursor in window frame:
//    if( mywindow->frameGeometry().contains( QCursor::pos() )
//        && !mywindow->geometry().contains( QCursor::pos() ) ) {
//
//        // do something
//    }


